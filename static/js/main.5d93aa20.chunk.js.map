{"version":3,"sources":["redux/hooks.ts","compositions/Helmet/Helmet.tsx","components/Button/Button.tsx","redux/stores/metadata/metadataApi.ts","redux/stores/metadata/metadataActions.ts","errors/appError.ts","entities/CollectionToken/CollectionTokenHelpers.ts","helpers/json.ts","redux/stores/metadata/metdataHelpers.ts","redux/stores/metadata/metadataSlice.ts","hooks/useWeb3ReactLibrary.ts","hooks/useEnsAddress.ts","redux/stores/web3/web3Api.ts","redux/stores/web3/web3Slice.ts","constants/rpc.ts","constants/nativeCurrency.ts","web3-connectors/chainInfo.ts","web3-connectors/helpers.ts","web3-connectors/coinbase.ts","web3-connectors/walletConnect.ts","web3-connectors/connections.ts","web3-connectors/injected.ts","components/Icon/icons/IconAirswap.tsx","components/Icon/icons/IconArrowDown.tsx","components/Icon/icons/IconArrowLeft.tsx","components/Icon/icons/IconArrowRight.tsx","components/Icon/icons/IconBars.tsx","components/Icon/icons/IconBin.tsx","components/Icon/icons/IconCampaign.tsx","components/Icon/icons/IconCheck.tsx","components/Icon/icons/IconChevronDown.tsx","components/Icon/icons/IconChevronRight.tsx","components/Icon/icons/IconChevronUpDown.tsx","components/Icon/icons/IconClose.tsx","components/Icon/icons/IconCloseCircleOutline.tsx","components/Icon/icons/IconCode.tsx","components/Icon/icons/IconContactSupport.tsx","components/Icon/icons/IconCopy.tsx","components/Icon/icons/IconCopy2.tsx","components/Icon/icons/IconDarkModeSwitch.tsx","components/Icon/icons/IconDeny.tsx","components/Icon/icons/IconDiscord.tsx","components/Icon/icons/IconEdit.tsx","components/Icon/icons/IconForbidden.tsx","components/Icon/icons/IconGithub.tsx","components/Icon/icons/IconInformationCircleOutline.tsx","components/Icon/icons/IconLaunch.tsx","components/Icon/icons/IconLibrary.tsx","components/Icon/icons/IconLink.tsx","components/Icon/icons/IconLogout.tsx","components/Icon/icons/IconMarkerCheck.tsx","components/Icon/icons/IconMedium.tsx","components/Icon/icons/IconMenu.tsx","components/Icon/icons/IconPending.tsx","components/Icon/icons/IconPlus.tsx","components/Icon/icons/IconSearch.tsx","components/Icon/icons/IconStar.tsx","components/Icon/icons/IconSwap.tsx","components/Icon/icons/IconSwapHorizontal.tsx","components/Icon/icons/IconTelegram.tsx","components/Icon/icons/IconTransaction.tsx","components/Icon/icons/IconTwitter.tsx","components/Icon/icons/IconVote.tsx","components/Icon/icons/IconX.tsx","components/Icon/Icon.tsx","compositions/IconButton/IconButton.tsx","web3-connectors/walletProviders.ts","widgets/WalletConnector/subcomponents/WalletProviderList/subcomponents/WalletProviderButton/WalletProviderButton.tsx","widgets/WalletConnector/subcomponents/WalletProviderList/WalletProviderList.tsx","widgets/WalletConnector/WalletConnector.tsx","helpers/string.ts","components/Avatar/Avatar.tsx","components/WalletInfo/WalletInfo.tsx","routes.ts","compositions/MobileMenu/MobileMenu.tsx","compositions/IconNavLink/IconNavLink.tsx","compositions/UserPopup/UserPopup.tsx","compositions/TopBar/TopBar.tsx","compositions/Page/Page.tsx","helpers/ethers.ts","hooks/useDefaultProvider.ts","components/Input/Input.tsx","components/SearchInput/SearchInput.tsx","components/LoadingSpinner/LoadingSpinner.tsx","compositions/EmptyState/EmptyState.tsx","components/NftCard/NftCard.tsx","components/NftCardSkeleton/NftCardSkeleton.tsx","types/FullOrderState.ts","entities/FullOrder/FullOrderHelpers.ts","containers/OrdersContainer/subcomponents/OrdersListItem/OrdersListItem.tsx","containers/OrdersContainer/OrdersContainer.tsx","hooks/useCollectionImage.ts","helpers/crypto.ts","types/ToastType.ts","redux/stores/toasts/toastsSlice.ts","redux/stores/toasts/toastsActions.ts","hooks/useCollectionTokens.ts","hooks/useScrollToBottom.ts","entities/FullOrder/FullOrderTransformers.ts","redux/stores/indexer/indexerHelpers.ts","constants/indexer.ts","helpers/array.ts","helpers/indexers.ts","redux/stores/collection/collectionSlice.ts","redux/stores/collection/collectionApi.ts","widgets/CollectionWidget/helpers/getListCallToActionText.ts","widgets/CollectionWidget/subcomponents/CollectionPortrait/CollectionPortrait.tsx","widgets/CollectionWidget/subcomponents/ConnectedCollectionWidget/ConnectedCollectionWidget.tsx","widgets/CollectionWidget/subcomponents/DisconnectedCollectionWidget/DisconnectedCollectionWidget.tsx","widgets/CollectionWidget/CollectionWidget.tsx","pages/CollectionPage/CollectionPage.tsx","widgets/DebugWidget/DebugWidget.tsx","pages/DebugPage/DebugPage.tsx","redux/stores/listNft/listNftApi.ts","types/ExpiryTimeUnit.ts","constants/expiry.ts","entities/SubmittedTransaction/SubmittedTransaction.ts","helpers/input.ts","entities/SubmittedTransaction/SubmittedTransactionHelpers.ts","redux/stores/transactions/transactionsSlice.ts","hooks/useApproveNftTransaction.ts","hooks/useCollectionToken.ts","types/IndexedOrderResult.ts","hooks/useIndexedOrderResult.ts","hooks/useInsufficientAmount.ts","errors/swapError.ts","errors/rpcError.ts","errors/transformUnknownErrorToAppError.ts","errors/ethersProjectError.ts","errors/numericFaultError.ts","errors/rpcSignRejectedError.ts","errors/rpcErrorWithSwapErrorCode.ts","redux/stores/orders/ordersApi.ts","hooks/useNftTokenApproval.ts","helpers/airswap/getRoundedAtomicString.ts","helpers/createOrderSignature.ts","redux/stores/listNft/listNftSlice.ts","redux/stores/listNft/listNftActions.ts","redux/stores/orders/ordersSlice.ts","redux/stores/orders/ordersActions.ts","redux/stores/transactions/transactionsActions.ts","widgets/ListNftWidget/hooks/useTokenAmountAndFee.ts","widgets/ListNftWidget/subcomponents/ListActionButtons/ListActionButtons.tsx","components/ExpiryIndicator/ExpiryIndicator.tsx","components/ReviewNftDetails/ReviewNftDetails.tsx","components/ReviewTokenDetails/ReviewTokenDetails.tsx","components/TradeDetails/TradeDetails.tsx","compositions/CopyLinkButton/CopyLinkButton.tsx","compositions/Dropdown/subcomponents/DropdownButton/DropdownButton.tsx","compositions/Dropdown/Dropdown.tsx","compositions/Dropdown/helpers/getDropdownOptionsTranslateY.ts","compositions/SelectExpiry/SelectExpiry.tsx","compositions/SelectExpiry/helpers/index.ts","compositions/SelectNftButton/SelectNftButton.tsx","compositions/TradeTokenInput/TradeTokenInput.tsx","compositions/TradeTokenInput/helpers/transformInputEventToValue.ts","compositions/TransactionLink/TransactionLink.tsx","compositions/SelectNft/subcomponents/SelectNftListButton.tsx","compositions/SelectNft/SelectNft.tsx","compositions/SelectNft/helpers/filterTokenBySearchValue.ts","compositions/SelectNftButton/helpers/getSelectNftOptions.ts","connectors/ConnectedNftSelector/ConnectedNftSelector.tsx","widgets/ListNftWidget/subcomponents/SwapIcon/SwapIcon.tsx","widgets/ListNftWidget/subcomponents/ListNftDetailsContainer/ListNftDetailsContainer.tsx","helpers/browser.ts","widgets/ListNftWidget/subcomponents/ListNftWidgetHeader/ListNftWidgetHeader.tsx","widgets/ListNftWidget/helpers/index.ts","widgets/ListNftWidget/subcomponents/ConnectedListNftWidget/ConnectedListNftWidget.tsx","widgets/ListNftWidget/subcomponents/DisconnectedListNftWidget/DisconnectedListNftWidget.tsx","widgets/ListNftWidget/ListNftWidget.tsx","pages/ListNftPage/ListNftPage.tsx","components/Details/Details.tsx","helpers/date/getDifferenceBetweenDatesInTimeUnits.ts","hooks/useAddressOrEnsName.ts","containers/ActivityListContainer/subcomponents/NftDetailActivityItem/NftDetailActivityItem.tsx","helpers/date/getTimeBetweenTwoDates.ts","containers/ActivityListContainer/ActivityListContainer.tsx","entities/NftTransactionLog/NftTransactionLogTransformers.ts","redux/stores/nftActivity/nftActivityApi.ts","redux/stores/nftActivity/nftActivityHelpers.ts","redux/stores/nftActivity/nftActivitySlice.ts","connectors/ConnectedActivityList/ConnectedActivityList.tsx","compositions/Dialog/Dialog.tsx","containers/OwnersContainer/subcomponents/OwnersListItem/OwnersListItem.tsx","containers/OwnersContainer/OwnersContainer.tsx","entities/Address/AddressTransformers.ts","helpers/ens.ts","redux/stores/owners/ownersApi.ts","redux/stores/owners/ownersSlice.ts","connectors/ConnectedOwnersList/ConnectedOwnersList.tsx","hooks/useNftTokenOwners.ts","redux/stores/nftDetail/nftDetailSlice.ts","redux/stores/nftDetail/nftDetailApi.ts","widgets/NftDetailWidget/subcomponents/NftDetailAttributeCard/NftDetailAttributeCard.tsx","widgets/NftDetailWidget/subcomponents/NftDetailAttributes/NftDetailAttributes.tsx","widgets/NftDetailWidget/subcomponents/NftDetailList/NftDetailList.tsx","widgets/NftDetailWidget/subcomponents/NftDetailMainInfo/NftDetailMainInfo.tsx","widgets/NftDetailWidget/subcomponents/NftDetailPortrait/NftDetailPortrait.tsx","widgets/NftDetailWidget/subcomponents/NftDetailProceedButton/NftDetailProceedButton.tsx","widgets/NftDetailWidget/subcomponents/NftDetailSaleInfo/NftDetailSaleInfo.tsx","helpers/date/getExpiryTranslation.ts","widgets/NftDetailWidget/subcomponents/ConnectedNftDetailWidget/ConnectedNftDetailWidget.tsx","widgets/NftDetailWidget/subcomponents/DisconnectedNftDetailWidget/DisconnectedNftDetailWidget.tsx","widgets/NftDetailWidget/NftDetailWidget.tsx","pages/NftDetailPage/NftDetailPage.tsx","compositions/OrderWidgetHeader/OrderWidgetHeader.tsx","compositions/DisconnectedOrderDetail/DisconnectedOrderDetail.tsx","redux/stores/orderDetail/orderDetailApi.ts","hooks/useFullOrderNonceUsed.ts","hooks/useApproveCurrencyTokenTransaction.ts","hooks/useFullOrderExpired.ts","hooks/useInsufficientBalance.ts","hooks/useOrderTransaction.ts","hooks/useSufficientErc20Allowance.ts","widgets/BuyNftWidget/subcomponents/BuyActionButtons/BuyActionButtons.tsx","components/TradeNftDetails/TradeNftDetails.tsx","widgets/BuyNftWidget/subcomponents/BuyNftWidgetDetailsContainer/BuyNftWidgetDetailsContainer.tsx","widgets/BuyNftWidget/helpers/index.ts","widgets/BuyNftWidget/subcomponents/ConnectedBuyNftWidget/ConnectedBuyNftWidget.tsx","widgets/BuyNftWidget/subcomponents/DisconnectedBuyNftWidget/DisconnectedBuyNftWidget.tsx","widgets/BuyNftWidget/BuyNftWidget.tsx","hooks/useCancelOrderTransaction.ts","widgets/CancelOrderWidget/subcomponents/CancelActionButtons/CancelActionButtons.tsx","components/ExpiryDateInfo/ExpiryDateInfo.tsx","widgets/CancelOrderWidget/subcomponents/CancelDetailsContainer/CancelDetailsContainer.tsx","widgets/CancelOrderWidget/subcomponents/ConnectedCancelOrderWidget/ConnectedCancelOrderWidget.tsx","widgets/CancelOrderWidget/helpers/index.ts","widgets/CancelOrderWidget/subcomponents/DisconnectedCancelOrderWidget/DisconnectedCancelOrderWidget.tsx","widgets/CancelOrderWidget/CancelOrderWidget.tsx","widgets/OrderDetailWidget/subcomponents/ConnectedOrderDetailWidget/ConnectedOrderDetailWidget.tsx","widgets/OrderDetailWidget/OrderDetailWidget.tsx","pages/OrderDetailPage/OrderDetailPage.tsx","helpers/airswap/getOwnedTokensByAccountUrl.ts","widgets/ProfileWidget/subcomponents/ProfileNavigationNavLink/ProfileNavigationNavLink.tsx","widgets/ProfileWidget/subcomponents/ProfileNavigation/ProfileNavigation.tsx","widgets/ProfileWidget/subcomponents/ProfileHeader/ProfileHeader.tsx","widgets/ProfileWidget/subcomponents/DisconnectedProfileWidget/DisconnectedProfileWidget.tsx","redux/stores/profileOrders/profileOrdersSlice.ts","redux/stores/profileOrders/profileOrdersApi.ts","widgets/ProfileOrdersWidget/helpers/getListCallToActionText.ts","widgets/ProfileOrdersWidget/subcomponents/ConnectedProfileOrdersWidget/ConnectedProfileOrdersWidget.tsx","widgets/ProfileOrdersWidget/ProfileOrdersWidget.tsx","pages/ProfileOrdersPage/ProfileOrdersPage.tsx","entities/TokenIdsWithBalance/TokenIdsWithBalanceTransformers.ts","redux/stores/balances/balancesHelpers.ts","redux/stores/profile/profileApi.ts","redux/stores/profile/profileSlice.ts","widgets/ProfileWidget/helpers/getEmptyTokensText.ts","widgets/ProfileWidget/subcomponents/OwnedNftsContainer/OwnedNftsContainer.tsx","widgets/ProfileWidget/subcomponents/ConnectedProfileWidget/ConnectedProfileWidget.tsx","widgets/ProfileWidget/ProfileWidget.tsx","pages/ProfilePage/ProfilePage.tsx","compositions/Routes/Routes.tsx","hooks/useMapWeb3ReactToStore.ts","entities/TokenIdsWithBalance/TokenIdsWithBalanceHelpers.ts","redux/stores/balances/balancesApi.ts","redux/stores/balances/balancesSlice.ts","hooks/useSwapEventsSubscriber.ts","hooks/useSwitchChain.ts","constants/supportedTokenKinds.ts","redux/stores/config/configApi.ts","redux/stores/config/configHelpers.ts","redux/stores/config/configSlice.ts","redux/stores/config/configHooks.ts","redux/stores/indexer/indexerApi.ts","redux/stores/indexer/indexerSlice.ts","redux/stores/indexer/indexerHooks.ts","redux/stores/metadata/metadataHooks.ts","redux/stores/transactions/transactionsHelpers.ts","redux/stores/transactions/transactionsHooks.ts","components/Toast/Toast.tsx","components/Toast/helpers/getToastIcon.ts","widgets/ToastsWidget/ToastsWidget.tsx","App.tsx","redux/stores/web3/web3Hooks.ts","helpers/alchemy.ts","redux/stores/orderDetail/orderDetailSlice.ts","redux/stores/user/userApi.ts","redux/stores/user/userSlice.ts","redux/stores/user/userSubscriber.ts","redux/store.ts","redux/stores/balances/balancesSubscriber.ts","reportWebVitals.ts","index.tsx"],"names":["useAppDispatch","useDispatch","useAppSelector","useSelector","Helmet","_ref","title","collectionName","state","config","_jsx","ReactHelmet","children","concat","Button","forwardRef","ref","type","text","className","buttonProps","getCurrencyTokenInfo","createAsyncThunk","currencyToken","library","getTokenInfo","getCollectionImageBanner","async","_response$openSeaMeta","alchemy","nft","getContractMetadata","collectionToken","openSeaMetadata","imageBannerUrl","fetchProtocolFee","provider","chainId","SwapERC20","getContract","protocolFee","toNumber","getProtocolFee","console","error","addCollectionTokenInfo","tokenInfos","dispatch","getState","collectionTokens","metadata","newCollectionTokens","reduce","acc","tokenInfo","id","setCollectionTokens","AppErrorType","isAppError","x","Object","values","includes","transformToAppError","argument","getCollectionToken","address","tokenId","getCollectionTokenInfo","e","Error","unknownError","notFound","undefined","networkError","getCollectionTokenOwners","token","contractAbi","kind","TokenKinds","ERC721","erc721AbiContract","abi","ERC1155","erc1155AbiContract","erc721AbiEnumerableContract","contract","ethers","getOwnersForNft","pageSize","owners","functions","ownerOf","then","owner","catch","isCollectionTokenInfo","resource","uri","attributes","Array","isArray","filterCollectionTokenBySearchValue","value","name","toLowerCase","parseJsonObject","JSON","parse","getCollectionTokensLocalStorageKey","collectionAddress","getCollectionImageBannerLocalStorageKey","initialState","isLoading","bannerImage","getLocalStorageCollectionImage","process","REACT_APP_COLLECTION_TOKEN_ADDRESS","item","localStorage","getItem","object","ensAddresses","projectFee","metadataSlice","createSlice","reducers","setIsLoading","action","payload","length","setItem","stringify","setEnsAddresses","extraReducers","builder","addCase","pending","fulfilled","currencyTokenInfo","rejected","image","setLocalStorageCollectionImageBanner","actions","useWeb3ReactLibrary","_library$network","useWeb3React","setLibrary","useState","useDebounce","network","useEnsAddress","lookedUpAddress","setLookedUpAddress","lookupAddress","newLookedUpAddress","useEffect","LAST_PROVIDER_LOCAL_STORAGE_KEY","clearLastProviderFromLocalStorage","web3Slice","isActive","isInitialized","libraries","showConnectModal","userHasClosedConnectModal","setWeb3Data","setConnectionType","connectionType","setIsInitialized","setLibraries","setShowConnectModal","setUserHasClosedConnectModal","setError","rpcUrls","REACT_APP_RPC_URL_1","nativeCurrencyAddress","nativeCurrency","decimals","symbol","logoURI","chainInfo","ChainIds","MAINNET","explorer","label","rpcUrl","GOERLI","onConnectionError","switchNetwork","connector","getConnection","ConnectionType","walletConnect","activate","info","addChainParameter","chainName","blockExplorerUrls","Number","chains","keys","map","filter","prioritizedConnectors","coinbase","web3CoinbaseWallet","web3CoinbaseWalletHooks","initializeConnector","CoinbaseWallet","options","appName","url","overrideIsCoinbaseWallet","onError","hooks","buildCoinbaseWalletConnector","injected","buildInjectedConnector","web3MetamaskWallet","web3MetamaskWalletHooks","MetaMask","buildWalletConnectConnector","web3WalletConnect","web3WalletConnectHooks","WalletConnect","projectId","optionalChains","chain","showQrModal","c","Connector","connection","find","IconAirswap","_jsxs","fill","viewBox","d","IconArrowDown","strokeWidth","IconArrowLeft","strokeLinecap","transform","IconArrowRight","IconBars","IconBin","IconCampaign","IconCheck","IconChevronDown","IconChevronRight","IconChevronUpDown","clipPath","IconClose","IconCloseCircleOutline","IconCode","IconContactSupport","IconCopy","IconCopy2","IconDarkModeSwitch","strokeLinejoin","IconDeny","IconDiscord","width","height","xmlns","IconEdit","IconForbidden","IconGithub","IconInformationCircleOutline","IconLaunch","IconLibrary","IconLink","IconLogout","IconMarkerCheck","IconMedium","IconMenu","IconPending","IconPlus","IconSearch","IconStar","IconSwap","IconTelegram","IconTransaction","IconTwitter","IconVote","IconX","icons","airswap","bars","bin","campaign","check","close","code","copy","copy2","deny","discord","edit","launch","logout","forbidden","github","learn","menu","medium","plus","search","star","swap","IconSwapHorizontal","telegram","transaction","twitter","vote","Icon","IconComponent","IconButton","hideLabel","icon","iconAlign","iconClassName","restProps","iconButtonClassName","classNames","walletProviders","logo","isInstalled","getHasMetaMaskExtensionInstalled","_window$ethereum$isMe","_window$ethereum2","window","ethereum","isMetaMask","getIsBraveWallet","_window$ethereum$isBr","_window$ethereum","isBraveWallet","WalletProviderButton","walletProvider","onClick","buttonText","handleClick","alt","src","WalletProviderList","onWalletProviderButtonClick","WalletConnector","onCloseButtonClick","web3","triedToEagerlyConnect","setTriedToEagerlyConnect","isActiveState","setIsActiveState","activateWallet","tryActivateConnector","getLastProviderFromLocalStorage","connectEagerly","activateWalletEagerly","handleCloseButtonClick","open","truncateAddress","account","slice","isEqualAddress","address1","address2","Avatar","avatarUrl","style","backgroundImage","WalletInfo","isBanner","accountUrl","ensAddress","avatarClassName","walletInfoClassName","href","rel","target","AppRoutes","ProfileRoutes","routes","highlightOrderNonce","listNft","nftDetail","orderDetail","orderNonce","profile","highlightTokenId","ownedNfts","userOrders","orders","activity","MobileMenu","isHidden","onNavLinkClick","mobileMenuClassName","NavLink","to","IconNavLink","UserPopup","_Fragment","TopBar","listButtonIsDisabled","mobileMenuIsVisible","showDesktopConnectButton","showDesktopUserButton","userWalletButtonIsDisabled","onConnectButtonClick","onDisconnectButtonClick","onMobileMenuButtonClick","userPopupRef","useRef","userButtonRef","isPopupOpen","setIsPopupOpen","containerClassName","handleDocumentClick","_userPopupRef$current","Node","current","contains","document","addEventListener","removeEventListener","onLogoutButtonClick","handleDisconnectClick","Page","contentClassName","user","chainIdIsCorrect","setMobileMenuIsVisible","pageClassName","handleIconButtonClick","toggleShowWalletConnector","handleDisconnectButtonClick","_connector$deactivate","deactivate","call","resetState","tryDeactivateConnector","cachedLibrary","getLibrary","useDefaultLibrary","providerChainId","useMemo","getDefaultProvider","getRpcUrl","Input","props","SearchInput","LoadingSpinner","cx","cy","r","EmptyState","hasButton","route","NftCard","isDisabled","isHighlighted","balance","expiry","imageURI","price","linkClassName","expiryTranslation","Date","cssProperties","viewTransitionName","unstable_viewTransition","toLocaleString","NftCardSkeleton","FullOrderState","getFullOrderKey","fullOrder","nonce","signer","getFullOrderSenderAmountPlusTotalFees","feePercentage","affiliateAmount","BigNumber","sender","amount","dividedBy","decimalPlaces","ROUND_UP","getFullOrderReadableSenderAmountPlusTotalFees","format","tokenDecimals","omitTrailingZeroes","getFullOrderExpiryDate","isFullOrderExpired","getFullOrderNonceUsed","order","Swap","nonceUsed","wallet","OrdersListItem","showExpiryDate","tokens","orderToken","getFullOrderLabelTranslation","expired","invalid","taken","toString","OrdersContainer","hasListCallToActionButton","isEndOfOrders","listCallToActionText","key","useCollectionImage","collectionImage","getRandomUuid","crypto","randomUUID","getRandomUuidFallback","getTime","d2","performance","now","replace","Math","random","floor","ToastType","toastsSlice","toasts","setLastToastActionButtonIdClicked","lastToastActionButtonIdClicked","setToasts","addToast","newToast","newToasts","total","toast","index","amountOfNonWillAutomaticallyHide","t","willAutomaticallyHide","updatedToast","hideToast","toastId","findIndex","updatedToasts","splice","addUserRejectedToast","addGetOrderFailedToast","fail","addInfoToast","useCollectionTokens","tokenIds","isContractCalled","setIsContractCalled","isContractLoading","setIsContractLoading","collectionTokensFromStore","tokenIdsToFetch","results","Promise","all","newError","addGetNftMetadataFailedToast","callGetCollectionToken","useScrollToBottom","scrolledToBottom","setIsScrolledToBottom","handleScroll","scrollTop","documentElement","scrollHeight","clientHeight","getFullOrderState","isTaken","isValid","isExpired","getOrdersFromServer","server","filterWithDefaults","signerToken","senderToken","sortField","Indexes","NONCE","sortOrder","Direction","DESC","getOrders","offset","limit","locator","message","getServers","allSettled","indexerUrls","Server","at","isPromiseFulfilledResult","result","sendOrderToIndexers","servers","any","addOrderHelper","resolve","reject","addOrder","response","getUndefinedAfterTimeout","getUniqueArrayChildren","array","Map","getUniqueSingleDimensionArray","indexOf","status","isOrderResponse","time","setTimeout","getOrdersFromIndexers","orderResponses","race","allOrders","flatMap","orderResponse","uniqueOrders","noncesUsed","getFullOrdersNonceUsed","BatchCall","getNoncesUsed","getAddress","validOrders","getOrdersValid","getFullOrdersIsValid","transformToExtendedFullOrder","hasServerError","isTotalOrdersReached","collectionSlice","reset","setOffset","setOrders","getCollectionOrders","newOrders","_ref2","indexer","urls","getListCallToActionText","searchValue","userHasTokens","CollectionPortrait","subTitle","ConnectedCollectionWidget","tokenIdsWithBalance","balances","collection","setSearchValue","userTokens","filteredOrders","placeholder","onChange","DisconnectedCollectionWidget","CollectionWidget","useDefaultProvider","CollectionPage","DebugWidget","isLoadingCollectionTokenKind","isLoadingCurrencyTokenKind","collectionTokenKind","currencyTokenKind","chainNames","DebugPage","getActiveUserOrders","ExpiryTimeUnit","msPerMinute","expiryAmounts","minutes","hours","days","weeks","SubmittedTransactionType","SubmittedTransactionStatus","isNftApprovalTransaction","isErc20ApprovalTransaction","isOrderTransaction","isCancelOrderTransaction","transactionsSlice","transactions","setTransactions","selectErc20ApprovalTransactions","selectNftApprovalTransactions","selectCancelOrderTransactions","selectOrderTransactions","useApproveNftTransaction","hash","useCollectionToken","setCollectionToken","collectionTokenFromStore","IndexedOrderResult","useIndexedOrderResult","lastSentOrder","lastFailedOrder","setResult","indexerError","failed","orderIndexFailed","success","useInsufficientAmount","parseFloat","swapErrors","transformSwapErrorToAppError","expiryPassed","nonceAlreadyUsed","senderAllowanceLow","senderBalanceLow","signerAllowanceLow","signerBalanceLow","signatureInvalid","unauthorized","unpredictableGasLimit","isRpcError","errorCodes","rpc","transformRpcErrorToAppError","rejectedByUser","unsupportedMethod","disconnected","chainDisconnected","invalidInput","invalidRequest","approveCallerIsNotOwner","transformUnknownErrorToAppError","isEthersProjectError","invalidAddress","invalidValue","transformEthersProjectErrorToAppError","isNumericFaultErrorError","fault","arithmeticUnderflow","reason","transformNumericFaultErrorErrorToAppError","isRpcSignRejectedError","transformRpcSignRejectedErrorToAppError","isRpcErrorWithSwapErrorCode","reasonError","swapError","transformRpcErrorWithSwapErrorCodeToAppError","isSwapError","erc20Interface","utils","Interface","erc20Contract","erc721Interface","erc721Contract","erc1155Interface","erc1155Contract","getNftTokenApproved","baseToken","tokenKind","contractAddress","isApprovedForAll","getApproved","getContractApproved","Contract","getSigner","useNftTokenApproval","isApproved","setIsApproved","timer","clearTimeout","setInterval","approved","callGetNftTokenApproved","clearInterval","toRoundedAtomicString","arguments","roundedNumber","multipliedBy","toAtomicString","lastUserOrderLocalStorageKey","localStorageLastUserOrder","lastUserOrder","isLoadingUserOrders","listNftSlice","setUserOrder","clearLastUserOrder","createNftOrder","params","rejectWithValue","senderAmount","senderTokenInfo","unsignedOrder","createOrder","signerWallet","signerTokenInfo","ERC20","signature","createOrderSignature","swapContract","airswapCreateOrderSignature","reRequestTimerId","ordersSlice","clear","setReRequestTimerId","take","approve","tx","approveAmount","constants","MaxUint256","approveErc20Token","setApprovalForAll","approveNftToken","erc20Approval","processing","timestamp","addNftApprovalTransaction","nftApproval","senderWallet","checkErrors","count","errors","checkResultToErrors","checkOrder","takeOrder","addOrderTransaction","cancel","_ref3","cancelOrder","addCancelTransaction","useTokenAmountAndFee","hasInsufficientAmount","feeAmount","minus","ListActionButtons","hasInsufficientExpiryAmount","hasNoCollectionTokenApproval","activeUserOrder","onActionButtonClick","onBackButtonClick","classnames","ListNftState","tokenAlreadyListedWarning","getActionButton","useCallback","disabled","details","review","sign","ExpiryIndicator","unit","ReviewNftDetails","ReviewTokenDetails","amountMinusProtocolFee","projectFeePercent","protocolFeePercent","TradeDetails","amountSubtext","readableAmount","significantFigures","CopyLinkButton","DropdownButton","option","buttonClassName","Dropdown","selectedOption","onBlur","onFocus","dropdownButtonClassName","dropdownButtonBackgroundClassName","mobileSelectIconClassName","wrapperRef","optionsRef","activeOptionIndex","setActiveOptionIndex","activeHoverIndex","setActiveHoverIndex","optionsTranslateY","_optionsRef$current","_wrapperRef$current","getDropdownOptionsTranslateY","optionsHeight","wrapperY","activeIndex","optionsLength","minTranslateY","max","translateY","getBoundingClientRect","y","handleButtonBlur","currentTarget","focus","onMouseOver","onPointerDown","newSelectedOption","SelectExpiry","timeUnit","onAmountChange","onTimeUnitChange","expiryOptions","unitOption","min","parseInt","SelectNftButton","TradeTokenInput","protocolFeeInCurrencyToken","onInputChange","inputMode","autoComplete","pattern","minLength","maxLength","spellCheck","newValue","test","transformInputEventToValue","TransactionLink","SelectNftListButton","isListed","isPreview","balanceElementRef","useElementSize","buttonClassNames","cssVariables","SelectNft","loadingTokens","onClickNft","onScroll","viewedTokens","setViewedTokens","debouncedViewedTokens","setDebouncedViewedTokens","filteredTokens","filterTokenBySearchValue","getSelectNftOptions","getViewedTokens","element","_ref$current","firstChild","itemHeight","startIndex","endIndex","ceil","some","ConnectedNftSelector","selectedToken","allTokens","setTokens","tokenInfoIsLoading","newTokens","sort","a","b","SwapIcon","ListNftDetailContainer","collectionTokenInfo","currencyTokenAmount","currencyTokenAmountMinusProtocolFee","expiryAmount","expiryTimeUnit","submittedApproval","selectedTokenId","widgetState","onExpiryAmountChange","onExpiryTimeUnitChange","onSelectedNftChange","onSelectNftButtonClick","onTradeTokenInputChange","wrapperClassNames","approvalUrl","getReceiptUrl","selectNft","link","location","host","navigator","clipboard","writeText","writeTextToClipboard","approving","indexing","ListNftWidgetHeader","getTitle","ConnectedListNftWidget","defaultSelectedTokenId","ordersError","listNftError","setWidgetState","setSelectedTokenId","setCurrencyTokenAmount","setExpiryTimeUnit","setExpiryAmount","approvalTransactionHash","setApprovalTransactionHash","setOrder","hasCollectionTokenApproval","approveTransaction","indexedOrderResult","userOrder","handleBackButtonClick","succeeded","handleSelectNftButtonClick","firstCharacter","lastCharacter","firstCharacterIsPeriod","bigNumber","numberStringWithoutDecimals","split","number","minimalAllowedValue","substring","toMaxAllowedDecimalsNumberString","approveNft","unwrap","transactionHash","expiryDate","DisconnectedListNftWidget","hasNoUserTokens","ListNftWidget","searchParams","useSearchParams","useLocation","isBalancesInitialized","userTokenIdsWithBalance","isMetadataLoading","isIndexerInitialized","get","ListNftPage","Details","summary","detailsProps","useWindowSize","getDifferenceBetweenDatesInTimeUnits","date1","date2","seconds","differenceInSeconds","differenceInMinutes","differenceInHours","differenceInDays","differenceInWeeks","months","differenceInMonths","years","differenceInYears","useAddressOrEnsName","shouldTruncate","fallback","truncateEthAddress","useLayoutEffect","NftDetailActivityItem","log","readableAddressName","recipient","transactionLink","timeAgo","formatter","Intl","RelativeTimeFormat","numeric","getTimeBetweenTwoDates","ActivityListContainer","isEndOfList","logs","onScrolledToBottom","scrollRef","wrapperClassName","handleElementScroll","getNftTransactionReceipts","pageKey","nftActivity","getNftSales","SortingOrder","DESCENDING","blockNumber","getBlockNumber","nftSales","nftSale","transformNftSalesToNftTransactionLog","currentBlockNumber","blockDifference","sellerAddress","buyerAddress","from","newLogs","transferFilter","filters","Transfer","events","queryFilter","transactionReceipts","event","getTransactionReceipt","transactionReceiptBlocks","receipt","getBlock","transactionReceipt","transformTransactionReceiptToNftTransactionLog","getErc721Logs","NftActivitySlice","ConnectedActivityList","isEnabled","page","setPage","handleScrolledToBottom","Dialog","onClose","dialogProps","contentRef","onclick","eventPath","eventTarget","path","push","parentElement","generateEventPath","OwnersListItem","listItemClassName","ens","OwnersContainer","listRef","scrollTo","handleListScroll","inputs","internalType","stateMutability","outputs","getEnsNamesForAddresses","addresses","getNames","getEnsNames","getErc1155OwnerAddresses","sales","newOwners","responses","combinedOwners","transformToAddress","newEnsAddresses","forEach","transformAddressesToEnsAddressesMap","ownersSlice","ConnectedOwnersList","dialogRef","showModal","useNftTokenOwners","setOwner","ownersLength","setOwnersLength","callGetCollectionTokenOwner","isOrderNotFound","transactionLogs","nftDetailSlice","setTokenId","getNftOrderByTokenId","signerId","NftDetailAttributeCard","NftDetailAttributes","attrs","attribute","NftDetailList","standard","fee","getAccountUrl","NftDetailMainInfo","accountRoute","description","onOwnersButtonClick","Link","NftDetailPortrait","NftDetailProceedButton","accountIsOwner","listRoute","orderRoute","navLink","NftDetailSaleInfo","getExpiryTranslation","compareAsc","formatDistanceLocale","xMinutes","xHours","xDays","xWeeks","locale","formatDistance","daysRemainder","hoursRemainder","minutesRemainder","formatDuration","ConnectedNftDetailWidget","activityListRef","isPriceLoading","showOwnersModal","toggleShowOwnersModal","useToggle","showActivityList","setShowActivityList","isOwnerLoading","readableOwnerAddress","showButton","observer","IntersectionObserver","entries","entry","isIntersecting","observe","unobserve","DisconnectedNftDetailWidget","isNftNotFound","isNetworkError","NftDetailWidget","isLoadingBalances","isLoadingCollectionTokenInfo","NftDetailPage","useParams","OrderWidgetHeader","nftId","DisconnectedOrderDetail","isOrderNonceUndefined","getNftOrderByOrderNonce","useFullOrderNonceUsed","usePolling","isNonceUsed","setIsNonceUsed","getNonceUsedCall","useApproveCurrencyTokenTransaction","useFullOrderExpired","orderExpiry","setIsExpired","useInsufficientBalance","currencyTokenBalance","store","lt","useOrderTransaction","pendingOrders","useSufficientErc20Allowance","currencyTokenAllowance","hasSufficientAllowance","setHasSufficientAllowance","gte","BuyActionButtons","hasNoCurrencyTokenApproval","isOrderExpired","isOrderNonceUsed","ownerIsAccount","currencyTokenSymbol","BuyNftState","buying","TradeNftDetails","BuyNftWidgetDetailsContainer","submittedOrder","pricePlusFees","nftDetailsIcon","getNftDetailsIcon","orderUrl","BuyNftWidget","hasInsufficientBalance","hasSufficientCurrencyAllowance","orderTransaction","approveErc20","DisconnectedBuyNftWidget","configChainId","handleConnectWalletClick","handleSwitchChainClick","isCollectionTokenInfoLoading","isNonceUsedLoading","ConnectedBuyNftWidget","useCancelOrderTransaction","CancelActionButtons","CancelOrderState","ExpiryDateInfo","CancelDetailsContainer","submittedTransaction","transactionUrl","readableSenderAmountPlusFees","readableSenderAmount","getFullOrderReadableSenderAmount","canceling","ConnectedCancelOrderWidget","cancelTransactionHash","setCancelTransactionHash","cancelOrderTransaction","DisconnectedCancelOrderWidget","CancelOrderWidget","ConnectedOrderDetailWidget","userIsOwner","OrderDetailWidget","isIndexerLoading","isOrderLoading","OrderDetailPage","getOwnedTokensByAccountUrl","etherScanUrl","ProfileNavigationNavLink","ProfileNavigation","ProfileHeader","ConnectedProfileWidget","profileAccount","profileSlice","setOrdersOffset","getProfileOrders","userHasOrders","ConnectedProfileOrdersWidget","profileOrders","userIsProfileAccount","ProfileOrdersWidget","DisconnectedProfileWidget","ProfileOrdersPage","transformTokensToTokenIdsWithBalance","getOwnedErc721TokensByFilteringEvents","walletAddress","foundTokenIds","_e$args","args","uniqueTokenIds","sub","tokenOwners","ownedTokenIds","_","getOwnedTokensByAlchemy","getNftsForOwner","contractAddresses","withMetadata","ownedNft","getOwnedTokenIdsOfWallet","isErc721Enumerable","isErc721","isErc1155","supportsInterface","erc721EnumerableContract","balanceOf","tokenIdsPromises","i","tokenOfOwnerByIndex","getOwnedErc721EnumerableTokensByFilteringEvents","getProfileTokens","_ref4","isLoadingOrders","isLoadingTokens","tokensOffset","setTokensOffset","getEmptyStateText","OwnedNftsContainer","isEndOfTokens","tokenOrder","isLoadingUserTokens","sortedOwnedTokenIds","tokensError","emptyStateText","ProfileWidget","ProfilePage","Routes","router","createHashRouter","Navigate","RouterProvider","useMapWeb3ReactToStore","setCachedLibrary","fetchCurrencyTokenBalance","walletBalances","collectionTokenAddress","fetchCurrencyTokenAllowance","tokenAllowance","fetchUserTokens","balancesSlice","isLoadingAllowances","setAllowance","setBalance","useSwapEventsSubscriber","lastSoldOrder","setLastSoldOrder","newProfileOrders","newUserTokens","subtractTokenBalance","tokenIdToSubstract","updatedUserTokens","setProfileOrders","onSwap","signerAmount","signerTokenId","senderTokenId","noop","on","off","useSwitchChain","lastToastId","setLastToastId","warning","hideCloseButton","actionButtonText","supportedCollectionTokenKinds","supportedCurrencyTokenKinds","getCollectionTokenKind","getCollectionTokenKindHelper","getCurrencyTokenKind","erc20AbiContract","totalSupply","getCurrencyTokenKindHelper","isFailed","isSuccessful","storageServerUrl","configSlice","setIsSuccessful","initialize","Registry","getServerURLs","Protocols","Indexing","indexerSlice","setLastFailedOrder","setLastSentOrder","useIndexers","lastOrder","sendAndClearLastOrder","useMetadata","parsedObject","getLocalStorageCollectionTokens","getTransactionsLocalStorageKey","getLocalStorageTransactions","parseJsonArray","handleTransactionReceipt","updatedTransaction","transactionIndex","updatedTransactions","useTransactions","activeListenerHashes","setActiveListenerHashes","localStorageKey","newListenerHashes","listenForTransactionReceipt","once","Toast","onHide","setHeight","elementRef","toastClassName","iconName","toastType","timeoutId","handleActionButtonClick","ToastsWidget","debouncedCleanupToasts","debounce","cleanupToasts","handleToastHide","reverse","ConnectedApp","useConfig","useWeb3","App","Web3ReactProvider","connectors","OrderDetailSlice","fetchAvatarByAddress","blob","fetch","base64","convertBase64ToBlob","URL","createObjectURL","reader","FileReader","onerror","onload","readAsDataURL","convertBlobToBase64","userSlice","configureStore","reducer","balancesReducer","collectionReducer","configReducer","indexerReducer","listNftReducer","metadataReducer","nftActivityReducer","nftDetailReducer","ordersReducer","orderDetailReducer","ownersReducer","profileReducer","profileOrdersReducer","toastsReducer","transactionsReducer","userReducer","web3Reducer","configureBalancesSubscriber","lastTransactionHash","subscribe","lastTransaction","lastSucceededTransaction","lastTransactionHashKey","getLastTransactionHashLocalStorageKey","configureUserSubscriber","userAccount","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Alchemy","apiKey","REACT_APP_ALCHEMY_API_KEY","Network","ETH_MAINNET","ETH_GOERLI","getAlchemyChain","ReactDOM","render","React","StrictMode","Provider","getElementById"],"mappings":"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","file":"static/js/main.5d93aa20.chunk.js","sourcesContent":["import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\n\nimport type { AppDispatch, RootState } from './store';\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { FC, ReactElement } from 'react';\n\nimport { Helmet as ReactHelmet } from 'react-helmet';\n\nimport { useAppSelector } from '../../redux/hooks';\n\ninterface HelmetProps {\n  title?: string;\n}\n\nconst Helmet: FC<HelmetProps> = ({ title }): ReactElement => {\n  const { collectionName } = useAppSelector((state) => state.config);\n\n  return (\n    <ReactHelmet>\n      <title>{`${collectionName} ${title ? `- ${title}` : ''}`}</title>\n    </ReactHelmet>\n  );\n};\n\nexport default Helmet;\n","import {\n  forwardRef,\n  ForwardRefExoticComponent,\n  ReactElement,\n  Ref,\n  RefAttributes,\n} from 'react';\n\nimport './Button.scss';\n\ntype HTMLButtonProps = JSX.IntrinsicElements['button'];\n\nexport interface ButtonProps extends HTMLButtonProps {\n  text?: string;\n}\n\nexport type ButtonWithRefProps = ButtonProps & RefAttributes<HTMLButtonElement>;\n\nconst Button: ForwardRefExoticComponent<ButtonWithRefProps> = forwardRef(({\n  type = 'button',\n  text,\n  className = '',\n  children,\n  ...buttonProps\n}, ref: Ref<HTMLButtonElement>): ReactElement => (\n  <button\n    {...buttonProps}\n    ref={ref}\n    type={type} // eslint-disable-line react/button-has-type\n    className={`button ${className}`}\n  >\n    {children || text}\n  </button>\n));\n\nexport default Button;\n","import { SwapERC20 } from '@airswap/libraries';\nimport { getTokenInfo } from '@airswap/metadata';\nimport { TokenInfo } from '@airswap/types';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\nimport { NftContract } from 'alchemy-sdk';\nimport { ethers } from 'ethers';\n\ninterface GetCurrencyTokenInfoParams {\n  currencyToken: string;\n  library: ethers.providers.BaseProvider;\n  chainId?: number;\n}\n\nexport const getCurrencyTokenInfo = createAsyncThunk<\nTokenInfo,\nGetCurrencyTokenInfoParams\n>('metadata/getCurrencyTokenInfo', ({ currencyToken, library }) => (\n  getTokenInfo(library, currencyToken)\n));\n\nexport const getProtocolFee = async (\n  chainId: number,\n  provider: ethers.providers.BaseProvider,\n): Promise<number> => {\n  const protocolFee = await SwapERC20.getContract(provider, chainId).protocolFee();\n  return protocolFee.toNumber();\n};\n\nexport const getCollectionImageBanner = createAsyncThunk<\nstring | null,\nstring\n>('metadata/getCollectionImageBanner', async (collectionToken: string) => {\n  const response: NftContract = await alchemy.nft.getContractMetadata(collectionToken);\n\n  return response.openSeaMetadata?.imageBannerUrl || null;\n});\n","import { CollectionTokenInfo } from '@airswap/types';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\nimport { ethers } from 'ethers';\n\nimport { EnsAddressesMap } from '../../../entities/Address/Address';\nimport { AppDispatch, RootState } from '../../store';\nimport { getProtocolFee } from './metadataApi';\nimport { setCollectionTokens, setEnsAddresses } from './metadataSlice';\n\nexport const fetchProtocolFee = createAsyncThunk<\nnumber,\n{\n  provider: ethers.providers.BaseProvider;\n  chainId: number;\n}\n>('metadata/fetchProtocolFee', async ({ provider, chainId }) => {\n  try {\n    return getProtocolFee(chainId, provider);\n  } catch {\n    console.error('Error getting protocol fee from contract, defaulting to 7.');\n    return 7;\n  }\n});\n\nexport const addCollectionTokenInfo = (tokenInfos: CollectionTokenInfo[]) => async (dispatch: AppDispatch, getState: () => RootState): Promise<void> => {\n  const { collectionTokens } = getState().metadata;\n\n  const newCollectionTokens = tokenInfos.reduce((acc, tokenInfo) => ({\n    ...acc,\n    [tokenInfo.id]: tokenInfo,\n  }), collectionTokens);\n\n  dispatch(setCollectionTokens(newCollectionTokens));\n};\n\nexport const addEnsAddresses = (newEnsAddresses: EnsAddressesMap) => async (dispatch: AppDispatch, getState: () => RootState): Promise<void> => {\n  const { ensAddresses } = getState().metadata;\n\n  dispatch(setEnsAddresses({\n    ...ensAddresses,\n    ...newEnsAddresses,\n  }));\n};\n","import { EthersProjectError } from './ethersProjectError';\nimport { NumericFaultError } from './numericFaultError';\nimport { RpcError } from './rpcError';\nimport { RpcSignRejectedError } from './rpcSignRejectedError';\n\nexport enum AppErrorType {\n  approveCallerIsNotOwner = 'approveCallerIsNotOwner',\n  arithmeticUnderflow = 'arithmeticUnderflow',\n  chainDisconnected = 'chainDisconnected',\n  disconnected = 'disconnected',\n  expiryPassed = 'expiryPassed',\n  invalidAddress = 'invalidAddress',\n  invalidInput = 'invalidInput',\n  invalidRequest = 'invalidRequest',\n  invalidValue = 'invalidValue',\n  networkError = 'networkError',\n  nonceAlreadyUsed = 'nonceAlreadyUsed',\n  notFound = 'notFound',\n  orderIndexFailed = 'orderIndexFailed',\n  rejectedByUser = 'rejectedByUser',\n  senderAllowanceLow = 'senderAllowanceLow',\n  senderBalanceLow = 'senderBalanceLow',\n  signerAllowanceLow = 'signerAllowanceLow',\n  signerBalanceLow = 'signerBalanceLow',\n  signatureInvalid = 'signatureInvalid',\n  unauthorized = 'unauthorized',\n  unknownError = 'unknownError',\n  unpredictableGasLimit = 'unpredictableGasLimit',\n  unsupportedMethod = 'unsupportedMethod',\n}\n\nexport type AppError = {\n  argument?: string;\n  error?:\n  | RpcError\n  | RpcSignRejectedError\n  | EthersProjectError\n  | NumericFaultError;\n  type: AppErrorType;\n};\n\nexport const isAppError = (x: any): x is AppError => (\n  typeof x === 'object'\n    && x !== null\n    && 'type' in x\n    && Object.values(AppErrorType).includes(x.type)\n);\n\nexport function transformToAppError(\n  type: AppErrorType,\n  error?: AppError['error'],\n  argument?: string,\n): AppError {\n  return {\n    argument,\n    error,\n    type,\n  };\n}\n","import { TokenKinds } from '@airswap/constants';\nimport { getCollectionTokenInfo } from '@airswap/metadata';\nimport { CollectionTokenInfo } from '@airswap/types';\nimport erc721AbiContract from '@openzeppelin/contracts/build/contracts/ERC721.json';\nimport erc721AbiEnumerableContract from '@openzeppelin/contracts/build/contracts/ERC721Enumerable.json';\nimport erc1155AbiContract from '@openzeppelin/contracts/build/contracts/ERC1155.json';\nimport * as ethers from 'ethers';\n\nimport { AppError, AppErrorType, transformToAppError } from '../../errors/appError';\n\nconst transformGetCollectionTokenErrorToAppError = (error: any): AppError => {\n  if (typeof error !== 'string') {\n    return transformToAppError(AppErrorType.unknownError);\n  }\n\n  if (error.includes('404')) {\n    return transformToAppError(AppErrorType.notFound, undefined, error);\n  }\n\n  if (error.includes('Network Error')) {\n    return transformToAppError(AppErrorType.networkError, undefined, error);\n  }\n\n  return transformToAppError(AppErrorType.unknownError);\n};\n\nexport const getCollectionToken = async (library: ethers.providers.BaseProvider, address: string, tokenId: string): Promise<CollectionTokenInfo | AppError> => {\n  let tokenInfo: CollectionTokenInfo;\n\n  try {\n    tokenInfo = await getCollectionTokenInfo(library, address, tokenId);\n  } catch (e: any) {\n    console.error(new Error(`Unable to fetch data for ${address} with id ${tokenId}. ${e}`));\n\n    return transformGetCollectionTokenErrorToAppError(e);\n  }\n\n  return tokenInfo;\n};\n\nexport const getCollectionTokenContractAbi = (kind: CollectionTokenInfo['kind']): ethers.ContractInterface => {\n  if (kind === TokenKinds.ERC721) {\n    return erc721AbiContract.abi;\n  }\n\n  if (kind === TokenKinds.ERC1155) {\n    return erc1155AbiContract.abi;\n  }\n\n  return erc721AbiEnumerableContract.abi;\n};\n\nexport const getCollectionTokenOwners = async (library: ethers.providers.BaseProvider, token: CollectionTokenInfo): Promise<string[] | undefined> => {\n  const contractAbi = getCollectionTokenContractAbi(token.kind);\n  const contract = new ethers.Contract(token.address, contractAbi, library);\n\n  if (token.kind === TokenKinds.ERC1155) {\n    const response = await alchemy.nft.getOwnersForNft(token.address, token.id, { pageSize: 101 });\n\n    return response.owners;\n  }\n\n  return contract.functions.ownerOf(token.id)\n    .then((owner: [string]) => owner)\n    .catch(() => undefined);\n};\n\nexport const isCollectionTokenInfo = (resource: any): resource is CollectionTokenInfo => (\n  resource\n    && typeof resource.chainId === 'number'\n    && typeof resource.kind === 'string'\n    && typeof resource.address === 'string'\n    && typeof resource.id === 'string'\n    && typeof resource.uri === 'string'\n    && resource.attributes && Array.isArray(resource.attributes)\n);\n\nexport const filterCollectionTokenBySearchValue = (token: CollectionTokenInfo, value: string): boolean => {\n  if (value === '') return true;\n\n  if (token.name && token.name.toLowerCase().includes(value.toLowerCase())) return true;\n\n  return token.id.includes(value);\n};\n","export const parseJsonArray = <T>(value: string): T[] => {\n  try {\n    return JSON.parse(value);\n  } catch (e) {\n    console.error('Error parsing JSON');\n\n    return [];\n  }\n};\n\nexport const parseJsonObject = <T>(value: string): T => {\n  try {\n    return JSON.parse(value);\n  } catch (e) {\n    console.error('Error parsing JSON');\n\n    return {} as T;\n  }\n};\n","import { CollectionTokenInfo } from '@airswap/types';\n\nimport { isCollectionTokenInfo } from '../../../entities/CollectionToken/CollectionTokenHelpers';\nimport { parseJsonObject } from '../../../helpers/json';\n\nexport const getCollectionTokensLocalStorageKey = (collectionAddress: string): string => `airswap-marketplace/collection-tokens/${collectionAddress}`;\n\nexport const getCollectionImageBannerLocalStorageKey = (collectionAddress: string): string => `airswap-marketplace/collection-token-image-banner/${collectionAddress}`;\n\nexport const getLocalStorageCollectionTokens = (collectionAddress: string): { [id: number]: CollectionTokenInfo } => {\n  const value = localStorage.getItem(getCollectionTokensLocalStorageKey(collectionAddress));\n  const parsedObject = value ? parseJsonObject<{ [id: number]: any }>(value) : {};\n\n  if (!Object.values(parsedObject).length) {\n    return {};\n  }\n\n  const collectionTokens: CollectionTokenInfo[] = Object.values(parsedObject)\n    .filter(isCollectionTokenInfo);\n\n  if (!collectionTokens.length) {\n    return {};\n  }\n\n  return collectionTokens\n    .reduce((total, tokenInfo) => ({\n      ...total,\n      [tokenInfo.id]: tokenInfo,\n    }), {});\n};\n\ntype LocalStorageCollectionImage = { value: string | null };\n\nexport const setLocalStorageCollectionImageBanner = (image: string | null): void => {\n  const collectionToken = process.env.REACT_APP_COLLECTION_TOKEN_ADDRESS as string;\n  const value: LocalStorageCollectionImage = { value: image };\n\n  localStorage.setItem(getCollectionImageBannerLocalStorageKey(collectionToken), JSON.stringify(value));\n};\n\nexport const getLocalStorageCollectionImage = (): string | null | undefined => {\n  const collectionToken = process.env.REACT_APP_COLLECTION_TOKEN_ADDRESS as string;\n  const item = localStorage.getItem(getCollectionImageBannerLocalStorageKey(collectionToken));\n\n  if (!item) {\n    return undefined;\n  }\n\n  const object = parseJsonObject<LocalStorageCollectionImage>(item);\n\n  return object?.value || null;\n};\n","import { TokenInfo } from '@airswap/types';\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nimport { EnsAddressesMap } from '../../../entities/Address/Address';\nimport { CollectionTokenInfoMap } from '../../../entities/CollectionToken/CollectionToken';\nimport { fetchProtocolFee } from './metadataActions';\nimport { getCollectionImageBanner, getCurrencyTokenInfo } from './metadataApi';\nimport {\n  getCollectionTokensLocalStorageKey,\n  getLocalStorageCollectionImage,\n  setLocalStorageCollectionImageBanner,\n} from './metdataHelpers';\n\nexport interface MetadataState {\n  isLoading: boolean;\n  bannerImage?: string | null;\n  currencyTokenInfo?: TokenInfo;\n  collectionTokens: CollectionTokenInfoMap;\n  ensAddresses: EnsAddressesMap\n  projectFee: number;\n  protocolFee: number;\n}\n\nconst initialState: MetadataState = {\n  isLoading: false,\n  bannerImage: getLocalStorageCollectionImage(),\n  collectionTokens: {},\n  ensAddresses: {},\n  projectFee: 0,\n  protocolFee: 7,\n};\n\nconst metadataSlice = createSlice({\n  name: 'metadata',\n  initialState,\n  reducers: {\n    setIsLoading: (state, action: PayloadAction<boolean>): MetadataState => ({\n      ...state,\n      isLoading: action.payload,\n    }),\n    setCollectionTokens: (state, action: PayloadAction<CollectionTokenInfoMap>): MetadataState => {\n      const values = Object.values(action.payload);\n\n      if (values.length) {\n        localStorage.setItem(getCollectionTokensLocalStorageKey(values[0].address), JSON.stringify(action.payload));\n      }\n\n      return {\n        ...state,\n        collectionTokens: action.payload,\n      };\n    },\n    setEnsAddresses: (state, action: PayloadAction<EnsAddressesMap>): MetadataState => ({\n      ...state,\n      ensAddresses: action.payload,\n    }),\n  },\n  extraReducers: builder => {\n    builder.addCase(getCurrencyTokenInfo.pending, (state): MetadataState => ({\n      ...state,\n      isLoading: true,\n    }));\n\n    builder.addCase(getCurrencyTokenInfo.fulfilled, (state, action): MetadataState => ({\n      ...state,\n      isLoading: false,\n      currencyTokenInfo: action.payload,\n    }));\n\n    builder.addCase(getCurrencyTokenInfo.rejected, (state, action): MetadataState => {\n      console.error(action.error);\n\n      return {\n        ...state,\n      };\n    });\n\n    builder.addCase(fetchProtocolFee.fulfilled, (state, action): MetadataState => ({\n      ...state,\n      protocolFee: action.payload,\n    }));\n\n    builder.addCase(getCollectionImageBanner.fulfilled, (state, action): MetadataState => {\n      setLocalStorageCollectionImageBanner(action.payload);\n\n      return {\n        ...state,\n        bannerImage: action.payload,\n      };\n    });\n  },\n});\n\nexport const {\n  setIsLoading,\n  setCollectionTokens,\n  setEnsAddresses,\n} = metadataSlice.actions;\n\nexport default metadataSlice.reducer;\n","import { useState } from 'react';\n\nimport { Web3Provider } from '@ethersproject/providers';\nimport { useWeb3React } from '@web3-react/core';\nimport { useDebounce } from 'react-use';\n\n// Hook for getting library from connected wallet or from rpc url, this way you can still use it in ethers.js methods\n\nconst useWeb3ReactLibrary = (): { library?: Web3Provider, chainId?: number } => {\n  const { provider } = useWeb3React();\n\n  const [library, setLibrary] = useState<Web3Provider>();\n\n  // Using debounce because useWeb3React disconnects from provider every route for a split second\n  useDebounce(() => {\n    setLibrary(provider);\n  }, 100, [provider]);\n\n  return { library, chainId: library?.network?.chainId };\n};\n\nexport default useWeb3ReactLibrary;\n","import { useEffect, useState } from 'react';\n\nimport { Web3Provider } from '@ethersproject/providers';\n\nimport { useAppDispatch, useAppSelector } from '../redux/hooks';\nimport { setEnsAddresses } from '../redux/stores/metadata/metadataSlice';\nimport useWeb3ReactLibrary from './useWeb3ReactLibrary';\n\nconst useEnsAddress = (address?: string): string | undefined => {\n  const dispatch = useAppDispatch();\n  const { library } = useWeb3ReactLibrary();\n\n  const { ensAddresses } = useAppSelector((state) => state.metadata);\n\n  const [lookedUpAddress, setLookedUpAddress] = useState<string | null>(null);\n\n  const lookupAddress = async (provider: Web3Provider, value: string) => {\n    // Note: lookupAddress only seems to work on mainnet.\n    const newLookedUpAddress = await provider.lookupAddress(value);\n    setLookedUpAddress(newLookedUpAddress);\n  };\n\n  useEffect(() => {\n    if (!library || !address) {\n      return;\n    }\n\n    if (address in ensAddresses) {\n      setLookedUpAddress(ensAddresses[address]);\n\n      return;\n    }\n\n    lookupAddress(library, address);\n  }, [library, address]);\n\n  useEffect(() => {\n    if (address && lookupAddress !== undefined) {\n      dispatch(setEnsAddresses({\n        ...ensAddresses,\n        [address]: lookedUpAddress,\n      }));\n    }\n  }, [lookedUpAddress]);\n\n  return lookedUpAddress || undefined;\n};\n\nexport default useEnsAddress;\n","import { ConnectionType } from '../../../web3-connectors/connections';\n\nconst LAST_PROVIDER_LOCAL_STORAGE_KEY = 'airswap/lastConnectedProvider';\n\nexport const saveLastProviderToLocalStorage = (type: ConnectionType) => {\n  localStorage.setItem(LAST_PROVIDER_LOCAL_STORAGE_KEY, type);\n};\n\nexport const clearLastProviderFromLocalStorage = () => {\n  localStorage.setItem(LAST_PROVIDER_LOCAL_STORAGE_KEY, '');\n};\n\nexport const getLastProviderFromLocalStorage = (): ConnectionType | undefined => {\n  const type = localStorage.getItem(LAST_PROVIDER_LOCAL_STORAGE_KEY);\n\n  if (!type) {\n    return undefined;\n  }\n\n  return type as ConnectionType;\n};\n\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nimport { ConnectionType } from '../../../web3-connectors/connections';\nimport { clearLastProviderFromLocalStorage, saveLastProviderToLocalStorage } from './web3Api';\n\n\nexport interface Web3State {\n  isActive: boolean;\n  isInitialized: boolean;\n  showConnectModal: boolean;\n  userHasClosedConnectModal: boolean;\n  account?: string;\n  chainId?: number;\n  libraries: Record<number, boolean>;\n  walletName?: string;\n  connectionType?: ConnectionType;\n  error?: Error;\n}\n\nconst initialState: Web3State = {\n  isActive: false,\n  isInitialized: false,\n  libraries: {},\n  showConnectModal: false,\n  userHasClosedConnectModal: false,\n};\n\nexport const web3Slice = createSlice({\n  name: 'web3',\n  initialState,\n  reducers: {\n    setWeb3Data: (state, action: PayloadAction<Pick<Web3State, 'isActive' | 'account' | 'chainId'>>) => ({\n      ...state,\n      ...action.payload,\n    }),\n    setConnectionType: (state, action: PayloadAction<ConnectionType | undefined>) => {\n      if (action.payload) {\n        saveLastProviderToLocalStorage(action.payload);\n      } else {\n        clearLastProviderFromLocalStorage();\n      }\n\n      return {\n        ...state,\n        connectionType: action.payload,\n      };\n    },\n    setIsInitialized: (state, action: PayloadAction<boolean>) => ({\n      ...state,\n      isInitialized: action.payload,\n    }),\n    setLibraries: (state, action: PayloadAction<Record<number, boolean>>) => ({\n      ...state,\n      libraries: action.payload,\n    }),\n    setShowConnectModal: (state, action: PayloadAction<boolean>) => ({\n      ...state,\n      showConnectModal: action.payload,\n    }),\n    setUserHasClosedConnectModal: (state, action: PayloadAction<boolean>) => ({\n      ...state,\n      userHasClosedConnectModal: action.payload,\n    }),\n    setError: (state, action: PayloadAction<Error | undefined>) => ({\n      ...state,\n      error: action.payload,\n    }),\n  },\n});\n\nexport const {\n  setConnectionType,\n  setError,\n  setIsInitialized,\n  setLibraries,\n  setShowConnectModal,\n  setUserHasClosedConnectModal,\n  setWeb3Data,\n} = web3Slice.actions;\n\nexport default web3Slice.reducer;\n","export const rpcUrls: { [chainId: number]: string | undefined } = {\n  1: process.env.REACT_APP_RPC_URL_1,\n  5: process.env.REACT_APP_RPC_URL_5,\n};\n","import { TokenInfo as AirswapTokenInfo } from '@airswap/types';\n\nexport const nativeCurrencyAddress = '0x0000000000000000000000000000000000000000';\n\ninterface TokenInfo extends Partial<AirswapTokenInfo> {\n  decimals: 18;\n  name: string;\n  symbol: string;\n}\n\nconst nativeCurrency: Record<number, TokenInfo> = {\n  1: {\n    chainId: 1,\n    address: nativeCurrencyAddress,\n    name: 'Ether',\n    decimals: 18,\n    symbol: 'ETH',\n    logoURI: 'images/ethereum-logo.png',\n  },\n  5: {\n    chainId: 5,\n    address: nativeCurrencyAddress,\n    name: 'Ether',\n    decimals: 18,\n    symbol: 'ETH',\n    logoURI: 'images/ethereum-logo.png',\n  },\n  30: {\n    chainId: 30,\n    address: nativeCurrencyAddress,\n    name: 'RBTC',\n    decimals: 18,\n    symbol: 'RBTC',\n    logoURI: 'images/rbtc-logo.png',\n  },\n  56: {\n    chainId: 56,\n    address: nativeCurrencyAddress,\n    name: 'BNB',\n    decimals: 18,\n    symbol: 'BNB',\n    logoURI: 'images/bnb-logo.png',\n  },\n  97: {\n    chainId: 97,\n    address: nativeCurrencyAddress,\n    name: 'BNB',\n    decimals: 18,\n    symbol: 'BNB',\n    logoURI: 'images/bnb-logo.png',\n  },\n  137: {\n    chainId: 137,\n    address: nativeCurrencyAddress,\n    name: 'MATIC',\n    decimals: 18,\n    symbol: 'MATIC',\n    logoURI: 'images/matic-logo.png',\n  },\n  43113: {\n    chainId: 43113,\n    address: nativeCurrencyAddress,\n    name: 'AVAX',\n    decimals: 18,\n    symbol: 'AVAX',\n    logoURI: 'images/avalanche-logo.png',\n  },\n  43114: {\n    chainId: 43114,\n    address: nativeCurrencyAddress,\n    name: 'AVAX',\n    decimals: 18,\n    symbol: 'AVAX',\n    logoURI: 'images/avalanche-logo.png',\n  },\n  80001: {\n    chainId: 80001,\n    address: nativeCurrencyAddress,\n    name: 'MATIC',\n    decimals: 18,\n    symbol: 'MATIC',\n    logoURI: 'images/matic-logo.png',\n  },\n};\n\nexport const nativeCurrencySafeTransactionFee: Partial<Record<number, number>> = {\n  1: 0.01,\n  4: 0.001,\n  5: 0.001,\n};\n\nexport default nativeCurrency;\n","import { ChainIds } from '@airswap/constants';\nimport { AddEthereumChainParameter } from '@web3-react/types';\n\nimport nativeCurrency from '../constants/nativeCurrency';\nimport { rpcUrls } from '../constants/rpc';\n\ninterface ChainInfo extends Partial<AddEthereumChainParameter> {\n  explorer: string;\n  label: string;\n  nativeCurrency: {\n    name: string;\n    symbol: string;\n    decimals: 18;\n  }\n  rpcUrl: string;\n}\n\nexport const chainInfo: { [key: string]: ChainInfo } = {\n  [ChainIds.MAINNET]: {\n    explorer: 'https://etherscan.io/',\n    label: 'Ethereum',\n    nativeCurrency: nativeCurrency[ChainIds.MAINNET],\n    rpcUrl: rpcUrls[ChainIds.MAINNET] as string,\n  },\n  [ChainIds.GOERLI]: {\n    explorer: 'https://goerli.etherscan.io/',\n    label: 'Goerli',\n    nativeCurrency: nativeCurrency[ChainIds.GOERLI],\n    rpcUrl: rpcUrls[ChainIds.GOERLI] as string,\n  },\n};\n","import { AddEthereumChainParameter, Connector } from '@web3-react/types';\n\nimport { chainInfo } from './chainInfo';\nimport { ConnectionType, getConnection } from './connections';\n\nconst getIsBraveWallet = (): boolean => window.ethereum?.isBraveWallet ?? false;\n\nexport const getHasMetaMaskExtensionInstalled = (): boolean => (window.ethereum?.isMetaMask ?? false) && !getIsBraveWallet();\n\nexport const onConnectionError = (error: Error) => {\n  console.error(`web3-react error: ${error}`);\n};\n\nexport const switchNetwork = async (chainId: number, connectionType: ConnectionType | null): Promise<void> => {\n  if (!connectionType) {\n    return;\n  }\n\n  const { connector } = getConnection(connectionType);\n\n  if (connectionType === ConnectionType.walletConnect) {\n    await connector.activate(chainId);\n\n    return;\n  }\n\n  const info = chainInfo[chainId];\n  const addChainParameter: AddEthereumChainParameter = {\n    chainId,\n    chainName: info.nativeCurrency.name,\n    rpcUrls: [info.rpcUrl],\n    nativeCurrency: info.nativeCurrency,\n    blockExplorerUrls: [info.explorer],\n  };\n  await connector.activate(addChainParameter);\n};\n\nexport const tryActivateConnector = async (connector: Connector): Promise<ConnectionType | undefined> => {\n  await connector.activate();\n\n  return getConnection(connector).type;\n};\n\nexport const tryDeactivateConnector = async (connector: Connector): Promise<null | undefined> => {\n  await connector.deactivate?.();\n  await connector.resetState();\n\n  return null;\n};\n","// eslint-disable-next-line import/no-extraneous-dependencies\nimport { CoinbaseWallet } from '@web3-react/coinbase-wallet';\nimport { initializeConnector } from '@web3-react/core';\n\nimport { rpcUrls } from '../constants/rpc';\nimport { Connection, ConnectionType } from './connections';\nimport { onConnectionError } from './helpers';\n\nconst chainId = process.env.REACT_APP_CHAIN_ID || '1';\nconst rpcUrl = chainId ? rpcUrls[Number(chainId)] : process.env.REACT_APP_RPC_URL_1;\n\nexport function buildCoinbaseWalletConnector() {\n  // @ts-ignore\n  const [web3CoinbaseWallet, web3CoinbaseWalletHooks] = initializeConnector<CoinbaseWallet>(\n    (actions) => new CoinbaseWallet({\n      actions,\n      options: {\n        appName: `${process.env.REACT_APP_COLLECTION_NAME} Marketplace`,\n        url: rpcUrl || '',\n        overrideIsCoinbaseWallet: true,\n      },\n      onError: onConnectionError,\n    }),\n  );\n  const coinbaseWalletConnection: Connection = {\n    connector: web3CoinbaseWallet,\n    hooks: web3CoinbaseWalletHooks,\n    type: ConnectionType.coinbase,\n  };\n\n  return coinbaseWalletConnection;\n}\n","import { ChainIds } from '@airswap/constants';\nimport { initializeConnector } from '@web3-react/core';\nimport { WalletConnect } from '@web3-react/walletconnect-v2';\n\nimport { Connection, ConnectionType } from './connections';\nimport { onConnectionError } from './helpers';\n\nconst chains = Object.keys(ChainIds).map(Number).filter(Number);\n\nexport const buildWalletConnectConnector = () => {\n  const [web3WalletConnect, web3WalletConnectHooks] = initializeConnector<WalletConnect>(\n    (actions) => new WalletConnect({\n      actions,\n      options: {\n        projectId: process.env.REACT_APP_WALLET_CONNECT_PROJECT_ID || '',\n        chains: [ChainIds.MAINNET, ChainIds.GOERLI],\n        optionalChains: chains.filter((chain) => chain !== ChainIds.MAINNET),\n        showQrModal: true,\n      },\n      onError: onConnectionError,\n    }),\n  );\n  const walletConnectConnection: Connection = {\n    connector: web3WalletConnect,\n    hooks: web3WalletConnectHooks,\n    type: ConnectionType.walletConnect,\n  };\n  return walletConnectConnection;\n};\n","import { Web3ReactHooks } from '@web3-react/core';\nimport { Connector } from '@web3-react/types';\n\nimport { buildCoinbaseWalletConnector } from './coinbase';\nimport { buildInjectedConnector } from './injected';\nimport { buildWalletConnectConnector } from './walletConnect';\n\nexport interface Connection {\n  connector: Connector;\n  hooks: Web3ReactHooks;\n  type: ConnectionType;\n}\n\nexport enum ConnectionType {\n  coinbase = 'coinbase',\n  injected = 'injected',\n  walletConnect = 'walletConnect',\n}\n\nexport const prioritizedConnectors: { [key in ConnectionType]: Connection } = {\n  [ConnectionType.coinbase]: buildCoinbaseWalletConnector(),\n  [ConnectionType.injected]: buildInjectedConnector(),\n  [ConnectionType.walletConnect]: buildWalletConnectConnector(),\n};\n\nexport function getConnection(c: Connector | ConnectionType): Connection {\n  if (c instanceof Connector) {\n    const connection = Object.values(prioritizedConnectors).find(connector => connector.connector === c);\n    if (!connection) {\n      throw Error('Unsupported Connector');\n    }\n\n    return connection;\n  }\n\n  if (c === ConnectionType.coinbase) {\n    return prioritizedConnectors[ConnectionType.coinbase];\n  }\n\n  if (c === ConnectionType.walletConnect) {\n    return prioritizedConnectors[ConnectionType.walletConnect];\n  }\n\n  return prioritizedConnectors[ConnectionType.injected];\n}\n","import { initializeConnector } from '@web3-react/core';\nimport { MetaMask } from '@web3-react/metamask';\n\nimport { Connection, ConnectionType } from './connections';\nimport { onConnectionError } from './helpers';\n\nexport const buildInjectedConnector = () => {\n  const [web3MetamaskWallet, web3MetamaskWalletHooks] = initializeConnector<MetaMask>(\n    (actions) => new MetaMask({ actions, onError: onConnectionError }),\n  );\n  const injectedConnection: Connection = {\n    connector: web3MetamaskWallet,\n    hooks: web3MetamaskWalletHooks,\n    type: ConnectionType.injected,\n  };\n\n  return injectedConnection;\n};\n","import React, { FC, ReactElement } from 'react';\n\nimport { SvgIconProps } from '../Icon';\n\nconst IconAirswap: FC<SvgIconProps> = ({ className = '' }): ReactElement => (\n  <svg fill=\"none\" viewBox=\"0 0 40 40\" className={className}>\n    <path d=\"M29.1306 28.9805L20.0115 38.0754L15.4785 33.5544C20.3656 33.2719 25.0757 31.7001 29.1306 28.9805Z\" />\n    {/* eslint-disable max-len */}\n    <path d=\"M37.7705 19.6388L36.655 18.5262L20.0104 1.92578L3.3659 18.5262L1.93164 19.9567C2.10871 20.098 2.26807 20.2569 2.44514 20.3982C3.02947 20.8927 3.63151 21.3518 4.25125 21.7757C10.8382 26.4026 19.0011 27.7977 26.5443 25.9611C29.6253 25.2194 32.547 23.9302 35.1853 22.1819C35.8405 21.7404 36.4779 21.2812 37.0976 20.7867C37.4341 20.5218 37.7705 20.2392 38.1069 19.939L37.7705 19.6388ZM24.4018 23.8066C19.4438 20.7514 13.7245 19.162 7.88118 19.1796C15.4775 15.8949 24.7913 15.4357 33.3438 20.3452C30.6169 22.0759 27.5713 23.2591 24.4018 23.8066Z\" />\n  </svg>\n);\n\nexport default IconAirswap;\n","import React, { FC, ReactElement } from 'react';\n\nimport { SvgIconProps } from '../Icon';\n\nconst IconArrowDown: FC<SvgIconProps> = ({ className = '' }): ReactElement => (\n  <svg viewBox=\"0 0 12 12\" className={className}>\n    <path\n      d=\"M11.3334 5.99996L10.3934 5.05996L6.66675 8.77996V0.666626H5.33341V8.77996L1.61341 5.05329L0.666748 5.99996L6.00008 11.3333L11.3334 5.99996Z\"\n      strokeWidth=\"0.4\"\n    />\n  </svg>\n);\n\nexport default IconArrowDown;\n","import React, { FC, ReactElement } from 'react';\n\nimport { SvgIconProps } from '../Icon';\n\nconst IconArrowLeft: FC<SvgIconProps> = ({ className = '' }): ReactElement => (\n  <svg fill=\"none\" viewBox=\"0 0 12 20\" className={className}>\n    <path\n      className=\"stroke\"\n      d=\"M2 18L10 10L2 2\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"square\"\n      transform=\"scale(-1, 1)\"\n    />\n  </svg>\n);\n\nexport default IconArrowLeft;\n","import React, { FC, ReactElement } from 'react';\n\nimport { SvgIconProps } from '../Icon';\n\nconst IconArrowRight: FC<SvgIconProps> = ({ className = '' }): ReactElement => (\n  <svg fill=\"none\" viewBox=\"0 0 12 20\" className={className}>\n    <path\n      className=\"stroke\"\n      d=\"M2 18L10 10L2 2\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"square\"\n    />\n  </svg>\n);\n\nexport default IconArrowRight;\n","import React, { FC, ReactElement } from 'react';\n\nimport { SvgIconProps } from '../Icon';\n\nconst IconBars: FC<SvgIconProps> = ({ className = '' }): ReactElement => (\n  <svg viewBox=\"0 0 24 24\" className={className}>\n    <path d=\"M5 9.2H8V19H5V9.2ZM10.6 5H13.4V19H10.6V5ZM16.2 13H19V19H16.2V13Z\" />\n  </svg>\n);\n\nexport default IconBars;\n","import React, { FC, ReactElement } from 'react';\n\nimport { SvgIconProps } from '../Icon';\n\nconst IconBin: FC<SvgIconProps> = ({ className = '' }): ReactElement => (\n  <svg viewBox=\"0 0 10 12\" className={className}>\n    {/* eslint-disable max-len */}\n    <path d=\"M1.00004 10.6667C1.00004 11.4 1.60004 12 2.33337 12H7.66671C8.40004 12 9.00004 11.4 9.00004 10.6667V2.66667H1.00004V10.6667ZM2.33337 4H7.66671V10.6667H2.33337V4ZM7.33337 0.666667L6.66671 0H3.33337L2.66671 0.666667H0.333374V2H9.66671V0.666667H7.33337Z\" />\n  </svg>\n);\n\nexport default IconBin;\n","import React, { FC, ReactElement } from 'react';\n\nimport { SvgIconProps } from '../Icon';\n\nconst IconCampaign: FC<SvgIconProps> = ({ className = '' }): ReactElement => (\n  <svg viewBox=\"0 0 25 24\" className={className}>\n    <path d=\"M18.9316 11C18.9316 11.67 18.9316 12.33 18.9316 13C20.1316 13 21.6916 13 22.9316 13C22.9316 12.33 22.9316 11.67 22.9316 11C21.6916 11 20.1316 11 18.9316 11Z\" />\n    <path d=\"M16.9316 17.61C17.8916 18.32 19.1416 19.26 20.1316 20C20.5316 19.47 20.9316 18.93 21.3316 18.4C20.3416 17.66 19.0916 16.72 18.1316 16C17.7316 16.54 17.3316 17.08 16.9316 17.61Z\" />\n    <path d=\"M21.3316 5.6C20.9316 5.07 20.5316 4.53 20.1316 4C19.1416 4.74 17.8916 5.68 16.9316 6.4C17.3316 6.93 17.7316 7.47 18.1316 8C19.0916 7.28 20.3416 6.35 21.3316 5.6Z\" />\n    {/* eslint-disable-next-line max-len */}\n    <path d=\"M4.93164 9C3.83164 9 2.93164 9.9 2.93164 11V13C2.93164 14.1 3.83164 15 4.93164 15H5.93164V19H7.93164V15H8.93164L13.9316 18V6L8.93164 9H4.93164ZM9.96164 10.71L11.9316 9.53V14.47L9.96164 13.29L9.48164 13H8.93164H4.93164V11H8.93164H9.48164L9.96164 10.71Z\" />\n    <path d=\"M16.4316 12.0004C16.4316 10.6704 15.8516 9.47039 14.9316 8.65039V15.3404C15.8516 14.5304 16.4316 13.3304 16.4316 12.0004Z\" />\n  </svg>\n);\n\nexport default IconCampaign;\n","import React, { FC, ReactElement } from 'react';\n\nimport { SvgIconProps } from '../Icon';\n\nconst IconCheck: FC<SvgIconProps> = ({ className = '' }): ReactElement => (\n  <svg fill=\"none\" viewBox=\"0 0 24 24\" className={className}>\n    <path d=\"M9 16.2L4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z\" />\n  </svg>\n);\n\nexport default IconCheck;\n","import React, { FC, ReactElement } from 'react';\n\nimport { SvgIconProps } from '../Icon';\n\nconst IconChevronDown: FC<SvgIconProps> = ({\n  className = '',\n}): ReactElement => (\n  <svg fill=\"currentColor\" viewBox=\"0 0 24 24\" className={className}>\n    <path\n      strokeWidth=\"0\"\n      d=\"M7.41 8.59L12 13.17l4.59-4.58L18 10l-6 6-6-6 1.41-1.41z\"\n    />\n  </svg>\n);\n\nexport default IconChevronDown;\n","import React, { FC, ReactElement } from 'react';\n\nimport { SvgIconProps } from '../Icon';\n\nconst IconChevronRight: FC<SvgIconProps> = ({\n  className = '',\n}): ReactElement => (\n  <svg viewBox=\"0 0 24 24\" className={className}>\n    <path\n      d=\"M9.99997 6L8.58997 7.41L13.17 12L8.58997 16.59L9.99997 18L16 12L9.99997 6Z\"\n      fill=\"currentColor\"\n    />\n  </svg>\n);\n\nexport default IconChevronRight;\n","import React, { FC, ReactElement } from 'react';\n\nimport { SvgIconProps } from '../Icon';\n\nconst IconChevronUpDown: FC<SvgIconProps> = ({\n  className = '',\n}): ReactElement => (\n  <svg viewBox=\"0 0 16 23\" className={className}>\n    <g clipPath=\"url(#clip0_11007_17296)\">\n      <path d=\"M4.94 12.2969L8 15.0726L11.06 12.2969L12 13.1514L8 16.7878L4 13.1514L4.94 12.2969Z\" />\n    </g>\n    <g clipPath=\"url(#clip1_11007_17296)\">\n      <path d=\"M11.06 10.2485L8 7.47278L4.94 10.2485L4 9.39399L8 5.75763L12 9.39399L11.06 10.2485Z\" />\n    </g>\n    <defs>\n      <clipPath id=\"clip0_11007_17296\">\n        <path d=\"M0 15.2727C0 11.2561 3.25611 8 7.27272 8H16V22.5455H7.27272C3.25611 22.5455 0 19.2893 0 15.2727Z\" />\n      </clipPath>\n      <clipPath id=\"clip1_11007_17296\">\n        <path d=\"M16 7.27268C16 11.2893 12.7439 14.5454 8.72728 14.5454H0V-4.48227e-05H8.72728C12.7439 -4.48227e-05 16 3.25607 16 7.27268Z\" />\n      </clipPath>\n    </defs>\n  </svg>\n);\n\nexport default IconChevronUpDown;\n","import React, { FC, ReactElement } from 'react';\n\nimport { SvgIconProps } from '../Icon';\n\nconst IconClose: FC<SvgIconProps> = ({ className = '' }): ReactElement => (\n  <svg viewBox=\"0 0 14 14\" className={className}>\n    <path\n      d=\"M14 1.41L12.59 0L7 5.59L1.41 0L0 1.41L5.59 7L0 12.59L1.41 14L7 8.41L12.59 14L14 12.59L8.41 7L14 1.41Z\"\n      fill=\"white\"\n    />\n  </svg>\n);\n\nexport default IconClose;\n","import React, { FC, ReactElement } from 'react';\n\nimport { SvgIconProps } from '../Icon';\n\nconst IconCloseCircleOutline: FC<SvgIconProps> = ({\n  className = '',\n}): ReactElement => (\n  <svg fill=\"none\" viewBox=\"0 0 68 68\" className={className}>\n    {/* eslint-disable max-len */}\n    <path d=\"M21.5 50.0003L34 37.5003L46.5 50.0003L50 46.5003L37.5 34.0003L50 21.5003L46.5 18.0003L34 30.5003L21.5 18.0003L18 21.5003L30.5 34.0003L18 46.5003L21.5 50.0003ZM34 67.3337C29.2778 67.3337 24.8889 66.4864 20.8334 64.792C16.7778 63.0975 13.25 60.7503 10.25 57.7503C7.25002 54.7503 4.9028 51.2225 3.20835 47.167C1.51391 43.1114 0.666687 38.7225 0.666687 34.0003C0.666687 29.3337 1.51391 24.9725 3.20835 20.917C4.9028 16.8614 7.25002 13.3337 10.25 10.3337C13.25 7.33366 16.7778 4.97255 20.8334 3.25033C24.8889 1.5281 29.2778 0.666992 34 0.666992C38.6667 0.666992 43.0278 1.5281 47.0834 3.25033C51.1389 4.97255 54.6667 7.33366 57.6667 10.3337C60.6667 13.3337 63.0278 16.8614 64.75 20.917C66.4722 24.9725 67.3334 29.3337 67.3334 34.0003C67.3334 38.7225 66.4722 43.1114 64.75 47.167C63.0278 51.2225 60.6667 54.7503 57.6667 57.7503C54.6667 60.7503 51.1389 63.0975 47.0834 64.792C43.0278 66.4864 38.6667 67.3337 34 67.3337ZM34 62.3337C41.7778 62.3337 48.4445 59.5559 54 54.0003C59.5556 48.4448 62.3334 41.7781 62.3334 34.0003C62.3334 26.2225 59.5556 19.5559 54 14.0003C48.4445 8.44477 41.7778 5.66699 34 5.66699C26.2222 5.66699 19.5556 8.44477 14 14.0003C8.44446 19.5559 5.66669 26.2225 5.66669 34.0003C5.66669 41.7781 8.44446 48.4448 14 54.0003C19.5556 59.5559 26.2222 62.3337 34 62.3337Z\" />\n  </svg>\n);\n\nexport default IconCloseCircleOutline;\n","import React, { FC, ReactElement } from 'react';\n\nimport { SvgIconProps } from '../Icon';\n\nconst IconCode: FC<SvgIconProps> = ({ className = '' }): ReactElement => (\n  <svg viewBox=\"0 0 24 24\" className={className}>\n    <path d=\"M9.4 16.6L4.8 12L9.4 7.4L8 6L2 12L8 18L9.4 16.6ZM14.6 16.6L19.2 12L14.6 7.4L16 6L22 12L16 18L14.6 16.6Z\" />\n  </svg>\n);\n\nexport default IconCode;\n","import React, { FC, ReactElement } from 'react';\n\nimport { SvgIconProps } from '../Icon';\n\nconst IconContactSupport: FC<SvgIconProps> = ({\n  className = '',\n}): ReactElement => (\n  <svg viewBox=\"0 0 24 24\" className={className}>\n    {/* eslint-disable max-len */}\n    <path\n      d=\"M4 13C5.1 13 6 12.1 6 11C6 9.9 5.1 9 4 9C2.9 9 2 9.9 2 11C2 12.1 2.9 13 4 13ZM5.13 14.1C4.76 14.04 4.39 14 4 14C3.01 14 2.07 14.21 1.22 14.58C0.48 14.9 0 15.62 0 16.43V18H4.5V16.39C4.5 15.56 4.73 14.78 5.13 14.1ZM20 13C21.1 13 22 12.1 22 11C22 9.9 21.1 9 20 9C18.9 9 18 9.9 18 11C18 12.1 18.9 13 20 13ZM24 16.43C24 15.62 23.52 14.9 22.78 14.58C21.93 14.21 20.99 14 20 14C19.61 14 19.24 14.04 18.87 14.1C19.27 14.78 19.5 15.56 19.5 16.39V18H24V16.43ZM16.24 13.65C15.07 13.13 13.63 12.75 12 12.75C10.37 12.75 8.93 13.14 7.76 13.65C6.68 14.13 6 15.21 6 16.39V18H18V16.39C18 15.21 17.32 14.13 16.24 13.65ZM8.07 16C8.16 15.77 8.2 15.61 8.98 15.31C9.95 14.93 10.97 14.75 12 14.75C13.03 14.75 14.05 14.93 15.02 15.31C15.79 15.61 15.83 15.77 15.93 16H8.07ZM12 8C12.55 8 13 8.45 13 9C13 9.55 12.55 10 12 10C11.45 10 11 9.55 11 9C11 8.45 11.45 8 12 8ZM12 6C10.34 6 9 7.34 9 9C9 10.66 10.34 12 12 12C13.66 12 15 10.66 15 9C15 7.34 13.66 6 12 6Z\"\n      fill=\"white\"\n    />\n  </svg>\n);\n\nexport default IconContactSupport;\n","import React, { FC, ReactElement } from 'react';\n\nimport { SvgIconProps } from '../Icon';\n\nconst IconCopy: FC<SvgIconProps> = ({ className = '' }): ReactElement => (\n  <svg viewBox=\"0 0 16 16\" className={className}>\n    {/* eslint-disable max-len */}\n    <path d=\"M10.6668 0.666748H2.66683C1.9335 0.666748 1.3335 1.26675 1.3335 2.00008V11.3334H2.66683V2.00008H10.6668V0.666748ZM12.6668 3.33341H5.3335C4.60016 3.33341 4.00016 3.93341 4.00016 4.66675V14.0001C4.00016 14.7334 4.60016 15.3334 5.3335 15.3334H12.6668C13.4002 15.3334 14.0002 14.7334 14.0002 14.0001V4.66675C14.0002 3.93341 13.4002 3.33341 12.6668 3.33341ZM12.6668 14.0001H5.3335V4.66675H12.6668V14.0001Z\" />\n  </svg>\n);\n\nexport default IconCopy;\n","import React, { FC, ReactElement } from 'react';\n\nimport { SvgIconProps } from '../Icon';\n\nconst IconCopy2: FC<SvgIconProps> = ({ className = '' }): ReactElement => (\n  <svg viewBox=\"0 0 14 10\" className={className}>\n    {/* eslint-disable max-len */}\n    <path\n      d=\"M4.3335 3.33317H9.66683V4.6665H4.3335V3.33317ZM12.4002 3.99984H13.6668C13.6668 2.15984 12.1735 0.666504 10.3335 0.666504H7.66683V1.93317H10.3335C11.4735 1.93317 12.4002 2.85984 12.4002 3.99984ZM1.60016 3.99984C1.60016 2.85984 2.52683 1.93317 3.66683 1.93317H6.3335V0.666504H3.66683C1.82683 0.666504 0.333496 2.15984 0.333496 3.99984C0.333496 5.83984 1.82683 7.33317 3.66683 7.33317H6.3335V6.0665H3.66683C2.52683 6.0665 1.60016 5.13984 1.60016 3.99984ZM11.6668 3.99984H10.3335V5.99984H8.3335V7.33317H10.3335V9.33317H11.6668V7.33317H13.6668V5.99984H11.6668V3.99984Z\"\n      fill=\"#6E7686\"\n    />\n  </svg>\n);\n\nexport default IconCopy2;\n","import React, { FC, ReactElement } from 'react';\n\nimport { SvgIconProps } from '../Icon';\n\nconst IconDarkModeSwitch: FC<SvgIconProps> = ({\n  className = '',\n}): ReactElement => (\n  <svg fill=\"none\" viewBox=\"0 0 26 26\" className={className}>\n    {/* eslint-disable max-len */}\n    <path\n      className=\"stroke\"\n      d=\"M12.9946 18.4559C16.0076 18.4559 18.4501 16.0134 18.4501 13.0005C18.4501 9.98761 16.0076 7.54517 12.9946 7.54517C9.98158 7.54517 7.53906 9.98761 7.53906 13.0005C7.53906 16.0134 9.98158 18.4559 12.9946 18.4559Z\"\n      strokeWidth=\"1.5\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n    <path\n      className=\"stroke\"\n      d=\"M13 1V3.18214\"\n      strokeWidth=\"1.5\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n    <path\n      className=\"stroke\"\n      d=\"M13 22.822V25.0042\"\n      strokeWidth=\"1.5\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n    <path\n      className=\"stroke\"\n      d=\"M4.51562 4.51343L6.06506 6.06274\"\n      strokeWidth=\"1.5\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n    <path\n      className=\"stroke\"\n      d=\"M19.9375 19.9404L21.4869 21.4897\"\n      strokeWidth=\"1.5\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n    <path\n      className=\"stroke\"\n      d=\"M1 13.0024H3.18222\"\n      strokeWidth=\"1.5\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n    <path\n      className=\"stroke\"\n      d=\"M22.8203 13.0024H25.0025\"\n      strokeWidth=\"1.5\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n    <path\n      className=\"stroke\"\n      d=\"M4.51562 21.4897L6.06506 19.9404\"\n      strokeWidth=\"1.5\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n    <path\n      className=\"stroke\"\n      d=\"M19.9375 6.06274L21.4869 4.51343\"\n      strokeWidth=\"1.5\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n    <path d=\"M13 19.003V7.60107L17.0507 9.02632L18.4009 13.302L16.3756 17.5778L13 19.003Z\" />\n  </svg>\n);\n\nexport default IconDarkModeSwitch;\n","import React, { FC, ReactElement } from 'react';\n\nimport { SvgIconProps } from '../Icon';\n\nconst IconDeny: FC<SvgIconProps> = ({ className = '' }): ReactElement => (\n  <svg fill=\"none\" viewBox=\"0 0 20 20\" className={className}>\n    {/* eslint-disable max-len */}\n    <path\n      d=\"M5 9V11H15V9H5ZM10 0C4.48 0 0 4.48 0 10C0 15.52 4.48 20 10 20C15.52 20 20 15.52 20 10C20 4.48 15.52 0 10 0ZM10 18C5.59 18 2 14.41 2 10C2 5.59 5.59 2 10 2C14.41 2 18 5.59 18 10C18 14.41 14.41 18 10 18Z\"\n      fill=\"#6E7686\"\n    />\n  </svg>\n);\n\nexport default IconDeny;\n","import { FC, ReactElement } from 'react';\n\nimport { SvgIconProps } from '../Icon';\n\nconst IconDiscord: FC<SvgIconProps> = ({ className = '' }): ReactElement => (\n  <svg\n    width=\"16\"\n    height=\"12\"\n    viewBox=\"0 0 16 12\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    className={className}\n  >\n    {/* eslint-disable max-len */}\n    <path\n      d=\"M13.1981 1.23123C12.2256 0.784835 11.1993 0.466511 10.1449 0.284233C10.1354 0.282446 10.1255 0.283725 10.1167 0.287888C10.1078 0.292051 10.1006 0.298886 10.0959 0.30742C9.964 0.541983 9.81794 0.84792 9.71569 1.08836C8.56275 0.915733 7.41569 0.915733 6.28644 1.08836C6.18419 0.842545 6.03281 0.541983 5.90038 0.30742C5.89547 0.299081 5.88817 0.292413 5.87941 0.288288C5.87066 0.284162 5.86087 0.282771 5.85131 0.284295C4.7968 0.46615 3.77044 0.784447 2.79806 1.23117C2.78975 1.23472 2.78274 1.24077 2.778 1.24848C0.833378 4.15373 0.300628 6.98755 0.562002 9.78623C0.562742 9.79309 0.564848 9.79972 0.568198 9.80574C0.571547 9.81176 0.576072 9.81705 0.581502 9.82129C1.8645 10.7635 3.10731 11.3355 4.32706 11.7147C4.33655 11.7175 4.34667 11.7174 4.35608 11.7143C4.36548 11.7112 4.37372 11.7053 4.37969 11.6974C4.66819 11.3034 4.92538 10.8879 5.14594 10.451C5.14897 10.4451 5.1507 10.4385 5.15102 10.4318C5.15133 10.4251 5.15023 10.4184 5.14777 10.4122C5.14531 10.4059 5.14156 10.4003 5.13677 10.3956C5.13197 10.3909 5.12624 10.3873 5.11994 10.385C4.71194 10.2302 4.3235 10.0415 3.94981 9.8273C3.943 9.82329 3.93728 9.81767 3.93315 9.81094C3.92902 9.8042 3.92661 9.79655 3.92615 9.78866C3.92568 9.78077 3.92716 9.77289 3.93046 9.7657C3.93376 9.75852 3.93877 9.75226 3.94506 9.74748C4.02369 9.68855 4.10238 9.62729 4.17744 9.56536C4.18411 9.55986 4.19219 9.55633 4.20075 9.55517C4.20932 9.55401 4.21805 9.55526 4.22594 9.55879C6.68081 10.6796 9.33844 10.6796 11.7643 9.55879C11.7722 9.55504 11.781 9.5536 11.7897 9.55465C11.7984 9.5557 11.8066 9.5592 11.8134 9.56473C11.8885 9.62661 11.9671 9.68855 12.0464 9.74748C12.0527 9.75222 12.0577 9.75843 12.0611 9.76558C12.0644 9.77272 12.066 9.78058 12.0655 9.78846C12.0651 9.79633 12.0628 9.80399 12.0587 9.81075C12.0547 9.81751 12.049 9.82317 12.0423 9.82723C11.6684 10.0456 11.2768 10.2319 10.8716 10.3844C10.8653 10.3868 10.8596 10.3905 10.8549 10.3952C10.8501 10.4 10.8464 10.4057 10.844 10.412C10.8416 10.4183 10.8405 10.425 10.8409 10.4318C10.8413 10.4385 10.8431 10.4451 10.8462 10.451C11.0714 10.8873 11.3286 11.3028 11.6118 11.6968C11.6176 11.7049 11.6258 11.711 11.6352 11.7142C11.6447 11.7174 11.6549 11.7176 11.6644 11.7147C12.8901 11.3355 14.1329 10.7635 15.4159 9.82129C15.4214 9.81726 15.426 9.8121 15.4294 9.80615C15.4327 9.80021 15.4348 9.79361 15.4354 9.7868C15.7482 6.55117 14.9116 3.74061 13.2176 1.24905C13.2135 1.24095 13.2066 1.23461 13.1981 1.23117V1.23123ZM5.5125 8.08211C4.77344 8.08211 4.16444 7.40355 4.16444 6.57023C4.16444 5.73698 4.76163 5.05842 5.51256 5.05842C6.26931 5.05842 6.87238 5.74292 6.86056 6.5703C6.86056 7.40355 6.26338 8.08211 5.5125 8.08211ZM10.4968 8.08211C9.75769 8.08211 9.14869 7.40355 9.14869 6.57023C9.14869 5.73698 9.74581 5.05842 10.4968 5.05842C11.2535 5.05842 11.8566 5.74292 11.8448 6.5703C11.8448 7.40355 11.2535 8.08211 10.4968 8.08211Z\"\n      fill=\"currentcolor\"\n    />\n  </svg>\n);\n\nexport default IconDiscord;\n","import React, { FC, ReactElement } from 'react';\n\nimport { SvgIconProps } from '../Icon';\n\nconst IconEdit: FC<SvgIconProps> = ({ className = '' }): ReactElement => (\n  <svg viewBox=\"0 0 25 24\" className={className}>\n    {/* eslint-disable max-len */}\n    <path d=\"M14.5131 9.02L15.4331 9.94L6.37312 19H5.45312V18.08L14.5131 9.02ZM18.1131 3C17.8631 3 17.6031 3.1 17.4131 3.29L15.5831 5.12L19.3331 8.87L21.1631 7.04C21.5531 6.65 21.5531 6.02 21.1631 5.63L18.8231 3.29C18.6231 3.09 18.3731 3 18.1131 3ZM14.5131 6.19L3.45312 17.25V21H7.20312L18.2631 9.94L14.5131 6.19Z\" />\n  </svg>\n);\n\nexport default IconEdit;\n","import React, { FC, ReactElement } from 'react';\n\nimport { SvgIconProps } from '../Icon';\n\nconst IconForbidden: FC<SvgIconProps> = ({ className = '' }): ReactElement => (\n  <svg fill=\"none\" viewBox=\"0 0 24 24\" className={className}>\n    {/* eslint-disable max-len */}\n    <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zM4 12c0-4.42 3.58-8 8-8 1.85 0 3.55.63 4.9 1.69L5.69 16.9A7.902 7.902 0 014 12zm8 8c-1.85 0-3.55-.63-4.9-1.69L18.31 7.1A7.902 7.902 0 0120 12c0 4.42-3.58 8-8 8z\" />\n  </svg>\n);\n\nexport default IconForbidden;\n","import React, { FC, ReactElement } from 'react';\n\nimport { SvgIconProps } from '../Icon';\n\nconst IconGithub: FC<SvgIconProps> = ({ className = '' }): ReactElement => (\n  <svg fill=\"none\" viewBox=\"0 0 24 24\" className={className}>\n    {/* eslint-disable max-len */}\n    <path d=\"M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z\" />\n  </svg>\n);\n\nexport default IconGithub;\n","import React, { FC, ReactElement } from 'react';\n\nimport { SvgIconProps } from '../Icon';\n\nconst IconInformationCircleOutline: FC<SvgIconProps> = ({ className = '' }): ReactElement => (\n  <svg fill=\"none\" viewBox=\"0 0 14 14\" className={className}>\n    {/* eslint-disable max-len */}\n    <path d=\"M6.3335 3.66634H7.66683V4.99967H6.3335V3.66634ZM6.3335 6.33301H7.66683V10.333H6.3335V6.33301ZM7.00016 0.333008C3.32016 0.333008 0.333496 3.31967 0.333496 6.99967C0.333496 10.6797 3.32016 13.6663 7.00016 13.6663C10.6802 13.6663 13.6668 10.6797 13.6668 6.99967C13.6668 3.31967 10.6802 0.333008 7.00016 0.333008ZM7.00016 12.333C4.06016 12.333 1.66683 9.93967 1.66683 6.99967C1.66683 4.05967 4.06016 1.66634 7.00016 1.66634C9.94016 1.66634 12.3335 4.05967 12.3335 6.99967C12.3335 9.93967 9.94016 12.333 7.00016 12.333Z\" />\n  </svg>\n);\n\nexport default IconInformationCircleOutline;\n","import { FC, ReactElement } from 'react';\n\nimport { SvgIconProps } from '../Icon';\n\nconst IconLaunch: FC<SvgIconProps> = ({ className = '' }): ReactElement => (\n  <svg\n    className={className}\n    viewBox=\"0 0 18 18\"\n  >\n    {/* eslint-disable max-len */}\n    <path\n      d=\"M16 16H2V2H9V0H2C1.46957 0 0.960859 0.210714 0.585786 0.585786C0.210714 0.960859 0 1.46957 0 2V16C0 16.5304 0.210714 17.0391 0.585786 17.4142C0.960859 17.7893 1.46957 18 2 18H16C17.1 18 18 17.1 18 16V9H16V16ZM11 0V2H14.59L4.76 11.83L6.17 13.24L16 3.41V7H18V0H11Z\"\n    />\n  </svg>\n);\nexport default IconLaunch;\n","import React, { FC, ReactElement } from 'react';\n\nimport { SvgIconProps } from '../Icon';\n\nconst IconLibrary: FC<SvgIconProps> = ({ className = '' }): ReactElement => (\n  <svg viewBox=\"0 0 21 21\" className={className}>\n    {/* eslint-disable max-len */}\n    <path d=\"M20.5968 4.76732C20.166 4.54732 19.7168 4.36398 19.2493 4.20815V15.2357C18.2043 14.8598 17.1318 14.6673 16.041 14.6673C14.2993 14.6673 12.576 15.1623 10.9993 16.1157V5.02398C9.51435 4.17148 7.80018 3.66732 5.95768 3.66732C4.31685 3.66732 2.76768 4.07065 1.40185 4.76732C1.09935 4.91398 0.916016 5.23482 0.916016 5.57398V16.6473C0.916016 17.179 1.34685 17.5548 1.83268 17.5548C1.97935 17.5548 2.12602 17.5182 2.27268 17.4448C3.38185 16.8673 4.62852 16.5007 5.95768 16.5007C7.85518 16.5007 9.60602 17.2523 10.9993 18.334C12.3927 17.2523 14.1435 16.5007 16.041 16.5007C17.3702 16.5007 18.6168 16.8673 19.726 17.454C19.8727 17.5273 20.0193 17.564 20.166 17.564C20.6427 17.564 21.0827 17.1882 21.0827 16.6565V5.57398C21.0827 5.23482 20.8993 4.91398 20.5968 4.76732ZM9.16602 15.2357C8.12102 14.8598 7.04852 14.6673 5.95768 14.6673C4.86685 14.6673 3.79435 14.8598 2.74935 15.2357V6.15148C3.76685 5.72065 4.83935 5.50065 5.95768 5.50065C7.05768 5.50065 8.14852 5.72982 9.16602 6.16065V15.2357ZM17.416 0.458984L12.8327 5.04232V13.7507L17.416 9.62565V0.458984Z\" />\n  </svg>\n);\n\nexport default IconLibrary;\n","import React, { FC, ReactElement } from 'react';\n\nimport { SvgIconProps } from '../Icon';\n\nconst IconLink: FC<SvgIconProps> = ({ className = '' }): ReactElement => (\n  <svg fill=\"currentColor\" viewBox=\"0 0 24 24\" className={className}>\n    <path d=\"M19 19H5V5h7V3H5a2 2 0 00-2 2v14a2 2 0 002 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\" />\n  </svg>\n);\n\nexport default IconLink;\n","import { FC, ReactElement } from 'react';\n\nimport { SvgIconProps } from '../Icon';\n\nconst IconLogout: FC<SvgIconProps> = ({ className = '' }): ReactElement => (\n  <svg\n    className={className}\n    viewBox=\"0 0 20 19\"\n  >\n    {/* eslint-disable max-len */}\n    <path\n      d=\"M15 4.47266L13.59 5.88266L16.17 8.47266H6V10.4727H16.17L13.59 13.0527L15 14.4727L20 9.47266L15 4.47266ZM2 2.47266H10V0.472656H2C0.9 0.472656 0 1.37266 0 2.47266V16.4727C0 17.5727 0.9 18.4727 2 18.4727H10V16.4727H2V2.47266Z\"\n      fill=\"white\"\n    />\n  </svg>\n);\n\nexport default IconLogout;\n","import { FC, ReactElement } from 'react';\n\nimport { SvgIconProps } from '../Icon';\n\nconst IconMarkerCheck: FC<SvgIconProps> = ({ className = '' }): ReactElement => (\n  <svg fill=\"currentColor\" viewBox=\"0 0 24 24\" className={className}>\n    <path d=\"M10,16L5,11L6.41,9.58L10,13.17L17.59,5.58L19,7M19,1H5C3.89,1 3,1.89 3,3V15.93C3,16.62 3.35,17.23 3.88,17.59L12,23L20.11,17.59C20.64,17.23 21,16.62 21,15.93V3C21,1.89 20.1,1 19,1Z\" />\n  </svg>\n);\n\nexport default IconMarkerCheck;\n","import { FC, ReactElement } from 'react';\n\nimport { SvgIconProps } from '../Icon';\n\nconst IconMedium: FC<SvgIconProps> = ({ className = '' }): ReactElement => (\n  <svg\n    width=\"16\"\n    height=\"10\"\n    viewBox=\"0 0 16 10\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    className={className}\n  >\n    {/* eslint-disable max-len */}\n    <path\n      d=\"M8.96252 5.00005C8.96584 6.12614 8.52211 7.20752 7.72878 8.00672C6.93544 8.80591 5.85736 9.25758 4.73127 9.26255C3.60518 9.25758 2.5271 8.80591 1.73376 8.00672C0.940424 7.20752 0.496696 6.12614 0.500019 5.00005C0.496696 3.87396 0.940424 2.79258 1.73376 1.99338C2.5271 1.19419 3.60518 0.742512 4.73127 0.737549C5.85736 0.742512 6.93544 1.19419 7.72878 1.99338C8.52211 2.79258 8.96584 3.87396 8.96252 5.00005ZM13.6 5.00005C13.6 7.21255 12.6563 9.01255 11.4875 9.01255C10.3188 9.01255 9.36877 7.21255 9.36877 5.00005C9.36877 2.78755 10.3188 0.987549 11.4875 0.987549C12.6563 0.987549 13.6 2.78755 13.6 5.00005ZM15.5 5.00005C15.5 6.9813 15.1688 8.5938 14.7563 8.5938C14.3438 8.5938 14.0125 6.9813 14.0125 5.00005C14.0125 3.0188 14.3438 1.4063 14.7563 1.4063C15.1688 1.4063 15.5 3.0188 15.5 5.00005Z\"\n      fill=\"currentcolor\"\n    />\n  </svg>\n);\n\nexport default IconMedium;\n","import React, { FC, ReactElement } from 'react';\n\nimport { SvgIconProps } from '../Icon';\n\nconst IconMenu: FC<SvgIconProps> = ({ className = '' }): ReactElement => (\n  <svg viewBox=\"0 0 18 18\" className={className}>\n    <path\n      transform=\"translate(0 3)\"\n      d=\"M0 12H18V10H0V12ZM0 7H18V5H0V7ZM0 0V2H18V0H0Z\"\n    />\n  </svg>\n);\n\nexport default IconMenu;\n","import React, { FC, ReactElement } from 'react';\n\nimport { SvgIconProps } from '../Icon';\n\nconst IconPending: FC<SvgIconProps> = ({ className = '' }): ReactElement => (\n  <svg fill=\"currentColor\" viewBox=\"0 0 24 24\" className={className}>\n    <path d=\"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\" />\n    <path d=\"M12.5 7H11v6l5.25 3.15.75-1.23-4.5-2.67z\" />\n  </svg>\n);\n\nexport default IconPending;\n","import React, { FC, ReactElement } from 'react';\n\nimport { SvgIconProps } from '../Icon';\n\nconst IconPlus: FC<SvgIconProps> = ({ className = '' }): ReactElement => (\n  <svg fill=\"currentColor\" viewBox=\"0 0 14 14\" className={className}>\n    <path d=\"M6.25 14V7.75H0V6.25H6.25V0H7.75V6.25H14V7.75H7.75V14H6.25Z\" />\n  </svg>\n);\n\nexport default IconPlus;\n","import React, { FC, ReactElement } from 'react';\n\nimport { SvgIconProps } from '../Icon';\n\nconst IconSearch: FC<SvgIconProps> = ({ className = '' }): ReactElement => (\n  <svg fill=\"none\" viewBox=\"0 0 18 18\" className={className}>\n    {/* eslint-disable max-len */}\n    <path d=\"M12.5 11H11.71L11.43 10.73C12.4439 9.55402 13.0011 8.0527 13 6.5C13 5.21442 12.6188 3.95772 11.9046 2.8888C11.1903 1.81988 10.1752 0.986756 8.98744 0.494786C7.79973 0.00281635 6.49279 -0.125905 5.23192 0.124899C3.97104 0.375703 2.81285 0.994767 1.90381 1.90381C0.994767 2.81285 0.375703 3.97104 0.124899 5.23192C-0.125905 6.49279 0.00281635 7.79973 0.494786 8.98744C0.986756 10.1752 1.81988 11.1903 2.8888 11.9046C3.95772 12.6188 5.21442 13 6.5 13C8.11 13 9.59 12.41 10.73 11.43L11 11.71V12.5L16 17.49L17.49 16L12.5 11V11ZM6.5 11C4.01 11 2 8.99 2 6.5C2 4.01 4.01 2 6.5 2C8.99 2 11 4.01 11 6.5C11 8.99 8.99 11 6.5 11Z\" />\n  </svg>\n);\n\nexport default IconSearch;\n","import React, { FC, ReactElement } from 'react';\n\nimport { SvgIconProps } from '../Icon';\n\nconst IconStar: FC<SvgIconProps> = ({ className = '' }): ReactElement => (\n  <svg fill=\"currentColor\" viewBox=\"0 0 14 13\" className={className}>\n    <path d=\"M6.99967 10.5133L11.1197 12.9999L10.0263 8.31325L13.6663 5.15992L8.87301 4.75325L6.99967 0.333252L5.12634 4.75325L0.333008 5.15992L3.97301 8.31325L2.87967 12.9999L6.99967 10.5133Z\" />\n  </svg>\n);\n\nexport default IconStar;\n","import React, { FC, ReactElement } from 'react';\n\nimport { SvgIconProps } from '../Icon';\n\nconst IconSwap: FC<SvgIconProps> = ({ className = '' }): ReactElement => (\n  <svg fill=\"currentColor\" viewBox=\"0 0 10 13\" className={className}>\n    <path d=\"M7.85714 10.0071V5H6.42857V10.0071H4.28571L7.14286 12.8571L10 10.0071H7.85714ZM2.85714 0L0 2.85H2.14286V7.85714H3.57143V2.85H5.71429L2.85714 0Z\" />\n  </svg>\n);\n\nexport default IconSwap;\n","import React, { FC, ReactElement } from 'react';\n\nimport { SvgIconProps } from '../Icon';\n\n// used for OTC in menu bar.\nconst IconSwap: FC<SvgIconProps> = ({ className = '' }): ReactElement => (\n  <svg\n    width=\"18\"\n    height=\"14\"\n    viewBox=\"0 0 18 14\"\n    fill=\"none\"\n    className={className}\n  >\n    <path\n      d=\"M3.99 6L0 10L3.99 14V11H11V9H3.99V6ZM18 4L14.01 0V3H7V5H14.01V8L18 4Z\"\n      fill=\"currentColor\"\n    />\n  </svg>\n);\n\nexport default IconSwap;\n","import React, { FC, ReactElement } from 'react';\n\nimport { SvgIconProps } from '../Icon';\n\nconst IconTelegram: FC<SvgIconProps> = ({ className = '' }): ReactElement => (\n  <svg\n    width=\"16\"\n    height=\"16\"\n    viewBox=\"0 0 16 16\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    className={className}\n  >\n    {/* eslint-disable max-len */}\n    <path\n      d=\"M7.965 0.50002C5.98195 0.509275 4.08327 1.30353 2.68431 2.70906C1.28535 4.11458 0.499978 6.01695 0.5 8.00002C0.5 9.98914 1.29018 11.8968 2.6967 13.3033C4.10322 14.7098 6.01088 15.5 8 15.5C9.98912 15.5 11.8968 14.7098 13.3033 13.3033C14.7098 11.8968 15.5 9.98914 15.5 8.00002C15.5 6.0109 14.7098 4.10324 13.3033 2.69672C11.8968 1.2902 9.98912 0.50002 8 0.50002C7.98833 0.499993 7.97667 0.499993 7.965 0.50002ZM11.0662 5.01502C11.1287 5.01377 11.2669 5.0294 11.3569 5.10252C11.4167 5.15446 11.4548 5.22694 11.4637 5.30564C11.4738 5.36377 11.4862 5.49689 11.4762 5.60065C11.3638 6.78689 10.875 9.66439 10.6262 10.9925C10.5212 11.555 10.3144 11.7431 10.1138 11.7613C9.67875 11.8019 9.34813 11.4738 8.92625 11.1975C8.26625 10.7644 7.89313 10.495 7.2525 10.0725C6.51188 9.58502 6.99188 9.31627 7.41375 8.87877C7.52437 8.76377 9.44313 7.01814 9.48063 6.86002C9.485 6.84002 9.48938 6.76627 9.44563 6.72752C9.40187 6.68877 9.33687 6.70189 9.29 6.71252C9.22375 6.72752 8.16937 7.42502 6.12687 8.80314C5.82688 9.00939 5.55625 9.1094 5.31313 9.10314C5.04563 9.09814 4.53062 8.95252 4.1475 8.82814C3.6775 8.67502 3.30437 8.59439 3.33687 8.33502C3.35375 8.20002 3.54 8.06189 3.895 7.92064C6.08125 6.96814 7.53875 6.34002 8.26875 6.03689C10.3513 5.17064 10.7844 5.02002 11.0662 5.01502Z\"\n      fill=\"currentcolor\"\n    />\n  </svg>\n);\n\nexport default IconTelegram;\n","import React, { FC, ReactElement } from 'react';\n\nimport { SvgIconProps } from '../Icon';\n\nconst IconTransaction: FC<SvgIconProps> = ({\n  className = '',\n}): ReactElement => (\n  <svg width=\"12\" height=\"21\" viewBox=\"0 0 12 21\" className={className}>\n    {/* eslint-disable max-len */}\n    <path d=\"M4.57384 17.9222L10.7109 12.7726L9.24172 11.0216L3.10461 16.1713L0.900767 13.5448L0.346062 19.9779L6.77768 20.5487L4.57384 17.9222ZM11.697 1.50192L5.26538 0.931111L7.46923 3.55755L1.33212 8.7072L2.80134 10.4582L8.93845 5.30851L11.1423 7.93495L11.697 1.50192Z\" />\n  </svg>\n);\n\nexport default IconTransaction;\n","import { FC, ReactElement } from 'react';\n\nimport { SvgIconProps } from '../Icon';\n\nconst IconTwitter: FC<SvgIconProps> = ({ className = '' }): ReactElement => (\n  <svg\n    width=\"16\"\n    height=\"14\"\n    viewBox=\"0 0 16 14\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    className={className}\n  >\n\n    {/* eslint-disable max-len */}\n    <path\n      d=\"M15.4706 2.35624C14.909 2.6035 14.3141 2.76671 13.705 2.84062C14.3463 2.45515 14.8265 1.85065 15.0569 1.13874C14.4625 1.48562 13.8038 1.73812 13.1025 1.87874C12.6398 1.38401 12.0268 1.05588 11.3585 0.945307C10.6903 0.834732 10.0042 0.9479 9.40684 1.26724C8.80948 1.58658 8.33429 2.09421 8.05503 2.71132C7.77578 3.32843 7.7081 4.02047 7.8625 4.67999C5.30625 4.55937 3.04188 3.33124 1.525 1.47624C1.24925 1.94488 1.10541 2.47938 1.10875 3.02312C1.10875 4.09187 1.6525 5.03124 2.47625 5.58312C1.98804 5.56758 1.51061 5.43558 1.08375 5.19812V5.23562C1.08347 5.94586 1.32892 6.63433 1.77844 7.18422C2.22797 7.7341 2.85388 8.11154 3.55 8.25249C3.09894 8.37336 2.62651 8.39151 2.1675 8.30562C2.36508 8.91687 2.74854 9.45121 3.26438 9.83405C3.78023 10.2169 4.40272 10.4292 5.045 10.4412C3.9572 11.295 2.61405 11.7583 1.23125 11.7569C0.9875 11.7569 0.744375 11.7425 0.5 11.715C1.90982 12.6177 3.54907 13.0969 5.22312 13.0956C10.8813 13.0956 13.9719 8.41062 13.9719 4.35499C13.9719 4.22374 13.9719 4.09249 13.9625 3.96124C14.5662 3.52678 15.087 2.98738 15.5 2.36874L15.4706 2.35624Z\"\n      fill=\"currentcolor\"\n    />\n  </svg>\n);\n\nexport default IconTwitter;\n","import React, { FC, ReactElement } from 'react';\n\nimport { SvgIconProps } from '../Icon';\n\nconst IconVote: FC<SvgIconProps> = ({ className = '' }): ReactElement => (\n  <svg fill=\"none\" viewBox=\"0 0 24 24\" className={className}>\n    {/* eslint-disable-next-line max-len */}\n    <path d=\"M18 12.9993H17.32L15.32 14.9993H17.23L19 16.9993H5L6.78 14.9993H8.83L6.83 12.9993H6L3 15.9993V19.9993C3 21.0993 3.89 21.9993 4.99 21.9993H19C20.1 21.9993 21 21.1093 21 19.9993V15.9993L18 12.9993ZM19 19.9993H5V18.9993H19V19.9993ZM11.34 15.0193C11.73 15.4093 12.36 15.4093 12.75 15.0193L19.11 8.65931C19.5 8.26931 19.5 7.63931 19.11 7.24931L14.16 2.29931C13.78 1.89931 13.15 1.89931 12.76 2.28931L6.39 8.65931C6 9.04931 6 9.67931 6.39 10.0693L11.34 15.0193ZM13.46 4.40931L17 7.94931L12.05 12.8993L8.51 9.35931L13.46 4.40931Z\" />\n  </svg>\n);\n\nexport default IconVote;\n","import React, { FC, ReactElement } from 'react';\n\nimport { SvgIconProps } from '../Icon';\n\nconst IconX: FC<SvgIconProps> = ({ className = '' }): ReactElement => (\n  <svg fill=\"none\" viewBox=\"0 0 14 14\" className={className}>\n    <path\n      d=\"M14 1.41L12.59 0L7 5.59L1.41 0L0 1.41L5.59 7L0 12.59L1.41 14L7 8.41L12.59 14L14 12.59L8.41 7L14 1.41Z\"\n      fill=\"white\"\n    />\n  </svg>\n);\n\nexport default IconX;\n","import React, { FC } from 'react';\n\nimport {\n  IconAirswap,\n  IconArrowDown,\n  IconArrowLeft,\n  IconArrowRight,\n  IconBars,\n  IconBin,\n  IconCampaign,\n  IconCheck,\n  IconChevronDown,\n  IconChevronRight,\n  IconChevronUpDown,\n  IconClose,\n  IconCloseCircleOutline,\n  IconCode,\n  IconContactSupport,\n  IconCopy,\n  IconCopy2,\n  IconDarkModeSwitch,\n  IconDeny,\n  IconDiscord,\n  IconEdit,\n  IconForbidden,\n  IconGithub,\n  IconInformationCircleOutline,\n  IconLaunch,\n  IconLibrary,\n  IconLink,\n  IconLogout,\n  IconMarkerCheck,\n  IconMedium,\n  IconMenu,\n  IconPending,\n  IconPlus,\n  IconSearch,\n  IconStar,\n  IconSwap,\n  IconSwapHorizontal,\n  IconTelegram,\n  IconTransaction,\n  IconTwitter,\n  IconVote,\n  IconX,\n} from './icons';\n\nimport './Icon.scss';\n\nexport interface SvgIconProps {\n  className?: string;\n}\n\nexport type IconSet = {\n  [key: string]: FC<IconProps>;\n};\n\nexport const icons: IconSet = {\n  airswap: IconAirswap,\n  'arrow-down': IconArrowDown,\n  'arrow-right': IconArrowRight,\n  'arrow-left': IconArrowLeft,\n  bars: IconBars,\n  bin: IconBin,\n  'button-x': IconX,\n  campaign: IconCampaign,\n  check: IconCheck,\n  'chevron-down': IconChevronDown,\n  'chevron-right': IconChevronRight,\n  'chevron-up-down': IconChevronUpDown,\n  close: IconClose,\n  'close-circle-outline': IconCloseCircleOutline,\n  code: IconCode,\n  copy: IconCopy,\n  copy2: IconCopy2,\n  'contact-support': IconContactSupport,\n  'dark-mode-switch': IconDarkModeSwitch,\n  deny: IconDeny,\n  discord: IconDiscord,\n  edit: IconEdit,\n  launch: IconLaunch,\n  logout: IconLogout,\n  // 'exit-modal': HiX,\n  forbidden: IconForbidden,\n  github: IconGithub,\n  'information-circle-outline': IconInformationCircleOutline,\n  learn: IconLibrary,\n  'marker-check': IconMarkerCheck,\n  menu: IconMenu,\n  medium: IconMedium,\n  plus: IconPlus,\n  // settings: IoMdSettings,\n  search: IconSearch,\n  star: IconStar,\n  swap: IconSwap,\n  'swap-horizontal': IconSwapHorizontal,\n  telegram: IconTelegram,\n  // 'transaction-completed': BiCheck,\n  // 'transaction-failed': HiX,\n  'transaction-pending': IconPending,\n  'transaction-link': IconLink,\n  transaction: IconTransaction,\n  twitter: IconTwitter,\n  'wallet-link': IconLink,\n  vote: IconVote,\n};\n\ninterface IconProps {\n  name: keyof typeof icons;\n  className?: string;\n}\n\nconst Icon: FC<IconProps> = ({ name, className = '' }) => {\n  const IconComponent = icons[name];\n\n  return IconComponent\n    ? <IconComponent name={name} className={`icon-component ${className}`} />\n    : null;\n};\n\nexport default Icon;\n","import React, {\n  forwardRef,\n  ForwardRefExoticComponent,\n  ReactElement,\n  Ref,\n  RefAttributes,\n} from 'react';\n\nimport classNames from 'classnames';\n\nimport Button, { ButtonProps } from '../../components/Button/Button';\nimport Icon, { IconSet } from '../../components/Icon/Icon';\n\nimport './IconButton.scss';\n\ninterface IconButtonProps extends ButtonProps {\n  hideLabel?: boolean;\n  icon: keyof IconSet;\n  iconAlign?: 'left' | 'right';\n  iconClassName?: string;\n  className?: string;\n}\n\nexport type IconButtonWithRefProps = IconButtonProps & RefAttributes<HTMLButtonElement>;\n\nconst IconButton: ForwardRefExoticComponent<IconButtonWithRefProps> = forwardRef(({\n  hideLabel,\n  icon,\n  iconAlign = 'left',\n  text,\n  iconClassName,\n  className = '',\n  ...restProps\n}, ref: Ref<HTMLButtonElement>): ReactElement => {\n  const iconButtonClassName = classNames('icon-button', {\n    'icon-button--hidden-label': hideLabel,\n    [`icon-button--icon-align-${iconAlign}`]: iconAlign,\n  }, className);\n\n  return (\n    <Button\n      {...restProps}\n      ref={ref}\n      text={text}\n      className={iconButtonClassName}\n    >\n      <Icon name={icon} className={`icon-button__icon ${iconClassName}`} />\n      {!hideLabel && text}\n    </Button>\n  );\n});\n\nexport default IconButton;\n","import { ConnectionType } from './connections';\nimport { getHasMetaMaskExtensionInstalled } from './helpers';\n\nexport type WalletProvider = {\n  name: string;\n  logo: string;\n  isInstalled: boolean;\n  url: string;\n  type: ConnectionType;\n};\n\nconst walletConnectProjectId = process.env.REACT_APP_WALLET_CONNECT_PROJECT_ID;\n\nconst walletProviders: WalletProvider[] = [\n  {\n    name: 'MetaMask',\n    logo: 'logos/metamask.svg',\n    isInstalled: getHasMetaMaskExtensionInstalled(),\n    url: 'https://metamask.io/',\n    type: ConnectionType.injected,\n  },\n  ...(walletConnectProjectId ? [\n    {\n      name: 'WalletConnect',\n      logo: 'logos/walletconnect.svg',\n      isInstalled: true,\n      url: 'https://walletconnect.com/',\n      type: ConnectionType.walletConnect,\n    },\n  ] : []),\n  {\n    name: 'Coinbase',\n    logo: 'logos/coinbase.svg',\n    isInstalled: true,\n    url: 'https://www.coinbase.com/wallet',\n    type: ConnectionType.coinbase,\n  },\n];\n\nexport default walletProviders;\n","import React, { FC } from 'react';\n\nimport Button from '../../../../../../components/Button/Button';\nimport { WalletProvider } from '../../../../../../web3-connectors/walletProviders';\n\nimport './WalletProviderButton.scss';\n\ninterface WalletProviderButtonProps {\n  walletProvider: WalletProvider;\n  onClick: (provider: WalletProvider) => void;\n  className?: string;\n}\n\nconst WalletProviderButton: FC<WalletProviderButtonProps> = ({ walletProvider, onClick, className = '' }) => {\n  const handleClick = () => {\n    onClick(walletProvider);\n  };\n\n  const buttonText = walletProvider.isInstalled ? walletProvider.name : `${walletProvider.name} (install)`;\n\n  return (\n    <Button\n      text={buttonText}\n      className={`wallet-provider-button ${className}`}\n      onClick={handleClick}\n    >\n      <img\n        alt={`${walletProvider.name} logo`}\n        src={walletProvider.logo}\n        className=\"wallet-provider-button__logo\"\n      />\n      <span className=\"wallet-provider-button__name\">\n        {buttonText}\n      </span>\n    </Button>\n  );\n};\n\nexport default WalletProviderButton;\n","import React, { FC } from 'react';\n\nimport { WalletProvider } from '../../../../web3-connectors/walletProviders';\nimport WalletProviderButton from './subcomponents/WalletProviderButton/WalletProviderButton';\n\nimport './WalletProviderList.scss';\n\ninterface WalletProviderListProps {\n  walletProviders: WalletProvider[];\n  onWalletProviderButtonClick: (provider: WalletProvider) => void;\n  className?: string;\n}\n\nconst WalletProviderList: FC<WalletProviderListProps> = ({ walletProviders, onWalletProviderButtonClick, className = '' }) => (\n  <div className={`wallet-provider-list ${className}`}>\n    {walletProviders.map((provider) => (\n      <WalletProviderButton\n        key={provider.name}\n        walletProvider={provider}\n        onClick={onWalletProviderButtonClick}\n        className=\"wallet-provider-list__button\"\n      />\n    ))}\n  </div>\n);\n\nexport default WalletProviderList;\n","import React, { FC, useEffect, useState } from 'react';\n\nimport { Connector } from '@web3-react/types';\nimport { useDebounce } from 'react-use';\n\nimport IconButton from '../../compositions/IconButton/IconButton';\nimport { useAppDispatch, useAppSelector } from '../../redux/hooks';\nimport { getLastProviderFromLocalStorage } from '../../redux/stores/web3/web3Api';\nimport { setConnectionType, setIsInitialized, setUserHasClosedConnectModal } from '../../redux/stores/web3/web3Slice';\nimport { ConnectionType, getConnection } from '../../web3-connectors/connections';\nimport { tryActivateConnector } from '../../web3-connectors/helpers';\nimport walletProviders, { WalletProvider } from '../../web3-connectors/walletProviders';\nimport WalletProviderList from './subcomponents/WalletProviderList/WalletProviderList';\n\nimport './WalletConnector.scss';\n\ninterface WalletConnectorProps {\n  onCloseButtonClick: () => void;\n  className?: string;\n}\n\nconst WalletConnector: FC<WalletConnectorProps> = ({ onCloseButtonClick, className = '' }) => {\n  const { isActive, isInitialized } = useAppSelector((state) => state.web3);\n\n  const dispatch = useAppDispatch();\n  const [triedToEagerlyConnect, setTriedToEagerlyConnect] = useState(false);\n  const [isActiveState, setIsActiveState] = useState(false);\n\n  const activateWallet = async (provider: WalletProvider) => {\n    try {\n      await tryActivateConnector(getConnection(provider.type).connector);\n      dispatch(setConnectionType(provider.type));\n    } catch (error) {\n      console.error(error);\n    } finally {\n      dispatch(setIsInitialized(true));\n    }\n  };\n\n  const activateWalletEagerly = async (connector: Connector, type: ConnectionType) => {\n    try {\n      if (connector.connectEagerly) {\n        // Currently connectEagerly does not throw error if connectEagerly fails. So we need to check if it is connected\n        // by using the triedToEagerlyConnect state.\n        await connector.connectEagerly();\n        dispatch(setConnectionType(type));\n      }\n    } catch (error) {\n      console.error(error);\n      dispatch(setIsInitialized(true));\n    } finally {\n      setTriedToEagerlyConnect(true);\n    }\n  };\n\n  const handleCloseButtonClick = (): void => {\n    dispatch(setUserHasClosedConnectModal(true));\n    onCloseButtonClick();\n  };\n\n  const handleWalletProviderButtonClick = (provider: WalletProvider): void => {\n    if (!provider.isInstalled) {\n      window.open(provider.url, '_blank');\n\n      return;\n    }\n\n    activateWallet(provider);\n  };\n\n  useEffect(() => {\n    const type = getLastProviderFromLocalStorage();\n\n    if (!type) {\n      dispatch(setIsInitialized(true));\n\n      return;\n    }\n\n    activateWalletEagerly(getConnection(type).connector, type);\n  }, []);\n\n  useEffect(() => {\n    setIsActiveState(isActive);\n\n    if (!isActive && isActiveState) {\n      dispatch(setConnectionType(undefined));\n    }\n  }, [isActive]);\n\n  useDebounce(() => {\n    if (triedToEagerlyConnect && !isInitialized) {\n      dispatch(setIsInitialized(true));\n      setTriedToEagerlyConnect(false);\n    }\n  }, 100, [triedToEagerlyConnect, isActive, isInitialized]);\n\n  return (\n    <div className={`wallet-connector ${className}`}>\n      <div className=\"wallet-connector__wrapper\">\n        <div className=\"wallet-connector__header\">\n          <h1 className=\"wallet-connector__title\">Select wallet</h1>\n          <IconButton\n            hideLabel\n            icon=\"close\"\n            text=\"Close\"\n            onClick={handleCloseButtonClick}\n            className=\"wallet-connector__close-button\"\n          />\n        </div>\n        <WalletProviderList\n          walletProviders={walletProviders}\n          onWalletProviderButtonClick={handleWalletProviderButtonClick}\n          className=\"wallet-connector__wallet-providers-list\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default WalletConnector;\n","export const truncateAddress = (account: string): string => (account.length >= 20 ? `${account.slice(0, 6)}...${account.slice(-4)}` : account);\n\nexport const isEqualAddress = (address1: string, address2: string): boolean => address1.toLowerCase() === address2.toLowerCase();\n","import { FC } from 'react';\n\nimport './Avatar.scss';\n\ninterface AvatarProps {\n  avatarUrl?: string;\n  className?: string;\n}\n\nconst Avatar: FC<AvatarProps> = ({ avatarUrl, className = '' }) => (\n  <div className={`avatar ${className}`} style={{ backgroundImage: `url(\"${avatarUrl}\")` }} />\n);\n\nexport default Avatar;\n","import React, { FC } from 'react';\n\nimport classNames from 'classnames';\n\nimport { truncateAddress } from '../../helpers/string';\nimport Avatar from '../Avatar/Avatar';\nimport Icon from '../Icon/Icon';\n\nimport './WalletInfo.scss';\n\ninterface WalletInfoProps {\n  isBanner?: boolean;\n  accountUrl?: string;\n  address?: string;\n  avatarUrl?: string;\n  ensAddress?: string;\n  className?: string;\n  avatarClassName?: string;\n}\n\nconst WalletInfo: FC<WalletInfoProps> = ({\n  isBanner = false,\n  accountUrl,\n  address = '',\n  avatarUrl = '',\n  ensAddress = '',\n  className = '',\n  avatarClassName = '',\n}) => {\n  const walletInfoClassName = classNames('wallet-info', {\n    'wallet-info--is-menu': !isBanner,\n  }, className);\n\n  return (\n    <div className={walletInfoClassName}>\n      <Avatar className={`wallet-info__avatar ${avatarClassName}`} avatarUrl={avatarUrl} />\n      <div className=\"wallet-info__address-bar\">\n        <h2 className=\"wallet-info__sub-title\">Wallet</h2>\n        <span className=\"wallet-info__address\">{truncateAddress(ensAddress || address)}</span>\n        {ensAddress && <span className=\"wallet-info__address-secondary\">{truncateAddress(address)}</span>}\n      </div>\n      {accountUrl && (\n        <a\n          aria-label=\"address\"\n          href={accountUrl}\n          rel=\"noreferrer\"\n          target=\"_blank\"\n          className=\"wallet-info__link\"\n        >\n          <Icon\n            name=\"launch\"\n            className=\"wallet-info__icon\"\n          />\n        </a>\n      )}\n    </div>\n  );\n};\n\nexport default WalletInfo;\n","export enum AppRoutes {\n  collection = 'collection',\n  listNft = 'list-nft',\n  nftDetail = 'nft-detail',\n  orderDetail = 'order-detail',\n  profile = 'profile',\n  swap = 'swap',\n}\n\nexport enum ProfileRoutes {\n  activity = 'activity',\n  orders = 'orders',\n  ownedNfts = 'owned-nfts',\n}\n\nexport const routes = {\n  collection: (highlightOrderNonce?: string) => `${highlightOrderNonce ? `?highlightOrderNonce=${highlightOrderNonce}` : ''}`,\n  listNft: (tokenId?: string) => `/${AppRoutes.listNft}${tokenId ? `?tokenId=${tokenId}` : ''}`,\n  nftDetail: (tokenId: string) => `/${AppRoutes.nftDetail}/${tokenId}`,\n  orderDetail: (account: string, orderNonce: string) => `/${AppRoutes.orderDetail}/${account}/${orderNonce}`,\n  profile: (account: string, highlightTokenId?: string) => (\n    `/${AppRoutes.profile}/${account}/${ProfileRoutes.ownedNfts}/${highlightTokenId ? `?highlightTokenId=${highlightTokenId}` : ''}`\n  ),\n  userOrders: (account: string, highlightOrderNonce?: string) => (\n    `/${AppRoutes.profile}/${account}/${ProfileRoutes.orders}${highlightOrderNonce ? `?highlightOrderNonce=${highlightOrderNonce}` : ''}`\n  ),\n  activity: (account: string) => `/${AppRoutes.profile}/${account}/${ProfileRoutes.activity}`,\n};\n","import React, { FC } from 'react';\n\nimport classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nimport WalletInfo from '../../components/WalletInfo/WalletInfo';\nimport { routes } from '../../routes';\n\nimport './MobileMenu.scss';\n\ninterface MobileMenuProp {\n  isHidden: boolean;\n  avatarUrl?: string;\n  address: string;\n  ensAddress?: string | undefined;\n  onNavLinkClick: () => void;\n  className?: string;\n}\n\nconst MobileMenu: FC<MobileMenuProp> = ({\n  avatarUrl,\n  isHidden,\n  address,\n  ensAddress,\n  onNavLinkClick,\n  className = '',\n}) => {\n  const mobileMenuClassName = classNames('mobile-menu', {\n    'mobile-menu--is-hidden': isHidden,\n  }, className);\n\n  return (\n    <div className={mobileMenuClassName}>\n      <WalletInfo\n        avatarUrl={avatarUrl}\n        address={address}\n        ensAddress={ensAddress}\n      />\n      <div className=\"mobile-menu__nav-links\">\n        <NavLink\n          to={routes.profile(address)}\n          onClick={onNavLinkClick}\n          className=\"mobile-menu__nav-link\"\n        >\n          My Tokens\n        </NavLink>\n        <NavLink\n          to={routes.userOrders(address)}\n          onClick={onNavLinkClick}\n          className=\"mobile-menu__nav-link\"\n        >\n          My Listings\n        </NavLink>\n        <NavLink\n          to={routes.listNft()}\n          onClick={onNavLinkClick}\n          className=\"mobile-menu__nav-link\"\n        >\n          List a Token\n        </NavLink>\n      </div>\n    </div>\n  );\n};\n\nexport default MobileMenu;\n","import React, { FC } from 'react';\n\nimport classNames from 'classnames';\nimport { NavLink, NavLinkProps } from 'react-router-dom';\n\nimport Icon, { IconSet } from '../../components/Icon/Icon';\n\nimport './IconNavLink.scss';\n\ninterface IconNavLinkProps extends NavLinkProps {\n  hideLabel?: boolean;\n  icon: keyof IconSet;\n  iconAlign?: 'left' | 'right';\n  iconClassName?: string;\n  text: string;\n  className?: string;\n}\n\nconst IconNavLink: FC<IconNavLinkProps> = ({\n  hideLabel,\n  icon,\n  iconAlign = 'left',\n  text,\n  iconClassName,\n  className = '',\n  ...restProps\n}) => {\n  const iconButtonClassName = classNames('nav-link-button', {\n    'nav-link-button--hidden-label': hideLabel,\n    [`nav-link-button--icon-align-${iconAlign}`]: iconAlign,\n  }, className);\n\n  return (\n    <NavLink\n      {...restProps}\n      className={iconButtonClassName}\n    >\n      <Icon name={icon} className={`nav-link-button__icon ${iconClassName}`} />\n      {!hideLabel && text}\n    </NavLink>\n  );\n};\n\nexport default IconNavLink;\n","import {\n  FC,\n  forwardRef,\n  ReactElement,\n  Ref,\n  RefAttributes,\n} from 'react';\n\nimport { NavLink } from 'react-router-dom';\n\nimport WalletInfo from '../../components/WalletInfo/WalletInfo';\nimport { routes } from '../../routes';\n\nimport './UserPopup.scss';\n\ninterface UserPopupProps {\n  address?: string;\n  ensAddress?: string;\n  onLogoutButtonClick: () => void;\n  className?: string;\n}\n\nexport type UserPopupWithRefProps = UserPopupProps & RefAttributes<HTMLDivElement>;\n\nconst UserPopup: FC<UserPopupWithRefProps> = forwardRef(({\n  address,\n  ensAddress,\n  className = '',\n}, ref: Ref<HTMLDivElement>): ReactElement => (\n  <div ref={ref} className={`user-popup ${className}`}>\n    <WalletInfo\n      address={address}\n      ensAddress={ensAddress}\n      className=\"user-popup__wallet-info\"\n      avatarClassName=\"user-popup__wallet-info-avatar\"\n    />\n    {address && (\n      <>\n        <NavLink to={routes.profile(address)} className=\"user-popup__nav-link\">Profile</NavLink>\n        <NavLink to={routes.profile(address)} className=\"user-popup__nav-link\">NFTs</NavLink>\n        <NavLink to={routes.userOrders(address)} className=\"user-popup__nav-link\">Listed</NavLink>\n        <NavLink to={routes.activity(address)} className=\"user-popup__nav-link\">Activity</NavLink>\n      </>\n    )}\n  </div>\n));\n\nexport default UserPopup;\n","import React, {\n  FC,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\n\nimport classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nimport Avatar from '../../components/Avatar/Avatar';\nimport Button from '../../components/Button/Button';\nimport { truncateAddress } from '../../helpers/string';\nimport { routes } from '../../routes';\nimport IconButton from '../IconButton/IconButton';\nimport IconNavLink from '../IconNavLink/IconNavLink';\nimport UserPopup from '../UserPopup/UserPopup';\n\nimport './TopBar.scss';\n\ninterface TopBarProps {\n  listButtonIsDisabled: boolean;\n  mobileMenuIsVisible: boolean;\n  showDesktopConnectButton: boolean;\n  showDesktopUserButton: boolean;\n  userWalletButtonIsDisabled: boolean;\n  account?: string;\n  avatarUrl?: string;\n  ensAddress: string | undefined;\n  onConnectButtonClick: () => void;\n  onDisconnectButtonClick: () => void;\n  onMobileMenuButtonClick: () => void;\n  className?: string;\n}\n\nconst TopBar: FC<TopBarProps> = ({\n  listButtonIsDisabled,\n  mobileMenuIsVisible,\n  showDesktopConnectButton,\n  showDesktopUserButton,\n  userWalletButtonIsDisabled,\n  account,\n  avatarUrl,\n  ensAddress,\n  onConnectButtonClick,\n  onDisconnectButtonClick,\n  onMobileMenuButtonClick,\n  className = '',\n}) => {\n  const userPopupRef = useRef<HTMLDivElement>(null);\n  const userButtonRef = useRef<HTMLButtonElement>(null);\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\n\n  const containerClassName = classNames('top-bar', {\n    'top-bar--mobile-menu-is-visible': mobileMenuIsVisible,\n  }, className);\n\n  const handleDisconnectClick = () => {\n    setIsPopupOpen(false);\n    onDisconnectButtonClick();\n  };\n\n  const handleDocumentClick = (e: MouseEvent) => {\n    if (e.target instanceof Node && (userPopupRef.current?.contains(e.target))) {\n      return;\n    }\n\n    if (e.target === userButtonRef.current) {\n      return;\n    }\n\n    setIsPopupOpen(false);\n  };\n\n  useEffect(() => {\n    document.addEventListener('mousedown', handleDocumentClick);\n\n    return () => document.removeEventListener('mousedown', handleDocumentClick);\n  }, [isPopupOpen]);\n\n  return (\n    <div className={containerClassName}>\n      <IconNavLink\n        hideLabel\n        icon=\"airswap\"\n        text=\"AirSwap button\"\n        to=\"/\"\n        className=\"top-bar__airswap-button\"\n      />\n      {account && (\n        <IconButton\n          hideLabel\n          icon={!mobileMenuIsVisible ? 'menu' : 'close'}\n          text=\"Menu button\"\n          onClick={onMobileMenuButtonClick}\n          className=\"top-bar__menu-button\"\n          iconClassName=\"top-bar__menu-button-icon\"\n        />\n      )}\n      <div className=\"top-bar__list-button-and-wallet-button-wrapper\">\n        <IconNavLink\n          aria-disabled={listButtonIsDisabled}\n          icon=\"plus\"\n          text=\"List a token\"\n          to={routes.listNft()}\n          className=\"top-bar__list-button\"\n          iconClassName=\"top-bar__list-button-icon\"\n        />\n        {showDesktopConnectButton && (\n          <Button\n            text=\"Connect\"\n            onClick={onConnectButtonClick}\n            className=\"top-bar__connect-button\"\n          />\n        )}\n        {showDesktopUserButton\n          && (\n            <NavLink\n              aria-disabled={userWalletButtonIsDisabled}\n              to={routes.profile(ensAddress || account || '')}\n              className=\"top-bar__user-button\"\n            >\n              <Avatar avatarUrl={avatarUrl} className=\"top-bar__user-button-icon\" />\n              {truncateAddress(ensAddress || account || '')}\n            </NavLink>\n          )}\n      </div>\n      {isPopupOpen && (\n        <UserPopup\n          address={account || undefined}\n          ensAddress={ensAddress}\n          ref={userPopupRef}\n          onLogoutButtonClick={handleDisconnectClick}\n          className=\"top-bar__user-popup\"\n        />\n      )}\n    </div>\n  );\n};\n\n\nexport default TopBar;\n","import React, { FC, ReactNode, useState } from 'react';\n\nimport classNames from 'classnames';\nimport { Helmet } from 'react-helmet';\n\nimport Button from '../../components/Button/Button';\nimport useEnsAddress from '../../hooks/useEnsAddress';\nimport { useAppDispatch, useAppSelector } from '../../redux/hooks';\nimport { clearLastProviderFromLocalStorage } from '../../redux/stores/web3/web3Api';\nimport { setShowConnectModal } from '../../redux/stores/web3/web3Slice';\nimport { getConnection } from '../../web3-connectors/connections';\nimport { tryDeactivateConnector } from '../../web3-connectors/helpers';\nimport WalletConnector from '../../widgets/WalletConnector/WalletConnector';\nimport MobileMenu from '../MobileMenu/MobileMenu';\nimport TopBar from '../TopBar/TopBar';\n\nimport './Page.scss';\n\ninterface PageProps {\n  children?: ReactNode;\n  className?: string;\n  contentClassName?: string;\n}\n\nconst Page: FC<PageProps> = ({ className = '', contentClassName = '', children }) => {\n  const dispatch = useAppDispatch();\n\n  const { isActive, account, chainId } = useAppSelector(state => state.web3);\n  const { config } = useAppSelector((state) => state);\n  const { isInitialized, showConnectModal, connectionType } = useAppSelector((state) => state.web3);\n  const { avatarUrl } = useAppSelector((state) => state.user);\n\n  const ensAddress = useEnsAddress(account || '');\n\n  const chainIdIsCorrect = !!chainId && chainId === config.chainId;\n\n  const [mobileMenuIsVisible, setMobileMenuIsVisible] = useState(false);\n\n  const pageClassName = classNames('page', {\n    'page--show-wallet-connector': showConnectModal,\n  }, className);\n\n  const handleIconButtonClick = (): void => {\n    setMobileMenuIsVisible(!mobileMenuIsVisible);\n  };\n\n  const handleDisconnectButtonClick = (): void => {\n    if (!connectionType) {\n      return;\n    }\n\n    tryDeactivateConnector(getConnection(connectionType).connector);\n    clearLastProviderFromLocalStorage();\n  };\n\n  const toggleShowWalletConnector = (): void => {\n    dispatch(setShowConnectModal(!showConnectModal));\n  };\n\n  return (\n    <div className={pageClassName}>\n      <Helmet>\n        <title>{config.collectionName}</title>\n      </Helmet>\n      <TopBar\n        listButtonIsDisabled={!chainIdIsCorrect || !account}\n        mobileMenuIsVisible={mobileMenuIsVisible}\n        showDesktopConnectButton={isInitialized && !isActive}\n        showDesktopUserButton={isInitialized && isActive}\n        userWalletButtonIsDisabled={!chainIdIsCorrect}\n        avatarUrl={avatarUrl}\n        account={account}\n        ensAddress={ensAddress}\n        onConnectButtonClick={toggleShowWalletConnector}\n        onDisconnectButtonClick={handleDisconnectButtonClick}\n        onMobileMenuButtonClick={handleIconButtonClick}\n        className=\"page__top-bar\"\n      />\n      {account && (\n        <MobileMenu\n          isHidden={!mobileMenuIsVisible}\n          avatarUrl={avatarUrl}\n          address={account}\n          onNavLinkClick={handleIconButtonClick}\n          className=\"page__mobile-menu\"\n        />\n      )}\n      <WalletConnector\n        onCloseButtonClick={toggleShowWalletConnector}\n        className=\"page__wallet-connector\"\n      />\n\n      <div className={`page__content ${contentClassName}`}>\n        {children}\n\n        {(!isActive && !showConnectModal) && (\n          <Button\n            text=\"Connect wallet\"\n            onClick={toggleShowWalletConnector}\n            className=\"page__connect-wallet-button\"\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Page;\n","import { Web3Provider } from '@ethersproject/providers';\n\nimport { rpcUrls } from '../constants/rpc';\n\nlet cachedLibrary: Record<number, Web3Provider> = {};\n\nexport const setCachedLibrary = (provider: Web3Provider, chainId: number): Web3Provider => {\n  if (!cachedLibrary[chainId]) {\n    cachedLibrary[chainId] = provider;\n  }\n  return cachedLibrary[chainId];\n};\n\nexport const clearedCachedLibrary = (): void => {\n  cachedLibrary = {};\n};\n\nexport const getLibrary = (chainId: number): Web3Provider => cachedLibrary[chainId];\n\nexport const getRpcUrl = (chainId: number): string | undefined => {\n  const rpcUrl = rpcUrls[chainId];\n\n  if (!rpcUrl) {\n    console.error(\n      `No rpc url found for chainId ${chainId}, did you setup your .env correctly?`,\n    );\n\n    return undefined;\n  }\n\n  return rpcUrl;\n};\n","import { useMemo } from 'react';\n\nimport { BaseProvider } from '@ethersproject/providers/src.ts/base-provider';\nimport { getDefaultProvider } from 'ethers';\n\nimport { getLibrary, getRpcUrl } from '../helpers/ethers';\nimport { useAppSelector } from '../redux/hooks';\n\n// Hook for getting library from connected wallet or from rpc url, this way you can still use it in ethers.js methods\n\nconst useDefaultLibrary = (chainId?: number): BaseProvider | undefined => {\n  const { isActive, chainId: providerChainId } = useAppSelector(state => state.web3);\n\n  return useMemo(() => {\n    const library = providerChainId ? getLibrary(providerChainId) : undefined;\n\n    if ((!chainId && library) || (library && chainId === providerChainId)) {\n      return library;\n    }\n\n    return chainId ? getDefaultProvider(getRpcUrl(chainId)) : undefined;\n  }, [isActive, chainId]);\n};\n\nexport default useDefaultLibrary;\n","import React, { FC } from 'react';\n\nimport './Input.scss';\n\ntype HTMLInputProps = JSX.IntrinsicElements['input'];\n\ninterface InputProps extends HTMLInputProps {\n  className?: string;\n}\n\nconst Input: FC<InputProps> = ({ type, className = '', ...props }) => (\n  <input\n    {...props}\n    type={type}\n    className={`input ${className}`}\n  />\n);\n\nexport default Input;\n","import React, { FC } from 'react';\n\nimport Icon from '../Icon/Icon';\nimport Input from '../Input/Input';\n\nimport './SearchInput.scss';\n\ntype HTMLInputProps = JSX.IntrinsicElements['input'];\n\ninterface SearchInputProps extends HTMLInputProps {\n  className?: string;\n}\n\nconst SearchInput: FC<SearchInputProps> = ({ className = '', ...props }) => (\n  <div className={`search-input ${className}`}>\n    <Input\n      {...props}\n      type=\"text\"\n      className=\"search-input__input\"\n    />\n    <Icon name=\"search\" className=\"search-input__icon\" />\n  </div>\n);\n\nexport default SearchInput;\n","import React, { FC } from 'react';\n\nimport './LoadingSpinner.scss';\n\ninterface LoadingSpinnerProps {\n  className?: string;\n}\n\nconst LoadingSpinner: FC<LoadingSpinnerProps> = ({ className = '' }) => (\n  <div className={`loading-spinner ${className}`}>\n    <svg className=\"loading-spinner__svg\" viewBox=\"0 0 26 26\">\n      <circle cx=\"13\" cy=\"13\" r=\"12\" fill=\"none\" />\n    </svg>\n  </div>\n);\n\nexport default LoadingSpinner;\n","import { FC, ReactElement } from 'react';\n\nimport { NavLink } from 'react-router-dom';\n\nimport './EmptyState.scss';\n\ninterface EmptyStateProps {\n  hasButton?: boolean;\n  buttonText?: string;\n  route?: string;\n  text?: string;\n  className?: string;\n}\n\nconst EmptyState: FC<EmptyStateProps> = ({\n  hasButton = false,\n  buttonText,\n  route,\n  text,\n  className = '',\n}): ReactElement => (\n  <div className={`empty-state ${className}`}>\n    {text && (\n      <p className=\"empty-state__text\">\n        {text}\n      </p>\n    )}\n    {(hasButton && route) && (\n      <NavLink\n        to={route}\n        className=\"empty-state__link\"\n      >\n        {buttonText}\n      </NavLink>\n    )}\n  </div>\n);\n\nexport default EmptyState;\n","import React, { CSSProperties } from 'react';\n\nimport classNames from 'classnames';\nimport { NavLink, NavLinkProps } from 'react-router-dom';\n\nimport './NftCard.scss';\n\ninterface NftCardProps extends NavLinkProps {\n  isDisabled?: boolean;\n  isHighlighted?: boolean;\n  balance?: string;\n  expiry?: Date;\n  id: string;\n  imageURI?: string;\n  label?: string;\n  name?: string;\n  price?: string;\n  symbol?: string;\n  className?: string;\n}\n\nconst NftCard = ({\n  isDisabled,\n  isHighlighted,\n  balance,\n  id,\n  expiry,\n  imageURI,\n  label,\n  name,\n  price,\n  symbol,\n  to,\n  className = '',\n}: NftCardProps) => {\n  const linkClassName = classNames('nft-card', {\n    'nft-card--is-disabled': isDisabled,\n    'nft-card--is-highlighted': isHighlighted,\n  }, className);\n\n  const isExpired = expiry && expiry < new Date();\n  const expiryTranslation = isExpired ? 'Sale ended' : 'Sale ends';\n\n  const cssProperties: CSSProperties = {\n    viewTransitionName: `nft-image-${id}`,\n  };\n\n  return (\n    <NavLink\n      unstable_viewTransition\n      to={to}\n      className={linkClassName}\n    >\n      <img\n        src={imageURI}\n        alt={name}\n        style={cssProperties}\n        className=\"nft-card__img\"\n      />\n      {(label || balance) && (\n        <div className=\"nft-card__header\">\n          {label && <div className=\"nft-card__label\">{label}</div>}\n          {balance && <div className=\"nft-card__balance\">{`${balance}x`}</div>}\n        </div>\n      )}\n      <div className=\"nft-card__info-wrapper\">\n        <h3 className=\"nft-card__name\">{name}</h3>\n        <h4 className=\"nft-card__price\">\n          {(price && symbol) ? `${price} ${symbol}` : <>&nbsp;</>}\n        </h4>\n        {expiry && (\n          <h5 className=\"nft-card__expiry\">{`${expiryTranslation} ${expiry.toLocaleString()}`}</h5>\n        )}\n      </div>\n    </NavLink>\n  );\n};\n\nexport default NftCard;\n","import React from 'react';\n\nimport classNames from 'classnames';\nimport { NavLink, NavLinkProps } from 'react-router-dom';\n\nimport LoadingSpinner from '../LoadingSpinner/LoadingSpinner';\n\nimport './NftCardSkeleton.scss';\n\ninterface NftCardSkeletonProps extends NavLinkProps {\n  isHighlighted?: boolean;\n  price?: string;\n  symbol?: string;\n  className?: string;\n}\n\nconst NftCardSkeleton = ({\n  isHighlighted,\n  price,\n  symbol,\n  to,\n  className = '',\n}: NftCardSkeletonProps) => {\n  const linkClassName = classNames('nft-card-skeleton', {\n    'nft-card--is-highlighted': isHighlighted,\n  }, className);\n\n  return (\n    <NavLink\n      to={to}\n      className={linkClassName}\n    >\n      <div className=\"nft-card-skeleton__loader-wrapper\">\n        <LoadingSpinner className=\"nft-card__loader\" />\n      </div>\n      <div className=\"nft-card-skeleton__info-wrapper\">\n        <h3 className=\"nft-card__name\">&nbsp;</h3>\n        {(price && symbol) && (\n          <h4 className=\"nft-card__price\">\n            {`${price} ${symbol}`}\n          </h4>\n        )}\n      </div>\n    </NavLink>\n  );\n};\n\nexport default NftCardSkeleton;\n","export enum FullOrderState {\n  expired = 'expired',\n  invalid = 'invalid',\n  open = 'open',\n  taken = 'taken',\n}\n\n","import { BatchCall, Swap } from '@airswap/libraries';\nimport { FullOrder, TokenInfo } from '@airswap/types';\nimport { BaseProvider } from '@ethersproject/providers';\nimport { format } from '@greypixel_/nicenumbers';\nimport { BigNumber } from 'bignumber.js';\n\nimport { nativeCurrencyAddress } from '../../constants/nativeCurrency';\nimport { FullOrderState } from '../../types/FullOrderState';\n\n// A nonce is generated by signer and is not necessarily unique.\nexport const getFullOrderKey = (fullOrder: FullOrder): string => `${fullOrder.nonce}:${fullOrder.signer.token}:${fullOrder.signer.id}`;\n\nexport const getFullOrderSenderAmountPlusTotalFees = (fullOrder: FullOrder): BigNumber => {\n  const protocolFeePercentage = +fullOrder.protocolFee / 10000;\n  const affiliateFeePercentage = +fullOrder.affiliateAmount / 10000;\n  const feePercentage = protocolFeePercentage + affiliateFeePercentage;\n  const fullAmount = new BigNumber(fullOrder.sender.amount).dividedBy(1 - feePercentage);\n\n  return fullAmount.decimalPlaces(0, BigNumber.ROUND_UP);\n};\n\nexport const getFullOrderReadableSenderAmountPlusTotalFees = (fullOrder: FullOrder, token: TokenInfo): string => {\n  const amount = getFullOrderSenderAmountPlusTotalFees(fullOrder);\n\n  return format(amount, {\n    tokenDecimals: token.decimals,\n    omitTrailingZeroes: true,\n  });\n};\n\nexport const getFullOrderReadableSenderAmount = (fullOrder: FullOrder, token: TokenInfo): string => format(fullOrder.sender.amount, {\n  tokenDecimals: token.decimals,\n  omitTrailingZeroes: true,\n});\n\nexport const getFullOrderExpiryDate = (fullOrder: FullOrder): Date => new Date(+fullOrder.expiry * 1000);\n\nexport const isFullOrderExpired = (fullOrder: FullOrder): boolean => getFullOrderExpiryDate(fullOrder) < new Date();\n\nexport const getFullOrderNonceUsed = (\n  order: FullOrder,\n  provider: BaseProvider,\n): Promise<boolean> => Swap.getContract(provider, order.chainId).nonceUsed(\n  order.signer.wallet,\n  order.nonce,\n);\n\nexport const getFullOrdersNonceUsed = (orders: FullOrder[], provider: BaseProvider): Promise<boolean[]> => {\n  if (orders.length === 0) {\n    return Promise.resolve([]);\n  }\n\n  const { chainId } = orders[0];\n  const contract = BatchCall.getContract(provider, chainId);\n\n  return contract.getNoncesUsed(\n    orders.map(order => order.signer.wallet),\n    orders.map(order => order.nonce),\n    Swap.getAddress(chainId),\n  );\n};\n\nexport const getFullOrdersIsValid = async (orders: FullOrder[], provider: BaseProvider): Promise<boolean[]> => {\n  if (orders.length === 0) {\n    return Promise.resolve([]);\n  }\n\n  const { chainId } = orders[0];\n  const contract = BatchCall.getContract(provider, chainId);\n\n  return contract.getOrdersValid(\n    nativeCurrencyAddress,\n    orders,\n    Swap.getAddress(chainId),\n  );\n};\n\nexport const getFullOrderLabelTranslation = (state: FullOrderState, isHighlighted?: boolean): string | undefined => {\n  if (isHighlighted) {\n    return 'Newly listed';\n  }\n\n  switch (state) {\n    case FullOrderState.expired:\n      return 'Expired';\n    case FullOrderState.invalid:\n      return 'Invalid';\n    case FullOrderState.taken:\n      return 'Taken';\n    default:\n      return undefined;\n  }\n};\n","import React, { FC, ReactElement, useMemo } from 'react';\n\nimport { CollectionTokenInfo, TokenInfo } from '@airswap/types';\n\nimport NftCard from '../../../../components/NftCard/NftCard';\nimport NftCardSkeleton from '../../../../components/NftCardSkeleton/NftCardSkeleton';\nimport { ExtendedFullOrder } from '../../../../entities/FullOrder/FullOrder';\nimport {\n  getFullOrderExpiryDate,\n  getFullOrderLabelTranslation,\n  getFullOrderReadableSenderAmountPlusTotalFees,\n} from '../../../../entities/FullOrder/FullOrderHelpers';\nimport { routes } from '../../../../routes';\nimport { FullOrderState } from '../../../../types/FullOrderState';\n\ninterface OrdersListItemProps {\n  showExpiryDate?: boolean;\n  currencyTokenInfo: TokenInfo;\n  highlightOrderNonce?: string;\n  order: ExtendedFullOrder;\n  tokens: CollectionTokenInfo[];\n  className?: string;\n}\n\nconst OrdersListItem: FC<OrdersListItemProps> = ({\n  showExpiryDate,\n  currencyTokenInfo,\n  highlightOrderNonce,\n  order,\n  tokens,\n  className = '',\n}): ReactElement => {\n  const orderToken = useMemo(() => (\n    tokens.find(token => token.id === order.signer.id)\n  ), [tokens, order]);\n  const price = useMemo(() => getFullOrderReadableSenderAmountPlusTotalFees(order, currencyTokenInfo), [order, currencyTokenInfo]);\n  const isHighlighted = order.nonce === highlightOrderNonce;\n  const label = getFullOrderLabelTranslation(order.state, isHighlighted);\n\n  if (!orderToken) {\n    return (\n      <NftCardSkeleton\n        isHighlighted={order.nonce === highlightOrderNonce}\n        price={price.toString()}\n        symbol={currencyTokenInfo.symbol}\n        to={routes.nftDetail(order.signer.id)}\n        className={`orders-list-item ${className}`}\n      />\n    );\n  }\n\n  return (\n    <NftCard\n      isDisabled={order.state !== FullOrderState.open}\n      isHighlighted={isHighlighted}\n      expiry={showExpiryDate ? getFullOrderExpiryDate(order) : undefined}\n      id={order.signer.id}\n      imageURI={orderToken.image}\n      label={label}\n      price={price.toString()}\n      name={orderToken.name}\n      symbol={currencyTokenInfo.symbol}\n      to={routes.nftDetail(order.signer.id)}\n      className={`orders-list-item ${className}`}\n    />\n  );\n};\n\nexport default OrdersListItem;\n","import React, { FC, ReactElement } from 'react';\n\nimport { CollectionTokenInfo, TokenInfo } from '@airswap/types';\n\nimport Icon from '../../components/Icon/Icon';\nimport LoadingSpinner from '../../components/LoadingSpinner/LoadingSpinner';\nimport EmptyState from '../../compositions/EmptyState/EmptyState';\nimport { ExtendedFullOrder } from '../../entities/FullOrder/FullOrder';\nimport { routes } from '../../routes';\nimport OrdersListItem from './subcomponents/OrdersListItem/OrdersListItem';\n\nimport './OrdersContainer.scss';\n\ninterface OrdersContainerProps {\n  hasListCallToActionButton?: boolean;\n  isEndOfOrders: boolean;\n  isLoading: boolean;\n  showExpiryDate?: boolean;\n  currencyTokenInfo: TokenInfo;\n  highlightOrderNonce?: string;\n  listCallToActionText?: string;\n  orders: ExtendedFullOrder[];\n  tokens: CollectionTokenInfo[];\n  className?: string;\n}\n\nconst OrdersContainer: FC<OrdersContainerProps> = ({\n  hasListCallToActionButton = false,\n  isEndOfOrders,\n  isLoading,\n  showExpiryDate = false,\n  currencyTokenInfo,\n  highlightOrderNonce,\n  listCallToActionText,\n  orders,\n  tokens,\n  className = '',\n}): ReactElement => {\n  if (!isLoading && !orders.length) {\n    return (\n      <div className={`orders-container ${className}`}>\n        <EmptyState\n          hasButton={hasListCallToActionButton}\n          buttonText=\"List a token\"\n          route={routes.listNft()}\n          text={listCallToActionText}\n          className=\"orders-container__empty-state\"\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className={`orders-container ${className}`}>\n      <ul className=\"orders-container__orders\">\n        {orders\n          .map(order => (\n            <li key={order.key}>\n              <OrdersListItem\n                showExpiryDate={showExpiryDate}\n                currencyTokenInfo={currencyTokenInfo}\n                highlightOrderNonce={highlightOrderNonce}\n                order={order}\n                tokens={tokens}\n              />\n            </li>\n          ))}\n      </ul>\n      {isLoading && <LoadingSpinner className=\"orders-container__loading-spinner\" />}\n      <div className=\"orders-container__end-of-orders-icon-wrapper\">\n        {(!isLoading && isEndOfOrders) && <Icon name=\"airswap\" className=\"orders-container__end-of-orders-icon\" />}\n      </div>\n    </div>\n  );\n};\n\nexport default OrdersContainer;\n","import { useAppSelector } from '../redux/hooks';\n\nconst useCollectionImage = (): { bannerImage: string; } => {\n  const { bannerImage } = useAppSelector(state => state.metadata);\n  const { collectionImage } = useAppSelector(state => state.config);\n\n  return {\n    bannerImage: collectionImage || bannerImage || '',\n  };\n};\n\nexport default useCollectionImage;\n","// Source: https://stackoverflow.com/a/8809472\n\nconst getRandomUuidFallback = (): string => {\n  let d = new Date().getTime();\n  let d2 = ((typeof performance !== 'undefined') && performance.now && (performance.now() * 1000)) || 0;\n\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n    let r = Math.random() * 16;\n    if (d > 0) {\n      r = (d + r) % 16 | 0;\n      d = Math.floor(d / 16);\n    } else {\n      r = (d2 + r) % 16 | 0;\n      d2 = Math.floor(d2 / 16);\n    }\n\n    // eslint-disable-next-line no-mixed-operators\n    return (c === 'x' ? r : (r & 0x3 | 0x8)).toString(16);\n  });\n};\n\nexport const getRandomUuid = (): string => {\n  if ('crypto' in window && 'randomUUID' in crypto) {\n    return crypto.randomUUID();\n  }\n\n  return getRandomUuidFallback();\n};\n","export enum ToastType {\n  deny = 'deny',\n  fail = 'fail',\n  info = 'info',\n  pending = 'pending',\n  success = 'success',\n  warning = 'warning',\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nimport { Toast } from '../../../entities/Toast/Toast';\n\ninterface ToastsState {\n  toasts: Toast[];\n  lastToastActionButtonIdClicked?: string;\n}\n\nconst initialState: ToastsState = {\n  toasts: [],\n};\n\nconst toastsSlice = createSlice({\n  name: 'toasts',\n  initialState,\n  reducers: {\n    setLastToastActionButtonIdClicked: (state, action: PayloadAction<string | undefined>): ToastsState => ({\n      ...state,\n      lastToastActionButtonIdClicked: action.payload,\n    }),\n    setToasts: (state, action: PayloadAction<Toast[]>): ToastsState => ({\n      ...state,\n      toasts: action.payload,\n    }),\n  },\n});\n\nexport const { setLastToastActionButtonIdClicked, setToasts } = toastsSlice.actions;\n\nexport default toastsSlice.reducer;\n","import { Toast } from '../../../entities/Toast/Toast';\nimport { getRandomUuid } from '../../../helpers/crypto';\nimport { ToastType } from '../../../types/ToastType';\nimport { AppDispatch, RootState } from '../../store';\nimport { setToasts } from './toastsSlice';\n\nexport const addToast = (newToast: Toast) => async (dispatch: AppDispatch, getState: () => RootState): Promise<void> => {\n  const { toasts } = getState().toasts;\n\n  const newToasts = [newToast, ...toasts].reduce((total, toast, index) => {\n    const amountOfNonWillAutomaticallyHide = total.filter(t => !t.willAutomaticallyHide).length;\n\n    const updatedToast = {\n      ...toast,\n      ...(index > 2 && toast.willAutomaticallyHide && { isHidden: true }),\n      ...(amountOfNonWillAutomaticallyHide > 2 && { isHidden: true }),\n    };\n\n    return [\n      ...total,\n      updatedToast,\n    ];\n  }, [] as Toast[]);\n\n  dispatch(setToasts(newToasts));\n};\n\nexport const hideToast = (toastId: string) => async (dispatch: AppDispatch, getState: () => RootState): Promise<void> => {\n  const { toasts } = getState().toasts;\n\n  const newToast = toasts.find(toast => toast.id === toastId);\n\n  if (!newToast || newToast.isHidden) {\n    return;\n  }\n\n  const index = toasts.findIndex(toast => toast.id === toastId);\n  const updatedToast = { ...newToast, isHidden: true };\n  const updatedToasts = [...toasts];\n  updatedToasts.splice(index, 1, updatedToast);\n\n  dispatch(setToasts(updatedToasts));\n};\n\nexport const removeHiddenToasts = () => async (dispatch: AppDispatch, getState: () => RootState): Promise<void> => {\n  const { toasts } = getState().toasts;\n\n  if (!toasts.some(toast => toast.isHidden)) {\n    return;\n  }\n\n  dispatch(setToasts([...toasts].filter(toast => !toast.isHidden)));\n};\n\nexport const addUserRejectedToast = () => async (dispatch: AppDispatch): Promise<void> => {\n  dispatch(addToast({\n    type: ToastType.deny,\n    id: getRandomUuid(),\n    title: 'User rejected request',\n    willAutomaticallyHide: true,\n  }));\n};\n\nexport const addGetOrderFailedToast = () => async (dispatch: AppDispatch): Promise<void> => {\n  dispatch(addToast({\n    type: ToastType.fail,\n    id: getRandomUuid(),\n    title: 'Server error',\n    text: 'Failed to get orders from indexers',\n    willAutomaticallyHide: true,\n  }));\n};\n\nexport const addGetNftMetadataFailedToast = (error?: string) => async (dispatch: AppDispatch): Promise<void> => {\n  dispatch(addToast({\n    type: ToastType.fail,\n    id: getRandomUuid(),\n    title: 'Get NFT metadata failed',\n    text: error,\n    willAutomaticallyHide: true,\n  }));\n};\n\nexport const addInfoToast = (title: string, text: string) => async (dispatch: AppDispatch): Promise<void> => {\n  dispatch(addToast({\n    type: ToastType.info,\n    id: getRandomUuid(),\n    title,\n    text,\n    willAutomaticallyHide: true,\n  }));\n};\n\nexport const addNftSoldToast = (tokenId: string) => async (dispatch: AppDispatch): Promise<void> => {\n  dispatch(addToast({\n    type: ToastType.success,\n    id: getRandomUuid(),\n    title: 'Nft Sold',\n    text: `Your nft with id #${tokenId} has been sold.`,\n  }));\n};\n","import { useEffect, useMemo, useState } from 'react';\n\nimport { CollectionTokenInfo } from '@airswap/types';\n\nimport { getCollectionToken, isCollectionTokenInfo } from '../entities/CollectionToken/CollectionTokenHelpers';\nimport { AppError, isAppError } from '../errors/appError';\nimport { useAppDispatch, useAppSelector } from '../redux/hooks';\nimport { addCollectionTokenInfo } from '../redux/stores/metadata/metadataActions';\nimport { addGetNftMetadataFailedToast } from '../redux/stores/toasts/toastsActions';\nimport useDefaultLibrary from './useDefaultProvider';\n\nconst useCollectionTokens = (address: string, tokenIds: string[]): [CollectionTokenInfo[], boolean, AppError | undefined] => {\n  const { chainId } = useAppSelector((state) => state.config);\n  const { metadata } = useAppSelector(state => state);\n\n  const dispatch = useAppDispatch();\n  const library = useDefaultLibrary(chainId);\n\n  const [isContractCalled, setIsContractCalled] = useState(false);\n  const [isContractLoading, setIsContractLoading] = useState(true);\n  const [collectionTokens, setCollectionTokens] = useState<CollectionTokenInfo[]>([]);\n  const [error, setError] = useState<AppError>();\n\n  const collectionTokensFromStore = useMemo(() => tokenIds\n    .filter(tokenId => !!metadata.collectionTokens[tokenId])\n    .map(tokenId => metadata.collectionTokens[tokenId]), [tokenIds, metadata.collectionTokens]);\n  const tokenIdsToFetch = tokenIds.filter(tokenId => !metadata.collectionTokens[tokenId]);\n\n  useEffect((): void => {\n    setIsContractCalled(false);\n    setCollectionTokens([]);\n  }, [tokenIds.length]);\n\n  useEffect((): void => {\n    if (!library || isContractCalled || !tokenIdsToFetch.length) {\n      return;\n    }\n\n    const callGetCollectionToken = async () => {\n      const results = await Promise.all(tokenIdsToFetch.map(tokenId => getCollectionToken(library, address, tokenId)));\n      const newError = results.find(isAppError);\n\n      if (newError) {\n        setError(newError);\n        dispatch(addGetNftMetadataFailedToast(newError.argument));\n      }\n\n      const newCollectionTokens = results.filter(isCollectionTokenInfo);\n\n      dispatch(addCollectionTokenInfo(newCollectionTokens));\n\n      setCollectionTokens(newCollectionTokens);\n      setIsContractLoading(false);\n    };\n\n    setIsContractCalled(true);\n    setIsContractLoading(true);\n    callGetCollectionToken();\n  }, [\n    library,\n    address,\n    tokenIdsToFetch,\n    isContractCalled,\n  ]);\n\n  if (!tokenIdsToFetch.length) {\n    return [collectionTokensFromStore, false, error];\n  }\n\n  return [[...collectionTokensFromStore, ...collectionTokens], isContractLoading, error];\n};\n\nexport default useCollectionTokens;\n","import { useEffect, useState } from 'react';\n\nconst useScrollToBottom = (): boolean => {\n  const [scrolledToBottom, setIsScrolledToBottom] = useState(false);\n\n  const handleScroll = async () => {\n    const { scrollTop } = document.documentElement;\n    const { scrollHeight } = document.documentElement;\n    const { clientHeight } = document.documentElement;\n\n    setIsScrolledToBottom(scrollTop + clientHeight >= scrollHeight);\n  };\n\n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll);\n\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n\n  return scrolledToBottom;\n};\n\nexport default useScrollToBottom;\n","import { FullOrder } from '@airswap/types';\n\nimport { FullOrderState } from '../../types/FullOrderState';\nimport { ExtendedFullOrder } from './FullOrder';\nimport { getFullOrderKey, isFullOrderExpired } from './FullOrderHelpers';\n\nconst getFullOrderState = (fullOrder: FullOrder, isTaken: boolean, isValid: boolean): FullOrderState => {\n  const isExpired = isFullOrderExpired(fullOrder);\n\n  if (isTaken) {\n    return FullOrderState.taken;\n  }\n\n  if (isExpired) {\n    return FullOrderState.expired;\n  }\n\n  if (!isValid) {\n    return FullOrderState.invalid;\n  }\n\n  return FullOrderState.open;\n};\n\nexport const transformToExtendedFullOrder = (fullOrder: FullOrder, isTaken: boolean, isValid: boolean): ExtendedFullOrder => ({\n  ...fullOrder,\n  key: getFullOrderKey(fullOrder),\n  state: getFullOrderState(fullOrder, isTaken, isValid),\n});\n\n","import { Server } from '@airswap/libraries';\nimport {\n  Direction,\n  FullOrder,\n  Indexes,\n  OrderResponse,\n} from '@airswap/types';\n\nimport { INDEXER_ORDER_RESPONSE_TIME_MS } from '../../../constants/indexer';\nimport { OrderFilter } from '../../../entities/OrderFilter/OrderFilter';\nimport { getUndefinedAfterTimeout, isPromiseFulfilledResult } from '../../../helpers/indexers';\n\nexport const getOrdersFromServer = async (server: Server, filter: OrderFilter): Promise<OrderResponse<FullOrder> | undefined> => {\n  const defaultFilter: Partial<OrderFilter> = {\n    chainId: +(process.env.REACT_APP_CHAIN_ID || '1'),\n    signerToken: process.env.REACT_APP_COLLECTION_TOKEN,\n    senderToken: process.env.REACT_APP_CURRENCY_TOKEN,\n    sortField: Indexes.NONCE,\n    sortOrder: Direction.DESC,\n  };\n\n  const filterWithDefaults: OrderFilter = {\n    ...defaultFilter,\n    ...filter,\n  };\n\n  try {\n    // @ts-ignore\n    return await server.getOrders(\n      filterWithDefaults,\n      filterWithDefaults.offset || 0,\n      filterWithDefaults.limit || 9999,\n      // @ts-ignore\n      filterWithDefaults.sortField,\n      filterWithDefaults.sortOrder,\n    );\n  } catch (e: any) {\n    console.error(\n      `[getOrdersFromServer] Order indexing failed for ${server.locator}`,\n      e.message || '',\n    );\n\n    return undefined;\n  }\n};\n\nexport const getServers = async (indexerUrls: string[]): Promise<Server[]> => {\n  const results: PromiseSettledResult<Server>[] = await Promise.allSettled(\n    indexerUrls.map((url) => Server.at(url)),\n  );\n\n  const fulfilledResults = results.filter(isPromiseFulfilledResult) as PromiseFulfilledResult<Server>[];\n\n  return fulfilledResults.map((result) => result.value);\n};\n\nconst addOrderHelper = (server: Server, order: FullOrder): Promise<boolean> => new Promise((resolve, reject) => {\n  server\n    .addOrder(order)\n    .then((response) => {\n      resolve(response);\n    })\n    .catch((e) => {\n      console.error(\n        `[addOrderHelper] Order indexing failed for ${server.locator}`,\n        e.message || '',\n      );\n      reject(e);\n    });\n});\n\nexport const sendOrderToIndexers = async (\n  order: FullOrder,\n  indexerUrls: string[],\n): Promise<boolean | undefined> => {\n  const servers = await getServers(indexerUrls);\n\n  if (!servers.length) {\n    console.error('[sendOrderToIndexers] No indexer servers provided');\n  }\n\n  return Promise.any([\n    ...servers.map(server => addOrderHelper(server, order)),\n    getUndefinedAfterTimeout(INDEXER_ORDER_RESPONSE_TIME_MS),\n  ]);\n};\n\n","export const INDEXER_ORDER_RESPONSE_TIME_MS = 4000;\nexport const INDEXER_ORDERS_OFFSET = 16;\n","export const getUniqueArrayChildren = <T>(array: T[], key: string) => [...new Map(array.map((item: any) => [item[key], item])).values()];\n\nexport const getUniqueSingleDimensionArray = <T>(value: T, index: number, array: T[]) => array.indexOf(value) === index;\n\n","import { FullOrder, OrderResponse } from '@airswap/types';\nimport { BaseProvider } from '@ethersproject/providers';\n\nimport { INDEXER_ORDER_RESPONSE_TIME_MS } from '../constants/indexer';\nimport { ExtendedFullOrder } from '../entities/FullOrder/FullOrder';\nimport { getFullOrdersIsValid, getFullOrdersNonceUsed } from '../entities/FullOrder/FullOrderHelpers';\nimport { transformToExtendedFullOrder } from '../entities/FullOrder/FullOrderTransformers';\nimport { OrderFilter } from '../entities/OrderFilter/OrderFilter';\nimport { getOrdersFromServer, getServers } from '../redux/stores/indexer/indexerHelpers';\nimport { getUniqueArrayChildren } from './array';\n\nexport const isPromiseFulfilledResult = <T>(result: any): result is PromiseFulfilledResult<T> => result && result.status === 'fulfilled' && 'value' in result;\n\nexport const isOrderResponse = <T>(resource: any): resource is OrderResponse<T> => (resource && 'orders' in resource);\n\nexport const getUndefinedAfterTimeout = (time: number): Promise<undefined> => new Promise<undefined>((resolve) => {\n  setTimeout(() => resolve(undefined), time);\n});\n\nexport const getOrdersFromIndexers = async (filter: OrderFilter, indexerUrls: string[], provider: BaseProvider): Promise<ExtendedFullOrder[]> => {\n  if (!indexerUrls.length) {\n    console.error('[getOrdersFromIndexers] No indexer urls provided');\n  }\n\n  const servers = await getServers(indexerUrls);\n\n  const responses = await Promise.all(\n    servers.map(server => Promise.race([\n      getOrdersFromServer(server, filter),\n      getUndefinedAfterTimeout(INDEXER_ORDER_RESPONSE_TIME_MS),\n    ])),\n  );\n\n  const orderResponses = responses.filter(isOrderResponse<FullOrder>);\n\n  if (orderResponses.length === 0) {\n    console.error('[getOrdersFromIndexers] No order responses received');\n\n    throw new Error('No order responses received');\n  }\n  const allOrders = orderResponses\n    .flatMap(orderResponse => orderResponse.orders);\n  const uniqueOrders: FullOrder[] = getUniqueArrayChildren<FullOrder>(allOrders, 'nonce');\n\n  const noncesUsed = await getFullOrdersNonceUsed(uniqueOrders, provider);\n  const validOrders = await getFullOrdersIsValid(uniqueOrders, provider);\n\n  return uniqueOrders.map((fullOrder, index) => (\n    transformToExtendedFullOrder(fullOrder, noncesUsed[index], validOrders[index])\n  ));\n};\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nimport { INDEXER_ORDERS_OFFSET } from '../../../constants/indexer';\nimport { ExtendedFullOrder } from '../../../entities/FullOrder/FullOrder';\nimport { getUniqueArrayChildren } from '../../../helpers/array';\nimport { getCollectionOrders } from './collectionApi';\n\nexport interface CollectionState {\n  hasServerError: boolean;\n  isTotalOrdersReached: boolean;\n  offset: number;\n  orders: ExtendedFullOrder[];\n  isLoading: boolean;\n}\n\nconst initialState: CollectionState = {\n  hasServerError: false,\n  isTotalOrdersReached: false,\n  offset: 0,\n  orders: [],\n  isLoading: false,\n};\n\nexport const collectionSlice = createSlice({\n  name: 'collection',\n  initialState,\n  reducers: {\n    reset: (): CollectionState => ({\n      ...initialState,\n    }),\n    setOffset: (state, action: PayloadAction<number>): CollectionState => ({\n      ...state,\n      offset: action.payload,\n    }),\n    setOrders: (state, action: PayloadAction<ExtendedFullOrder[]>): CollectionState => ({\n      ...state,\n      orders: action.payload,\n    }),\n  },\n  extraReducers: (builder) => {\n    builder.addCase(getCollectionOrders.fulfilled, (state, action: PayloadAction<ExtendedFullOrder[]>): CollectionState => {\n      const newOrders = getUniqueArrayChildren([\n        ...state.orders,\n        ...action.payload,\n      ], 'nonce');\n      const isTotalOrdersReached = action.payload.length < INDEXER_ORDERS_OFFSET;\n\n      return {\n        ...state,\n        isLoading: false,\n        isTotalOrdersReached,\n        orders: newOrders,\n      };\n    });\n    builder.addCase(getCollectionOrders.pending, (state): CollectionState => ({\n      ...state,\n      isLoading: true,\n    }));\n    builder.addCase(getCollectionOrders.rejected, (state): CollectionState => ({\n      ...state,\n      hasServerError: true,\n      isTotalOrdersReached: true,\n      isLoading: false,\n    }));\n  },\n});\n\nexport const {\n  reset,\n  setOffset,\n  setOrders,\n} = collectionSlice.actions;\n\nexport default collectionSlice.reducer;\n","import { BaseProvider } from '@ethersproject/providers';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\nimport { ExtendedFullOrder } from '../../../entities/FullOrder/FullOrder';\nimport { getOrdersFromIndexers } from '../../../helpers/indexers';\nimport { AppThunkApiConfig } from '../../store';\nimport { addGetOrderFailedToast } from '../toasts/toastsActions';\nimport { setOffset } from './collectionSlice';\n\ninterface GetCollectionOrdersParams {\n  limit: number;\n  offset: number;\n  provider: BaseProvider;\n}\n\nexport const getCollectionOrders = createAsyncThunk<\nExtendedFullOrder[],\nGetCollectionOrdersParams,\nAppThunkApiConfig\n>('collection/getCollectionOrders', async ({ provider, ...filter }, { dispatch, getState }) => {\n  const { indexer } = getState();\n\n  dispatch(setOffset(filter.limit + filter.offset));\n\n  try {\n    return await getOrdersFromIndexers(filter, indexer.urls, provider);\n  } catch {\n    dispatch(addGetOrderFailedToast());\n\n    throw new Error('Failed to get orders');\n  }\n});\n","const getListCallToActionText = (searchValue: string, userHasTokens: boolean, hasServerError: boolean): string => {\n  if (hasServerError) {\n    return 'Unable to fetch listings.';\n  }\n\n  if (searchValue.length) {\n    return 'No listing results. Try another search term.';\n  }\n\n  if (userHasTokens) {\n    return 'No active listings. List a token.';\n  }\n\n  return 'No active listings.';\n};\n\nexport default getListCallToActionText;\n","import React, { FC } from 'react';\n\nimport './CollectionPortrait.scss';\n\ninterface CollectionPortraitProps {\n  backgroundImage: string;\n  subTitle: string;\n  title: string;\n  className?: string;\n}\n\nconst CollectionPortrait: FC<CollectionPortraitProps> = ({\n  backgroundImage,\n  title,\n  subTitle,\n  className = '',\n}) => (\n  <div\n    style={{ backgroundImage: `url(\"${backgroundImage}\")` }}\n    className={`collection-portrait ${className}`}\n  >\n    <h2 className=\"collection-portrait__sub-title\">{subTitle}</h2>\n    <h1 className=\"collection-portrait__title\">{title}</h1>\n  </div>\n);\n\nexport default CollectionPortrait;\n","import React, {\n  FC,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\n\nimport { TokenInfo } from '@airswap/types';\nimport { BaseProvider } from '@ethersproject/providers';\n\nimport SearchInput from '../../../../components/SearchInput/SearchInput';\nimport { INDEXER_ORDERS_OFFSET } from '../../../../constants/indexer';\nimport OrdersContainer from '../../../../containers/OrdersContainer/OrdersContainer';\nimport { filterCollectionTokenBySearchValue } from '../../../../entities/CollectionToken/CollectionTokenHelpers';\nimport useCollectionImage from '../../../../hooks/useCollectionImage';\nimport useCollectionTokens from '../../../../hooks/useCollectionTokens';\nimport useScrollToBottom from '../../../../hooks/useScrollToBottom';\nimport { useAppDispatch, useAppSelector } from '../../../../redux/hooks';\nimport { getCollectionOrders } from '../../../../redux/stores/collection/collectionApi';\nimport { reset } from '../../../../redux/stores/collection/collectionSlice';\nimport getListCallToActionText from '../../helpers/getListCallToActionText';\nimport CollectionPortrait from '../CollectionPortrait/CollectionPortrait';\n\ninterface ConnectedCollectionWidgetProps {\n  currencyTokenInfo: TokenInfo;\n  provider: BaseProvider;\n  className?: string;\n}\n\nconst ConnectedCollectionWidget: FC<ConnectedCollectionWidgetProps> = ({ currencyTokenInfo, provider, className = '' }) => {\n  const dispatch = useAppDispatch();\n  const scrolledToBottom = useScrollToBottom();\n  const { bannerImage } = useCollectionImage();\n\n  const { collectionToken, collectionName } = useAppSelector((state) => state.config);\n  const { tokenIdsWithBalance } = useAppSelector((state) => state.balances);\n  const {\n    hasServerError,\n    isLoading,\n    isTotalOrdersReached,\n    offset = 0,\n    orders,\n  } = useAppSelector((state) => state.collection);\n\n  const [searchValue, setSearchValue] = useState<string>('');\n\n  const getOrders = () => {\n    if (isLoading || isTotalOrdersReached) {\n      return;\n    }\n\n    dispatch(getCollectionOrders({\n      offset,\n      limit: INDEXER_ORDERS_OFFSET,\n      provider,\n    }));\n  };\n\n  useEffect((): () => void => {\n    getOrders();\n\n    return () => dispatch(reset());\n  }, [provider]);\n\n  useEffect(() => {\n    if (scrolledToBottom) {\n      getOrders();\n    }\n  }, [scrolledToBottom]);\n\n  const userTokens = Object.keys(tokenIdsWithBalance);\n  const tokenIds = useMemo(() => orders.map(order => order.signer.id), [orders]);\n  const [tokens] = useCollectionTokens(collectionToken, tokenIds);\n  const filteredOrders = useMemo(() => (\n    orders.filter(order => {\n      const orderToken = tokens.find(token => token.id === order.signer.id);\n\n      return orderToken ? filterCollectionTokenBySearchValue(orderToken, searchValue) : true;\n    })), [orders, tokens, searchValue]);\n  const listCallToActionText = getListCallToActionText(searchValue, !!userTokens.length, hasServerError);\n\n  return (\n    <div className={`collection-widget ${className}`}>\n      <CollectionPortrait\n        backgroundImage={bannerImage}\n        subTitle=\"Collection\"\n        title={collectionName}\n        className=\"collection-widget__portrait\"\n      />\n      <div className=\"collection-widget__content\">\n        <SearchInput\n          placeholder=\"Search Listings\"\n          onChange={e => setSearchValue(e.target.value)}\n          value={searchValue || ''}\n          className=\"collection-widget__search-input\"\n        />\n        <h2 className=\"collection-widget__subtitle\">\n          {searchValue ? 'Search results' : 'All listings'}\n        </h2>\n        <OrdersContainer\n          hasListCallToActionButton={!!userTokens.length && !hasServerError}\n          isEndOfOrders={isTotalOrdersReached}\n          isLoading={isLoading || offset === 0}\n          currencyTokenInfo={currencyTokenInfo}\n          listCallToActionText={listCallToActionText}\n          orders={filteredOrders}\n          tokens={tokens}\n          className=\"collection-widget__nfts-container\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default ConnectedCollectionWidget;\n","import React, { FC } from 'react';\n\nimport useCollectionImage from '../../../../hooks/useCollectionImage';\nimport { useAppSelector } from '../../../../redux/hooks';\nimport CollectionPortrait from '../CollectionPortrait/CollectionPortrait';\n\ninterface DisconnectedCollectionWidgetProps {\n  className?: string;\n}\n\nconst DisconnectedCollectionWidget: FC<DisconnectedCollectionWidgetProps> = ({ className = '' }) => {\n  const { bannerImage } = useCollectionImage();\n  const { collectionName } = useAppSelector((state) => state.config);\n\n  return (\n    <div className={`collection-widget ${className}`}>\n      <CollectionPortrait\n        backgroundImage={bannerImage}\n        subTitle=\"Collection\"\n        title={collectionName}\n        className=\"collection-widget__portrait\"\n      />\n    </div>\n  );\n};\n\nexport default DisconnectedCollectionWidget;\n","import React, { FC } from 'react';\n\nimport useDefaultProvider from '../../hooks/useDefaultProvider';\nimport { useAppSelector } from '../../redux/hooks';\nimport ConnectedCollectionWidget from './subcomponents/ConnectedCollectionWidget/ConnectedCollectionWidget';\nimport DisconnectedCollectionWidget from './subcomponents/DisconnectedCollectionWidget/DisconnectedCollectionWidget';\n\nimport './CollectionWidget.scss';\n\nconst CollectionWidget: FC = () => {\n  const { currencyTokenInfo } = useAppSelector((state) => state.metadata);\n  const { isInitialized } = useAppSelector((state) => state.indexer);\n  const { chainId } = useAppSelector((state) => state.config);\n\n  const provider = useDefaultProvider(chainId);\n\n  if (currencyTokenInfo && isInitialized && provider) {\n    return (\n      <ConnectedCollectionWidget\n        currencyTokenInfo={currencyTokenInfo}\n        provider={provider}\n      />\n    );\n  }\n\n  return <DisconnectedCollectionWidget />;\n};\n\nexport default CollectionWidget;\n","import React, { FC } from 'react';\n\nimport Helmet from '../../compositions/Helmet/Helmet';\nimport Page from '../../compositions/Page/Page';\nimport CollectionWidget from '../../widgets/CollectionWidget/CollectionWidget';\n\nimport './CollectionPage.scss';\n\nconst CollectionPage: FC = () => (\n  <Page\n    className=\"collection-page\"\n    contentClassName=\"collection-page__content\"\n  >\n    <Helmet title=\"All listings\" />\n    <CollectionWidget />\n  </Page>\n);\n\nexport default CollectionPage;\n","import { FC, ReactElement } from 'react';\n\nimport { chainNames } from '@airswap/constants';\n\nimport LoadingSpinner from '../../components/LoadingSpinner/LoadingSpinner';\nimport { useAppSelector } from '../../redux/hooks';\n\nimport './DebugWidget.scss';\n\ninterface DebugWidgetProps {\n  className?: string;\n}\n\nconst DebugWidget: FC<DebugWidgetProps> = ({ className = '' }): ReactElement => {\n  const {\n    isLoadingCollectionTokenKind,\n    isLoadingCurrencyTokenKind,\n    chainId,\n    collectionToken,\n    collectionTokenKind,\n    currencyToken,\n    currencyTokenKind,\n  } = useAppSelector(state => state.config);\n\n  const isLoading = isLoadingCollectionTokenKind || isLoadingCurrencyTokenKind;\n\n  if (isLoading) {\n    return (\n      <div className={`debug-widget ${className}`}>\n        <h1 className=\"debug-widget__title\">Debug</h1>\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  return (\n    <div className={`debug-widget ${className}`}>\n      <h1 className=\"debug-widget__title\">Debug</h1>\n      <p className=\"debug-widget__intro\">Your .env was not setup properly:</p>\n      <ul>\n        {!collectionToken && <li>REACT_APP_COLLECTION_TOKEN not set</li>}\n        {(collectionToken && !collectionTokenKind) && <li>{`REACT_APP_COLLECTION_TOKEN ${collectionToken} on ${chainNames[chainId]} is not a valid ERC721 or ERC1155 token`}</li>}\n        {!currencyToken && <li>REACT_APP_CURRENCY_TOKEN not set</li>}\n        {(currencyToken && !currencyTokenKind) && <li>{`REACT_APP_CURRENCY_TOKEN ${currencyToken} on ${chainNames[chainId]} is not a valid ERC20 token`}</li>}\n      </ul>\n    </div>\n  );\n};\n\nexport default DebugWidget;\n","import React, { FC } from 'react';\n\nimport Helmet from '../../compositions/Helmet/Helmet';\nimport DebugWidget from '../../widgets/DebugWidget/DebugWidget';\n\nconst DebugPage: FC = () => (\n  <div className=\"debug-page\">\n    <Helmet title=\"Debugger\" />\n    <DebugWidget />\n  </div>\n);\n\nexport default DebugPage;\n","import { BaseProvider } from '@ethersproject/providers';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\nimport { ExtendedFullOrder } from '../../../entities/FullOrder/FullOrder';\nimport { OrderFilter } from '../../../entities/OrderFilter/OrderFilter';\nimport { getOrdersFromIndexers } from '../../../helpers/indexers';\nimport { FullOrderState } from '../../../types/FullOrderState';\nimport { AppThunkApiConfig } from '../../store';\nimport { addGetOrderFailedToast } from '../toasts/toastsActions';\n\ninterface GetUserOrderParams extends OrderFilter {\n  provider: BaseProvider;\n}\n\nexport const getActiveUserOrders = createAsyncThunk<\nExtendedFullOrder[],\nGetUserOrderParams,\nAppThunkApiConfig\n>('listNft/getActiveUserOrders', async ({ provider, ...filter }, { dispatch, getState }) => {\n  const { indexer } = getState();\n\n  try {\n    const orders = await getOrdersFromIndexers({\n      ...filter,\n      limit: 9999,\n      offset: 0,\n    }, indexer.urls, provider);\n\n    return orders.filter(order => order.state === FullOrderState.open);\n  } catch {\n    dispatch(addGetOrderFailedToast());\n\n    throw new Error('Failed to get orders');\n  }\n});\n","export enum ExpiryTimeUnit {\n  minutes = 'minutes',\n  hours = 'hours',\n  days = 'days',\n  weeks = 'weeks',\n}\n","import { ExpiryTimeUnit } from '../types/ExpiryTimeUnit';\n\nconst msPerMinute = 60000;\n\nexport const expiryAmounts: Record<ExpiryTimeUnit, number> = {\n  [ExpiryTimeUnit.minutes]: msPerMinute,\n  [ExpiryTimeUnit.hours]: 60 * msPerMinute,\n  [ExpiryTimeUnit.days]: 24 * 60 * msPerMinute,\n  [ExpiryTimeUnit.weeks]: 7 * 24 * 60 * msPerMinute,\n};\n","import { Order } from '@airswap/types';\n\nexport enum SubmittedTransactionType {\n  erc20Approval = 'erc20-approval',\n  nftApproval = 'nft-approval',\n  order = 'order',\n  cancelOrder = 'cancel-order',\n}\n\nexport enum SubmittedTransactionStatus {\n  processing = 'processing',\n  succeeded = 'succeeded',\n  failed = 'failed',\n}\n\nexport interface Transaction {\n  type: SubmittedTransactionType;\n  hash: string;\n  status: SubmittedTransactionStatus;\n  timestamp: number;\n}\n\nexport interface Erc20ApprovalTransaction extends Transaction {\n  type: SubmittedTransactionType.erc20Approval,\n}\n\nexport interface NftApprovalTransaction extends Transaction {\n  type: SubmittedTransactionType.nftApproval,\n  tokenId: string;\n}\n\nexport interface OrderTransaction extends Transaction {\n  type: SubmittedTransactionType.order,\n  order: Order;\n}\n\nexport interface CancelOrderTransaction extends Transaction {\n  type: SubmittedTransactionType.cancelOrder,\n  order: Order;\n}\n\nexport type SubmittedTransaction =\n  Erc20ApprovalTransaction\n  | NftApprovalTransaction\n  | OrderTransaction\n  | CancelOrderTransaction;\n","import { BigNumber } from 'bignumber.js';\n\n// This helper function is used to round the number string to the nearest possible decimal allowed.\n// To prevent the NUMERIC_FAULT error from bignumber.js when creating orders or approving spend amounts.\n\nexport const toMaxAllowedDecimalsNumberString = (value: string, decimals = 18): string => {\n  const firstCharacter = value[0];\n  const lastCharacter = value[value.length - 1];\n  const firstCharacterIsNonZero = !(firstCharacter === '0' || firstCharacter === '.');\n  const firstCharacterIsPeriod = firstCharacter === '.';\n\n  if (firstCharacterIsNonZero) {\n    return value;\n  }\n\n  if (\n    value === ''\n    || value === '.'\n    || lastCharacter === '.'\n    || lastCharacter === '0'\n    || (firstCharacter === '.' && (value.length - 1) <= decimals)\n    || (firstCharacter === '0' && (value.length) <= decimals)\n  ) {\n    return value;\n  }\n\n  const bigNumber = new BigNumber(value).multipliedBy(10 ** decimals);\n\n  const [numberStringWithoutDecimals] = bigNumber.toString().split('.');\n\n  const number = new BigNumber(numberStringWithoutDecimals)\n    .dividedBy(10 ** decimals)\n    .toString();\n\n  if (new BigNumber(number).toNumber() === 0) {\n    const minimalAllowedValue = new BigNumber(1)\n      .dividedBy(10 ** decimals)\n      .toString();\n\n    return firstCharacterIsPeriod ? minimalAllowedValue.substring(1) : minimalAllowedValue;\n  }\n\n  return firstCharacterIsPeriod ? number.substring(1) : number;\n};\n","import {\n  CancelOrderTransaction,\n  Erc20ApprovalTransaction,\n  NftApprovalTransaction,\n  OrderTransaction,\n  SubmittedTransaction,\n} from './SubmittedTransaction';\n\nexport const isNftApprovalTransaction = (transaction: SubmittedTransaction): transaction is NftApprovalTransaction => transaction.type === 'nft-approval';\nexport const isErc20ApprovalTransaction = (transaction: SubmittedTransaction): transaction is Erc20ApprovalTransaction => transaction.type === 'erc20-approval';\nexport const isOrderTransaction = (transaction: SubmittedTransaction): transaction is OrderTransaction => transaction.type === 'order';\nexport const isCancelOrderTransaction = (transaction: SubmittedTransaction): transaction is CancelOrderTransaction => transaction.type === 'cancel-order';\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nimport {\n  CancelOrderTransaction,\n  Erc20ApprovalTransaction,\n  NftApprovalTransaction,\n  OrderTransaction,\n  SubmittedTransaction,\n} from '../../../entities/SubmittedTransaction/SubmittedTransaction';\nimport {\n  isCancelOrderTransaction,\n  isErc20ApprovalTransaction,\n  isNftApprovalTransaction,\n  isOrderTransaction,\n} from '../../../entities/SubmittedTransaction/SubmittedTransactionHelpers';\nimport { RootState } from '../../store';\n\ninterface TransactionsState {\n  isLoading: boolean;\n  transactions: SubmittedTransaction[];\n}\n\nconst initialState: TransactionsState = {\n  isLoading: false,\n  transactions: [],\n};\n\nconst transactionsSlice = createSlice({\n  name: 'transactions',\n  initialState,\n  reducers: {\n    setIsLoading: (state, action: PayloadAction<boolean>) => ({\n      ...state,\n      isLoading: action.payload,\n    }),\n    setTransactions: (state, action: PayloadAction<SubmittedTransaction[]>) => ({\n      ...state,\n      transactions: action.payload,\n    }),\n  },\n});\n\nexport const {\n  setIsLoading,\n  setTransactions,\n} = transactionsSlice.actions;\n\nexport const selectErc20ApprovalTransactions = (state: RootState): Erc20ApprovalTransaction[] => state.transactions.transactions\n  .filter(isErc20ApprovalTransaction);\n\nexport const selectNftApprovalTransactions = (state: RootState): NftApprovalTransaction[] => state.transactions.transactions\n  .filter(isNftApprovalTransaction);\n\nexport const selectCancelOrderTransactions = (state: RootState): CancelOrderTransaction[] => state.transactions.transactions\n  .filter(isCancelOrderTransaction);\n\nexport const selectOrderTransactions = (state: RootState): OrderTransaction[] => state.transactions.transactions\n  .filter(isOrderTransaction);\n\nexport default transactionsSlice.reducer;\n","import { useMemo } from 'react';\n\nimport { NftApprovalTransaction } from '../entities/SubmittedTransaction/SubmittedTransaction';\nimport { useAppSelector } from '../redux/hooks';\nimport { selectNftApprovalTransactions } from '../redux/stores/transactions/transactionsSlice';\n\nconst useApproveNftTransaction = (hash?: string): NftApprovalTransaction | undefined => {\n  const transactions = useAppSelector(selectNftApprovalTransactions);\n\n  return useMemo(() => {\n    if (!transactions.length || !hash) {\n      return undefined;\n    }\n\n    return transactions.find(transaction => transaction.hash === hash);\n  }, [transactions, hash]);\n};\n\nexport default useApproveNftTransaction;\n","import { useEffect, useState } from 'react';\n\nimport { CollectionTokenInfo } from '@airswap/types';\n\nimport { getCollectionToken, isCollectionTokenInfo } from '../entities/CollectionToken/CollectionTokenHelpers';\nimport { AppError, isAppError } from '../errors/appError';\nimport { useAppDispatch, useAppSelector } from '../redux/hooks';\nimport { addCollectionTokenInfo } from '../redux/stores/metadata/metadataActions';\nimport useWeb3ReactLibrary from './useWeb3ReactLibrary';\n\nconst useCollectionToken = (address: string, tokenId: string): [CollectionTokenInfo | undefined, boolean, AppError | undefined] => {\n  const dispatch = useAppDispatch();\n  const { library } = useWeb3ReactLibrary();\n  const { collectionTokens } = useAppSelector(state => state.metadata);\n\n  const [isContractCalled, setIsContractCalled] = useState(false);\n  const [isContractLoading, setIsContractLoading] = useState(true);\n  const [collectionToken, setCollectionToken] = useState<CollectionTokenInfo>();\n  const [error, setError] = useState<AppError>();\n  const collectionTokenFromStore = collectionTokens[tokenId];\n\n  useEffect((): void => {\n    setIsContractCalled(false);\n    setCollectionToken(undefined);\n  }, [tokenId]);\n\n  useEffect((): void => {\n    if (!library || isContractCalled || collectionTokenFromStore) {\n      return;\n    }\n\n    const callGetCollectionToken = async () => {\n      const result = await getCollectionToken(library, address, tokenId);\n\n      if (isCollectionTokenInfo(result)) {\n        dispatch(addCollectionTokenInfo([result]));\n        setCollectionToken(result);\n      }\n\n      if (isAppError(result)) {\n        setError(result);\n      }\n\n      setIsContractLoading(false);\n    };\n\n    setError(undefined);\n    setIsContractCalled(true);\n    setIsContractLoading(true);\n    callGetCollectionToken();\n  }, [\n    library,\n    address,\n    tokenId,\n    isContractCalled,\n  ]);\n\n  if (collectionTokenFromStore) {\n    return [collectionTokenFromStore, false, undefined];\n  }\n\n  return [collectionToken, isContractLoading, error];\n};\n\nexport default useCollectionToken;\n","export enum IndexedOrderResult {\n  success = 'success',\n  failed = 'failed',\n}\n","import { useEffect, useState } from 'react';\n\nimport { AppError, AppErrorType } from '../errors/appError';\nimport { useAppSelector } from '../redux/hooks';\nimport { IndexedOrderResult } from '../types/IndexedOrderResult';\n\nconst useIndexedOrderResult = (orderNonce?: string): [IndexedOrderResult | undefined, AppError | undefined] => {\n  const { lastSentOrder, lastFailedOrder } = useAppSelector(state => state.indexer);\n  const [result, setResult] = useState<IndexedOrderResult | undefined>(undefined);\n  const indexerError: AppError | undefined = result === IndexedOrderResult.failed ? { type: AppErrorType.orderIndexFailed } : undefined;\n\n  useEffect(() => {\n    if (!orderNonce) {\n      setResult(undefined);\n\n      return;\n    }\n\n    if (lastSentOrder?.nonce === orderNonce) {\n      setResult(IndexedOrderResult.success);\n    }\n\n    if (lastFailedOrder?.nonce === orderNonce) {\n      setResult(IndexedOrderResult.failed);\n    }\n  }, [orderNonce, lastSentOrder, lastFailedOrder]);\n\n  return [result, indexerError];\n};\n\nexport default useIndexedOrderResult;\n","import { useMemo } from 'react';\n\nconst useInsufficientAmount = (\n  amount: string,\n): boolean => useMemo(() => !amount.length\n      || parseFloat(amount) === 0\n      || amount === '.', [amount]);\n\nexport default useInsufficientAmount;\n","import { AppError, AppErrorType, transformToAppError } from './appError';\n\n// These errors come from the airswap swap contracts.\nexport type SwapError =\n  | 'OrderExpired'\n  | 'SignatureInvalid'\n  | 'SignerAllowanceLow'\n  | 'SignerBalanceLow'\n  | 'SenderAllowanceLow'\n  | 'SenderBalanceLow'\n  | 'NonceAlreadyUsed'\n  | 'Unauthorized'\n  | 'UNPREDICTABLE_GAS_LIMIT';\n\nexport const swapErrors: SwapError[] = [\n  'OrderExpired',\n  'SignatureInvalid',\n  'SignerAllowanceLow',\n  'SignerBalanceLow',\n  'SenderAllowanceLow',\n  'SenderBalanceLow',\n  'NonceAlreadyUsed',\n  'Unauthorized',\n  'UNPREDICTABLE_GAS_LIMIT',\n];\n\nexport const isSwapError = (error: any): error is SwapError => swapErrors.includes(error || error.code);\n\nexport const transformSwapErrorToAppError = (error: SwapError): AppError => {\n  if (error === 'OrderExpired') {\n    return transformToAppError(AppErrorType.expiryPassed);\n  }\n\n  if (error === 'NonceAlreadyUsed') {\n    return transformToAppError(AppErrorType.nonceAlreadyUsed);\n  }\n\n  if (error === 'SenderAllowanceLow') {\n    return transformToAppError(AppErrorType.senderAllowanceLow);\n  }\n\n  if (error === 'SenderBalanceLow') {\n    return transformToAppError(AppErrorType.senderBalanceLow);\n  }\n\n  if (error === 'SignerAllowanceLow') {\n    return transformToAppError(AppErrorType.signerAllowanceLow);\n  }\n\n  if (error === 'SignerBalanceLow') {\n    return transformToAppError(AppErrorType.signerBalanceLow);\n  }\n\n  if (error === 'SignatureInvalid') {\n    return transformToAppError(AppErrorType.signatureInvalid);\n  }\n\n  if (error === 'Unauthorized') {\n    return transformToAppError(AppErrorType.unauthorized);\n  }\n\n  if (error === 'UNPREDICTABLE_GAS_LIMIT') {\n    return transformToAppError(AppErrorType.unpredictableGasLimit);\n  }\n\n  return transformToAppError(AppErrorType.unknownError);\n};\n","import { errorCodes } from 'eth-rpc-errors';\n\nimport { AppError, AppErrorType, transformToAppError } from './appError';\n\nexport interface RpcError {\n  code: number;\n  message?: any;\n  data?: any;\n  stack: string;\n}\n\nexport const isRpcError = (error: any): error is RpcError => (\n  typeof error === 'object'\n    && error !== null\n    && 'code' in error\n    && Object.values({ ...errorCodes.rpc, ...errorCodes.provider }).includes(\n      error.code,\n    )\n);\n\nexport const transformRpcErrorToAppError = (error: RpcError): AppError => {\n  if (error.code === 4001) {\n    return transformToAppError(AppErrorType.rejectedByUser, error);\n  }\n\n  if (error.code === 4100) {\n    return transformToAppError(AppErrorType.unauthorized, error);\n  }\n\n  if (error.code === 4200) {\n    return transformToAppError(AppErrorType.unsupportedMethod, error);\n  }\n\n  if (error.code === 4900) {\n    return transformToAppError(AppErrorType.disconnected, error);\n  }\n\n  if (error.code === 4901) {\n    return transformToAppError(AppErrorType.chainDisconnected, error);\n  }\n\n  if (error.code === -32000) {\n    return transformToAppError(AppErrorType.invalidInput, error);\n  }\n\n  if (error.code === -32600) {\n    return transformToAppError(AppErrorType.invalidRequest, error);\n  }\n\n  if (error.code === -32603) {\n    return transformToAppError(AppErrorType.approveCallerIsNotOwner, error);\n  }\n\n  // Add other errors from eth-rpc-errors if necessary.\n\n  return transformToAppError(AppErrorType.unknownError, error);\n};\n","import { AppError, AppErrorType, transformToAppError } from './appError';\nimport {\n  isEthersProjectError,\n  transformEthersProjectErrorToAppError,\n} from './ethersProjectError';\nimport {\n  isNumericFaultErrorError,\n  transformNumericFaultErrorErrorToAppError,\n} from './numericFaultError';\nimport { isRpcError, transformRpcErrorToAppError } from './rpcError';\nimport {\n  isRpcErrorWithSwapErrorCode,\n  transformRpcErrorWithSwapErrorCodeToAppError,\n} from './rpcErrorWithSwapErrorCode';\nimport {\n  isRpcSignRejectedError,\n  transformRpcSignRejectedErrorToAppError,\n} from './rpcSignRejectedError';\nimport { isSwapError, transformSwapErrorToAppError } from './swapError';\n\nconst transformUnknownErrorToAppError = (error: any): AppError => {\n  if (isRpcError(error)) {\n    return transformRpcErrorToAppError(error);\n  }\n\n  // Sometimes the RPC error is wrapped inside another error.\n  if (isRpcError(error?.error)) {\n    return transformRpcErrorToAppError(error.error);\n  }\n\n  if (isEthersProjectError(error)) {\n    return transformEthersProjectErrorToAppError(error);\n  }\n\n  if (isNumericFaultErrorError(error)) {\n    return transformNumericFaultErrorErrorToAppError(error);\n  }\n\n  if (isRpcSignRejectedError(error)) {\n    return transformRpcSignRejectedErrorToAppError(error);\n  }\n\n  if (isRpcErrorWithSwapErrorCode(error)) {\n    return transformRpcErrorWithSwapErrorCodeToAppError(error);\n  }\n\n  if (isSwapError(error)) {\n    return transformSwapErrorToAppError(error);\n  }\n\n  return transformToAppError(AppErrorType.unknownError, error);\n};\n\nexport default transformUnknownErrorToAppError;\n","import { AppError, AppErrorType, transformToAppError } from './appError';\n\n// @ethersproject's logger throws errors like this:\n\n// throwArgumentError(message: string, name: string, value: any): never {\n//   return this.throwError(message, Logger.errors.INVALID_ARGUMENT, {\n//     argument: name,\n//     value: value\n//   });\n// }\n\nexport interface EthersProjectError {\n  argument: string;\n  value: string;\n  code: 'INVALID_ARGUMENT';\n}\n\nexport const isEthersProjectError = (\n  error: any,\n): error is EthersProjectError => (\n  typeof error === 'object'\n    && error !== null\n    && 'argument' in error\n    && 'value' in error\n    && 'code' in error\n);\n\nexport const transformEthersProjectErrorToAppError = (\n  error: EthersProjectError,\n): AppError => {\n  if (error.argument === 'address') {\n    return transformToAppError(AppErrorType.invalidAddress, error, error.value);\n  }\n\n  if (error.argument === 'value') {\n    return transformToAppError(AppErrorType.invalidValue, error, error.value);\n  }\n\n  return transformToAppError(AppErrorType.unknownError, error);\n};\n","import { AppError, AppErrorType, transformToAppError } from './appError';\n\n// https://docs.ethers.io/v5/troubleshooting/errors/#help-NUMERIC_FAULT\n\n// Illegal operation with numeric values, like parsing a value with more decimals than the type:\n// utils.parseUnits(\"1.34\", 1);\n// [Error: fractional component exceeds decimals [ See: https://links.ethers.org/v5-errors-NUMERIC_FAULT ]] {\n//   code: 'NUMERIC_FAULT',\n//   fault: 'underflow',\n//   operation: 'parseFixed',\n//   reason: 'fractional component exceeds decimals'\n// }\n\nexport interface NumericFaultError {\n  code: 'NUMERIC_FAULT';\n  fault: string;\n  operation: string;\n  reason: string;\n  value?: number;\n}\n\nexport const isNumericFaultErrorError = (\n  error: any,\n): error is NumericFaultError => (\n  typeof error === 'object'\n    && error !== null\n    && 'code' in error\n    && 'fault' in error\n    && 'operation' in error\n    && 'reason' in error\n    && error.code === 'NUMERIC_FAULT'\n);\n\nexport const transformNumericFaultErrorErrorToAppError = (\n  error: NumericFaultError,\n): AppError => {\n  if (error.fault === 'underflow') {\n    return transformToAppError(\n      AppErrorType.arithmeticUnderflow,\n      error,\n      error.reason,\n    );\n  }\n\n  return transformToAppError(AppErrorType.unknownError, error);\n};\n","import { AppError, AppErrorType, transformToAppError } from './appError';\n\n// Another error format coming from ethersproject (yay), gets thrown when error rejects a transaction\n\nexport interface RpcSignRejectedError {\n  reason: string;\n  code: 'ACTION_REJECTED';\n  action: any;\n  from: string;\n  messageData: any;\n}\n\nexport const isRpcSignRejectedError = (\n  error: any,\n): error is RpcSignRejectedError => (\n  typeof error === 'object'\n    && error !== null\n    && 'code' in error\n    && error.code === 'ACTION_REJECTED'\n    && 'reason' in error\n);\n\nexport const transformRpcSignRejectedErrorToAppError = (\n  error: RpcSignRejectedError,\n): AppError =>\n  // For now we have only one error for this format. Might add more later.\n  // eslint-disable-next-line implicit-arrow-linebreak\n  transformToAppError(AppErrorType.rejectedByUser, error);\n","import { AppError } from './appError';\nimport {\n  SwapError,\n  swapErrors,\n  transformSwapErrorToAppError,\n} from './swapError';\n\n// An error with SwapError code where the real error code is in \"reason\", not \"code\". For example:\n// {\n//   reason: 'execution reverted: UNAUTHORIZED',\n//   code: 'UNPREDICTABLE_GAS_LIMIT', // It basically always says UNPREDICTABLE_GAS_LIMIT\n//   method: 'estimateGas',\n// }\n\ntype RpcErrorWithSwapErrorCode = {\n  code: SwapError;\n  method: string;\n  reason: string;\n  transaction: any;\n  error: {\n    code: number; // Found in \"eth-rpc-errors\";\n    data: any;\n    message: string;\n  };\n};\n\nexport const isRpcErrorWithSwapErrorCode = (\n  error: any,\n): error is RpcErrorWithSwapErrorCode => (\n  typeof error === 'object'\n    && 'code' in error\n    && 'method' in error\n    && 'reason' in error\n    && swapErrors.includes(error.code)\n);\n\nexport const transformRpcErrorWithSwapErrorCodeToAppError = (\n  error: RpcErrorWithSwapErrorCode,\n): AppError => {\n  const reasonError = swapErrors.find(\n    (swapError) => error.reason.indexOf(swapError) !== -1,\n  );\n  return transformSwapErrorToAppError(reasonError || error.code);\n};\n","import { TokenKinds } from '@airswap/constants';\nimport { Swap } from '@airswap/libraries';\nimport { FullOrder, TokenInfo } from '@airswap/types';\nimport { checkResultToErrors } from '@airswap/utils';\nimport erc20Contract from '@openzeppelin/contracts/build/contracts/ERC20.json';\nimport erc721Contract from '@openzeppelin/contracts/build/contracts/ERC721.json';\nimport erc1155Contract from '@openzeppelin/contracts/build/contracts/ERC1155.json';\nimport {\n  constants,\n  ContractTransaction,\n  ethers,\n  Transaction,\n} from 'ethers';\n\nimport { AppError } from '../../../errors/appError';\nimport { SwapError, transformSwapErrorToAppError } from '../../../errors/swapError';\nimport transformUnknownErrorToAppError from '../../../errors/transformUnknownErrorToAppError';\nimport { NftTokenKind } from '../../../types/NftTokenKind';\n\nconst erc20Interface = new ethers.utils.Interface(erc20Contract.abi);\nconst erc721Interface = new ethers.utils.Interface(erc721Contract.abi);\nconst erc1155Interface = new ethers.utils.Interface(erc1155Contract.abi);\n\nexport async function approveErc20Token(\n  tokenInfo: TokenInfo,\n  provider: ethers.providers.Web3Provider,\n  amount?: number,\n): Promise<Transaction> {\n  const contract = new ethers.Contract(\n    tokenInfo.address,\n    erc20Interface,\n    provider.getSigner(),\n  );\n\n  const approveAmount = amount || constants.MaxUint256.toNumber();\n\n  return contract.approve(\n    Swap.getAddress(provider.network.chainId),\n    approveAmount,\n  );\n}\n\nexport async function approveNftToken(\n  baseToken: string,\n  tokenId: string,\n  provider: ethers.providers.Web3Provider,\n  tokenKind: NftTokenKind,\n): Promise<Transaction> {\n  const contractAddress = Swap.getAddress(provider.network.chainId);\n  const contract = new ethers.Contract(\n    baseToken,\n    tokenKind === TokenKinds.ERC1155 ? erc1155Interface : erc721Interface,\n    provider.getSigner(),\n  );\n\n  if (tokenKind === TokenKinds.ERC1155) {\n    return contract.setApprovalForAll(\n      contractAddress,\n      true,\n    );\n  }\n\n  return contract.approve(\n    contractAddress,\n    tokenId,\n  );\n}\n\nexport async function takeOrder(\n  order: FullOrder,\n  senderWallet: string,\n  provider: ethers.providers.Web3Provider,\n): Promise<ContractTransaction | AppError> {\n  try {\n    const { chainId } = provider.network;\n    const result = await Swap.getContract(provider.getSigner(), chainId).swap(\n      senderWallet,\n      '0',\n      order,\n    );\n\n    return result;\n  } catch (error: any) {\n    console.error(error);\n    return transformUnknownErrorToAppError(error);\n  }\n}\n\nexport async function cancelOrder(\n  orderNonce: string,\n  provider: ethers.providers.Web3Provider,\n): Promise<ContractTransaction | AppError> {\n  try {\n    const { chainId } = provider.network;\n    const result = await Swap.getContract(provider.getSigner(), chainId).cancel(\n      [orderNonce],\n    );\n\n    return result;\n  } catch (error: any) {\n    console.error(error);\n    return transformUnknownErrorToAppError(error);\n  }\n}\n\nexport async function checkOrder(\n  order: FullOrder,\n  senderWallet: string,\n  provider: ethers.providers.Web3Provider,\n): Promise<AppError[]> {\n  const { chainId } = provider.network;\n\n  const [count, checkErrors] = await Swap.getContract(provider.getSigner(), chainId).check(senderWallet, order);\n  const errors = (count && checkErrors) ? checkResultToErrors(checkErrors, count) as SwapError[] : [];\n\n  if (errors.length) {\n    console.error(errors);\n  }\n\n  return errors.map((error) => transformSwapErrorToAppError(error));\n}\n\nconst getContractApproved = async (\n  contract: ethers.Contract,\n  contractAddress: string,\n  tokenKind: NftTokenKind,\n  tokenId: string,\n): Promise<boolean> => {\n  if (tokenKind === TokenKinds.ERC1155) {\n    const response: [boolean] = await contract.functions.isApprovedForAll(\n      contract.signer.getAddress(),\n      contractAddress,\n    );\n\n    return response[0];\n  }\n\n  const response: string = await contract.getApproved(tokenId);\n\n  return response === contractAddress;\n};\n\nexport async function getNftTokenApproved(\n  baseToken: string,\n  tokenId: string,\n  provider: ethers.providers.Web3Provider,\n  tokenKind: NftTokenKind,\n  chainId: number,\n): Promise<boolean> {\n  try {\n    const contractAddress = Swap.getAddress(chainId);\n\n    if (!contractAddress) {\n      return false;\n    }\n\n    const contract = new ethers.Contract(\n      baseToken,\n      tokenKind === TokenKinds.ERC1155 ? erc1155Interface : erc721Interface,\n      provider.getSigner(),\n    );\n\n    return getContractApproved(\n      contract,\n      contractAddress,\n      tokenKind,\n      tokenId,\n    );\n  } catch (error: any) {\n    console.error(error);\n\n    return false;\n  }\n}\n","import { useEffect, useState } from 'react';\n\nimport { TokenKinds } from '@airswap/constants';\nimport { CollectionTokenInfo } from '@airswap/types';\n\nimport { isCollectionTokenInfo } from '../entities/CollectionToken/CollectionTokenHelpers';\nimport { getNftTokenApproved } from '../redux/stores/orders/ordersApi';\nimport useWeb3ReactLibrary from './useWeb3ReactLibrary';\n\nconst useNftTokenApproval = (\n  tokenInfo: CollectionTokenInfo | undefined,\n  tokenId: string,\n): boolean => {\n  const { library, chainId } = useWeb3ReactLibrary();\n  const [isApproved, setIsApproved] = useState(false);\n\n  useEffect((): () => void => {\n    let timer: NodeJS.Timeout;\n\n    if (\n      !tokenInfo\n      || !library\n      || !chainId\n      || !isCollectionTokenInfo(tokenInfo)\n    ) {\n      return () => clearTimeout(timer);\n    }\n\n    const tokenKind = tokenInfo.kind as TokenKinds;\n    if (tokenKind !== TokenKinds.ERC721 && tokenKind !== TokenKinds.ERC1155) {\n      console.error('[useNftTokenApproval]: Token is not ERC721 or ERC115');\n\n      return () => clearTimeout(timer);\n    }\n\n    const callGetNftTokenApproved = async () => {\n      const approved = await getNftTokenApproved(\n        tokenInfo.address,\n        tokenId,\n        library,\n        tokenKind,\n        chainId,\n      );\n\n      setIsApproved(approved);\n    };\n\n    timer = setInterval(() => callGetNftTokenApproved(), 1000);\n\n    return () => clearInterval(timer);\n  }, [\n    tokenInfo,\n    tokenId,\n    chainId,\n    library,\n  ]);\n\n  return isApproved;\n};\n\nexport default useNftTokenApproval;\n","import { toAtomicString } from '@airswap/utils';\nimport { BigNumber } from 'bignumber.js';\n\n// This helper function is used to round the atomic string to the nearest possible decimal allowed.\n// To prevent the NUMERIC_FAULT error from bignumber.js\n\nconst toRoundedAtomicString = (value: string, decimals = 18): string => {\n  const roundedNumber = new BigNumber(value)\n    .multipliedBy(10 ** decimals)\n    .decimalPlaces(0, BigNumber.ROUND_UP)\n    .dividedBy(10 ** decimals)\n    .toString();\n\n  return toAtomicString(roundedNumber, decimals);\n};\n\nexport default toRoundedAtomicString;\n","import { Signature, UnsignedOrder } from '@airswap/types';\nimport { createOrderSignature as airswapCreateOrderSignature } from '@airswap/utils';\nimport { JsonRpcSigner } from '@ethersproject/providers/src.ts/json-rpc-provider';\n\nimport { AppError } from '../errors/appError';\nimport transformUnknownErrorToAppError from '../errors/transformUnknownErrorToAppError';\n\nexport const createOrderSignature = (\n  unsignedOrder: UnsignedOrder,\n  signer: JsonRpcSigner,\n  swapContract: string,\n  chainId: number,\n  // eslint-disable-next-line no-async-promise-executor\n): Promise<Signature | AppError> => new Promise<Signature | AppError>(async (resolve) => {\n  try {\n    const signature = await airswapCreateOrderSignature(\n      unsignedOrder,\n      // @ts-ignore\n      // Airswap library asking for incorrect VoidSigner. This will be fixed later.\n      signer,\n      swapContract,\n      chainId,\n    );\n    resolve(signature);\n  } catch (error: unknown) {\n    console.error(error);\n    resolve(transformUnknownErrorToAppError(error));\n  }\n});\n","import { FullOrder } from '@airswap/types';\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nimport { ExtendedFullOrder } from '../../../entities/FullOrder/FullOrder';\nimport { AppError } from '../../../errors/appError';\nimport { getActiveUserOrders } from './listNftApi';\n\nexport interface ListNftState {\n  isLoadingUserOrders: boolean;\n  lastUserOrder?: FullOrder;\n  userOrders: ExtendedFullOrder[];\n  error?: AppError;\n}\n\nconst lastUserOrderLocalStorageKey = 'airswap-marketplace/lastUserOrder';\nconst localStorageLastUserOrder = localStorage.getItem(lastUserOrderLocalStorageKey);\n\nconst initialState: ListNftState = {\n  ...(localStorageLastUserOrder && { lastUserOrder: JSON.parse(localStorageLastUserOrder) }),\n  isLoadingUserOrders: false,\n  userOrders: [],\n};\n\nexport const listNftSlice = createSlice({\n  name: 'make-otc',\n  initialState,\n  reducers: {\n    setUserOrder: (\n      state,\n      action: PayloadAction<FullOrder>,\n    ): ListNftState => {\n      localStorage.setItem(lastUserOrderLocalStorageKey, JSON.stringify(action.payload));\n\n      return {\n        ...state,\n        lastUserOrder: action.payload,\n      };\n    },\n    clearLastUserOrder: (state): ListNftState => ({\n      ...state,\n      lastUserOrder: undefined,\n    }),\n    setError: (\n      state,\n      action: PayloadAction<AppError | undefined>,\n    ): ListNftState => ({\n      ...state,\n      error: action.payload,\n    }),\n    reset: (): ListNftState => initialState,\n  },\n  extraReducers: (builder) => {\n    builder.addCase(getActiveUserOrders.pending, (state): ListNftState => ({\n      ...state,\n      isLoadingUserOrders: true,\n    }));\n    builder.addCase(getActiveUserOrders.rejected, (state): ListNftState => ({\n      ...state,\n      isLoadingUserOrders: false,\n    }));\n    builder.addCase(getActiveUserOrders.fulfilled, (state, action): ListNftState => ({\n      ...state,\n      isLoadingUserOrders: false,\n      userOrders: action.payload,\n    }));\n  },\n});\n\nexport const {\n  setUserOrder,\n  clearLastUserOrder,\n  setError,\n  reset,\n} = listNftSlice.actions;\n\nexport default listNftSlice.reducer;\n","import { TokenKinds } from '@airswap/constants';\nimport { Swap } from '@airswap/libraries';\nimport { CollectionTokenInfo, FullOrder, TokenInfo } from '@airswap/types';\nimport { createOrder } from '@airswap/utils';\nimport { Web3Provider } from '@ethersproject/providers';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\nimport { nativeCurrencyAddress } from '../../../constants/nativeCurrency';\nimport { AppErrorType, isAppError } from '../../../errors/appError';\nimport toRoundedAtomicString from '../../../helpers/airswap/getRoundedAtomicString';\nimport { createOrderSignature } from '../../../helpers/createOrderSignature';\nimport { NftTokenKind } from '../../../types/NftTokenKind';\nimport { setError, setUserOrder } from './listNftSlice';\n\ninterface CreateOrderParams {\n  expiry: string;\n  kind: NftTokenKind;\n  library: Web3Provider;\n  protocolFee: number;\n  signerTokenInfo: CollectionTokenInfo;\n  signerWallet: string;\n  senderAmount: string;\n  senderTokenInfo: TokenInfo;\n  tokenId: string;\n}\n\nexport const createNftOrder = createAsyncThunk<\nFullOrder,\nCreateOrderParams\n>(\n  'listNft/createOtcOrder',\n  async (params, { dispatch, rejectWithValue }) => {\n    dispatch(setError(undefined));\n\n    try {\n      const senderAmount = toRoundedAtomicString(\n        params.senderAmount,\n        params.senderTokenInfo.decimals,\n      );\n\n      const unsignedOrder = createOrder({\n        expiry: params.expiry,\n        nonce: Date.now(),\n        protocolFee: params.protocolFee,\n        signer: {\n          wallet: params.signerWallet,\n          token: params.signerTokenInfo.address,\n          kind: params.kind,\n          id: params.tokenId,\n          ...(params.kind === TokenKinds.ERC1155 && { amount: '1' }),\n        },\n        sender: {\n          wallet: nativeCurrencyAddress,\n          token: params.senderTokenInfo.address,\n          kind: TokenKinds.ERC20,\n          amount: senderAmount,\n        },\n      });\n\n      const { chainId } = params.signerTokenInfo;\n      const signature = await createOrderSignature(\n        unsignedOrder,\n        params.library.getSigner(),\n        Swap.getAddress(chainId) || '',\n        chainId,\n      );\n\n      if (isAppError(signature)) {\n        dispatch(setError({ type: signature.type }));\n\n        return rejectWithValue({ type: signature.type });\n      }\n\n      const fullOrder: FullOrder = {\n        ...unsignedOrder,\n        ...signature,\n        chainId,\n        swapContract: Swap.getAddress(chainId) || '',\n      };\n\n      dispatch(setUserOrder(fullOrder));\n      return fullOrder;\n    } catch (error) {\n      console.error(error);\n      dispatch(setError({ type: AppErrorType.unknownError }));\n\n      return rejectWithValue({ type: AppErrorType.unknownError });\n    }\n  },\n);\n","import { OrderERC20 } from '@airswap/types';\nimport {\n  createSlice,\n  PayloadAction,\n} from '@reduxjs/toolkit';\n\nimport { AppError } from '../../../errors/appError';\nimport { approve, take } from './ordersActions';\n\nexport interface OrdersState {\n  orders: OrderERC20[];\n  status: 'idle' | 'requesting' | 'approving' | 'taking' | 'failed' | 'reset';\n  reRequestTimerId: number | null;\n  error?: AppError;\n}\n\nconst initialState: OrdersState = {\n  orders: [],\n  status: 'idle',\n  reRequestTimerId: null,\n};\n\nexport const ordersSlice = createSlice({\n  name: 'orders',\n  initialState,\n  reducers: {\n    setError: (state, action: PayloadAction<AppError | undefined>) => ({\n      ...state,\n      error: action.payload,\n    }),\n    clear: () => initialState,\n    setReRequestTimerId: (state, action: PayloadAction<number>) => ({\n      ...state,\n      reRequestTimerId: action.payload,\n    }),\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(take.pending, (state) => ({\n        ...state,\n        status: 'taking',\n      }))\n      .addCase(take.fulfilled, (state) => {\n        if (state.reRequestTimerId) {\n          clearTimeout(state.reRequestTimerId);\n        }\n\n        return {\n          ...state,\n          status: 'idle',\n          reRequestTimerId: null,\n        };\n      })\n      .addCase(take.rejected, (state) => ({\n        ...state,\n        status: 'failed',\n      }))\n      .addCase(approve.pending, (state) => ({\n        ...state,\n        status: 'approving',\n      }))\n      .addCase(approve.fulfilled, (state) => ({\n        ...state,\n        status: 'idle',\n      }))\n      .addCase(approve.rejected, (state) => ({\n        ...state,\n        status: 'failed',\n      }));\n  },\n});\n\nexport const {\n  clear,\n  setError,\n} = ordersSlice.actions;\n\nexport default ordersSlice.reducer;\n","import { TokenKinds } from '@airswap/constants';\nimport { CollectionTokenInfo, FullOrder, TokenInfo } from '@airswap/types';\nimport { Web3Provider } from '@ethersproject/providers';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\nimport { Transaction } from 'ethers';\n\nimport { getFullOrderNonceUsed } from '../../../entities/FullOrder/FullOrderHelpers';\nimport {\n  AppError,\n  AppErrorType,\n  isAppError,\n  transformToAppError,\n} from '../../../errors/appError';\nimport transformUnknownErrorToAppError from '../../../errors/transformUnknownErrorToAppError';\nimport { AppDispatch, RootState } from '../../store';\nimport {\n  addCancelTransaction,\n  addERC20ApprovalTransaction,\n  addNftApprovalTransaction,\n  addOrderTransaction,\n} from '../transactions/transactionsActions';\nimport {\n  approveErc20Token,\n  approveNftToken,\n  cancelOrder,\n  checkOrder,\n  takeOrder,\n} from './ordersApi';\nimport { setError } from './ordersSlice';\n\ninterface ApproveParams {\n  amount?: number;\n  chainId: number;\n  library: Web3Provider;\n  tokenId?: string;\n  tokenInfo: TokenInfo | CollectionTokenInfo;\n}\n\ntype TransactionHash = Transaction['hash'];\n\nexport const approve = createAsyncThunk<\nTransactionHash | AppError,\nApproveParams,\n{\n  dispatch: AppDispatch;\n  state: RootState;\n}\n>('orders/approve', async (params, { dispatch, rejectWithValue }) => {\n  dispatch(setError(undefined));\n\n  try {\n    let tx: Transaction;\n    const {\n      amount,\n      library,\n      tokenId,\n      tokenInfo,\n    } = params;\n\n    const tokenKind = 'kind' in tokenInfo ? tokenInfo.kind : TokenKinds.ERC20;\n\n    if (tokenKind !== TokenKinds.ERC20 && !tokenId) {\n      console.error('[orders/approve]: Missing tokenId when submitting ERC721 or ERC1155 approval');\n\n      return rejectWithValue(transformToAppError(AppErrorType.unknownError));\n    }\n\n    if ((tokenKind === TokenKinds.ERC721 || tokenKind === TokenKinds.ERC1155) && tokenId) {\n      tx = await approveNftToken(\n        tokenInfo.address,\n        tokenId,\n        library,\n        tokenKind,\n      );\n    } else {\n      tx = await approveErc20Token(\n        tokenInfo as TokenInfo,\n        library,\n        amount,\n      );\n    }\n\n    if (tx.hash && tokenKind === TokenKinds.ERC20) {\n      dispatch(addERC20ApprovalTransaction(tx.hash));\n    } else if (tx.hash && tokenId) {\n      dispatch(addNftApprovalTransaction(tx.hash, tokenId));\n    }\n\n    return tx.hash;\n  } catch (e: any) {\n    console.error(e);\n    const error = transformUnknownErrorToAppError(e);\n    dispatch(setError(error));\n\n    return rejectWithValue(error);\n  }\n});\n\ninterface TakeParams {\n  senderWallet: string;\n  order: FullOrder;\n  library: Web3Provider;\n}\n\nexport const take = createAsyncThunk<\nvoid,\nTakeParams,\n{\n  dispatch: AppDispatch;\n  state: RootState;\n}\n>('orders/take', async (params, { dispatch }) => {\n  const { order, library, senderWallet } = params;\n\n  const checkErrors = await checkOrder(\n    order,\n    senderWallet,\n    library,\n  );\n\n  if (checkErrors.length) {\n    dispatch(setError(checkErrors[0]));\n\n    throw checkErrors[0];\n  }\n\n  const tx = await takeOrder(params.order, senderWallet, params.library);\n\n  if (isAppError(tx)) {\n    dispatch(setError(tx));\n\n    throw tx;\n  }\n\n  if (tx.hash) {\n    dispatch(addOrderTransaction(tx.hash, order));\n  }\n});\n\ninterface CancelParams {\n  order: FullOrder;\n  chainId: number;\n  library: Web3Provider;\n}\n\nexport const cancel = createAsyncThunk<\nTransactionHash | AppError,\nCancelParams,\n{\n  dispatch: AppDispatch;\n  state: RootState;\n}\n>('orders/cancel', async (params, { dispatch, rejectWithValue }) => {\n  const isNonceUsed = await getFullOrderNonceUsed(params.order, params.library);\n\n  if (isNonceUsed) {\n    return rejectWithValue(transformToAppError(AppErrorType.nonceAlreadyUsed));\n  }\n\n  const tx = await cancelOrder(params.order.nonce, params.library);\n\n  if (isAppError(tx)) {\n    return rejectWithValue(tx);\n  }\n\n  dispatch(addCancelTransaction(tx.hash, params.order));\n\n  return tx.hash;\n});\n\n","import { Order } from '@airswap/types';\n\nimport {\n  CancelOrderTransaction,\n  Erc20ApprovalTransaction,\n  NftApprovalTransaction,\n  OrderTransaction,\n  SubmittedTransaction,\n  SubmittedTransactionStatus,\n  SubmittedTransactionType,\n} from '../../../entities/SubmittedTransaction/SubmittedTransaction';\nimport { AppDispatch, RootState } from '../../store';\nimport { setTransactions } from './transactionsSlice';\n\nexport const updateTransaction = (updatedTransaction: SubmittedTransaction) => async (dispatch: AppDispatch, getState: () => RootState): Promise<void> => {\n  const { transactions } = getState().transactions;\n  const transactionIndex = transactions.findIndex(transaction => transaction.hash === updatedTransaction.hash);\n\n  if (transactionIndex === -1) {\n    return;\n  }\n\n  const updatedTransactions = [...transactions];\n  updatedTransactions.splice(transactionIndex, 1, updatedTransaction);\n\n  dispatch(setTransactions(updatedTransactions));\n};\n\nexport const addERC20ApprovalTransaction = (hash: string) => async (dispatch: AppDispatch, getState: () => RootState): Promise<void> => {\n  const { transactions } = getState().transactions;\n\n  const transaction: Erc20ApprovalTransaction = {\n    type: SubmittedTransactionType.erc20Approval,\n    hash,\n    status: SubmittedTransactionStatus.processing,\n    timestamp: Date.now(),\n  };\n\n  dispatch(setTransactions([\n    transaction,\n    ...transactions,\n  ]));\n};\n\nexport const addNftApprovalTransaction = (hash: string, tokenId: string) => async (dispatch: AppDispatch, getState: () => RootState): Promise<void> => {\n  const { transactions } = getState().transactions;\n\n  const transaction: NftApprovalTransaction = {\n    type: SubmittedTransactionType.nftApproval,\n    hash,\n    tokenId,\n    status: SubmittedTransactionStatus.processing,\n    timestamp: Date.now(),\n  };\n\n  dispatch(setTransactions([\n    transaction,\n    ...transactions,\n  ]));\n};\n\nexport const addOrderTransaction = (hash: string, order: Order) => async (dispatch: AppDispatch, getState: () => RootState): Promise<void> => {\n  const { transactions } = getState().transactions;\n\n  const transaction: OrderTransaction = {\n    type: SubmittedTransactionType.order,\n    hash,\n    order,\n    status: SubmittedTransactionStatus.processing,\n    timestamp: Date.now(),\n  };\n\n  dispatch(setTransactions([\n    transaction,\n    ...transactions,\n  ]));\n};\n\nexport const addCancelTransaction = (hash: string, order: Order) => async (dispatch: AppDispatch, getState: () => RootState): Promise<void> => {\n  const { transactions } = getState().transactions;\n\n  const transaction: CancelOrderTransaction = {\n    type: SubmittedTransactionType.cancelOrder,\n    hash,\n    order,\n    status: SubmittedTransactionStatus.processing,\n    timestamp: Date.now(),\n  };\n\n  dispatch(setTransactions([\n    transaction,\n    ...transactions,\n  ]));\n};\n","import { useMemo } from 'react';\n\nimport { BigNumber } from 'bignumber.js';\n\nimport useInsufficientAmount from '../../../hooks/useInsufficientAmount';\nimport { useAppSelector } from '../../../redux/hooks';\n\nconst useTokenAmountAndFee = (amount: string): [string | undefined, string | undefined] => {\n  const { protocolFee } = useAppSelector(state => state.metadata);\n  const hasInsufficientAmount = useInsufficientAmount(amount);\n\n  return useMemo(() => {\n    if (hasInsufficientAmount) {\n      return [undefined, undefined];\n    }\n\n    const feeAmount = new BigNumber(amount).multipliedBy(protocolFee / 10000);\n    const tokenAmountMinusFee = new BigNumber(amount).minus(feeAmount);\n\n    return [tokenAmountMinusFee.toString(), feeAmount.toString()];\n  }, [hasInsufficientAmount, amount, protocolFee]);\n};\n\nexport default useTokenAmountAndFee;\n","import React, { FC, useCallback } from 'react';\n\nimport { FullOrder, TokenInfo } from '@airswap/types';\nimport classnames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nimport Button from '../../../../components/Button/Button';\nimport { routes } from '../../../../routes';\nimport { ListNftState } from '../ConnectedListNftWidget/ConnectedListNftWidget';\n\nimport './ListActionButtons.scss';\n\ninterface ActionButtonsProps {\n  hasInsufficientAmount: boolean;\n  hasInsufficientExpiryAmount: boolean;\n  hasNoCollectionTokenApproval: boolean;\n  account: string;\n  activeUserOrder?: FullOrder;\n  currencyToken: TokenInfo;\n  tokenId: string;\n  orderNonce?: string;\n  state: ListNftState;\n  onActionButtonClick: () => void;\n  onBackButtonClick: () => void;\n  className?: string;\n}\n\nconst ListActionButtons: FC<ActionButtonsProps> = ({\n  hasInsufficientAmount,\n  hasInsufficientExpiryAmount,\n  hasNoCollectionTokenApproval,\n  account,\n  activeUserOrder,\n  currencyToken,\n  tokenId,\n  orderNonce,\n  state,\n  onActionButtonClick,\n  onBackButtonClick,\n  className = '',\n}) => {\n  const classNames = classnames('list-action-buttons', {\n    'list-action-buttons--is-token-already-listed-warning': state === ListNftState.tokenAlreadyListedWarning,\n  }, className);\n\n  const getReviewButtonText = () => {\n    if (hasNoCollectionTokenApproval) {\n      return 'Approve NFT';\n    }\n\n    return 'Sign Listing';\n  };\n\n  const getDisabledButtonText = () => {\n    if (hasInsufficientExpiryAmount) {\n      return 'Fill in expiry';\n    }\n\n    return 'Fill in amount';\n  };\n\n  const getActionButton = useCallback((): JSX.Element | null => {\n    if (hasInsufficientAmount) {\n      return (\n        <Button\n          disabled\n          text={getDisabledButtonText()}\n          className=\"list-action-buttons__action-button\"\n        />\n      );\n    }\n\n    if (state === ListNftState.details) {\n      return (\n        <Button\n          text=\"List NFT\"\n          onClick={onActionButtonClick}\n          className=\"list-action-buttons__action-button\"\n        />\n      );\n    }\n\n    if (state === ListNftState.tokenAlreadyListedWarning && activeUserOrder) {\n      return (\n        <>\n          <NavLink\n            to={routes.orderDetail(account, activeUserOrder.nonce)}\n            className=\"list-action-buttons__action-button\"\n          >\n            Cancel previous listing\n          </NavLink>\n          <Button\n            text=\"back\"\n            onClick={onBackButtonClick}\n            className=\"list-action-buttons__back-button\"\n          />\n          <Button\n            text=\"List anyway\"\n            onClick={onActionButtonClick}\n            className=\"list-action-buttons__list-anyway-button\"\n          />\n        </>\n      );\n    }\n\n    if (state === ListNftState.review) {\n      return (\n        <>\n          <Button\n            text={getReviewButtonText()}\n            onClick={onActionButtonClick}\n            className=\"list-action-buttons__action-button\"\n          />\n          <Button\n            text=\"Back\"\n            onClick={onBackButtonClick}\n            className=\"list-action-buttons__back-button\"\n          />\n        </>\n      );\n    }\n\n    if (state === ListNftState.sign) {\n      return (\n        <NavLink\n          to=\"/\"\n          className=\"list-action-buttons__action-button\"\n        >\n          Sign transaction\n        </NavLink>\n      );\n    }\n\n    if (state === ListNftState.success && orderNonce) {\n      return (\n        <NavLink\n          to={routes.userOrders(account, orderNonce)}\n          className=\"list-action-buttons__action-button\"\n        >\n          View listings\n        </NavLink>\n      );\n    }\n\n    if (state === ListNftState.failed) {\n      return (\n        <NavLink\n          to={routes.nftDetail(tokenId)}\n          className=\"list-action-buttons__action-button\"\n        >\n          Go back\n        </NavLink>\n      );\n    }\n\n    return null;\n  }, [\n    hasInsufficientAmount,\n    hasInsufficientExpiryAmount,\n    hasNoCollectionTokenApproval,\n    currencyToken,\n    state,\n  ]);\n\n  return (\n    <div className={classNames}>\n      {getActionButton()}\n    </div>\n  );\n};\n\nexport default ListActionButtons;\n","import React, { FC } from 'react';\n\nimport { ExpiryTimeUnit } from '../../types/ExpiryTimeUnit';\n\nimport './ExpiryIndicator.scss';\n\ninterface ExpiryIndicatorProps {\n  unit: ExpiryTimeUnit;\n  amount?: number;\n  className?: string;\n}\n\nconst ExpiryIndicator: FC<ExpiryIndicatorProps> = ({ unit, amount = '0', className = '' }) => (\n  <div className={`expiry-indicator ${className}`}>\n    <div className=\"expiry-indicator__title\">\n      Expires in\n    </div>\n    <div className=\"expiry-indicator__amount\">\n      {amount}\n    </div>\n    <div className=\"expiry-indicator__unit\">\n      {unit}\n    </div>\n  </div>\n);\n\nexport default ExpiryIndicator;\n","import React, { FC } from 'react';\n\nimport { CollectionTokenInfo } from '@airswap/types';\n\nimport './ReviewNftDetails.scss';\n\ninterface ReviewNftDetailsProps {\n  logoURI?: string;\n  title?: string;\n  token?: CollectionTokenInfo;\n  className?: string;\n}\n\nconst ReviewNftDetails: FC<ReviewNftDetailsProps> = ({\n  logoURI,\n  title,\n  token,\n  className = '',\n}) => (\n  <div className={`review-nft-details ${className}`}>\n    <h3 className=\"review-nft-details__title\">\n      {title}\n    </h3>\n    <h4 className=\"review-nft-details__name\">{token?.name}</h4>\n    <div className=\"review-nft-details__icon\" style={{ backgroundImage: `url(\"${logoURI}\")` }} />\n  </div>\n);\n\nexport default ReviewNftDetails;\n","import React, { FC } from 'react';\n\nimport { TokenInfo } from '@airswap/types';\n\nimport Icon from '../Icon/Icon';\n\nimport './ReviewTokenDetails.scss';\n\ninterface ReviewTokenDetailsProps {\n  amount: string;\n  amountMinusProtocolFee?: string;\n  projectFeePercent: number;\n  protocolFeePercent: number;\n  title: string;\n  token: TokenInfo;\n  className?: string;\n}\n\nconst ReviewTokenDetails: FC<ReviewTokenDetailsProps> = ({\n  amount,\n  amountMinusProtocolFee,\n  title,\n  projectFeePercent,\n  protocolFeePercent,\n  token,\n  className = '',\n}) => (\n  <div className={`review-token-details ${className}`}>\n    <div className=\"review-token-details__token-info\">\n      <h3 className=\"review-token-details__title\">{title}</h3>\n      <div className=\"review-token-details__amount-wrapper\">\n        <h4 className=\"review-token-details__amount-sub-text\">{`${amount} ${token.symbol} - Fees =`}</h4>\n        {amountMinusProtocolFee && <h4 className=\"review-token-details__amount\">{`${amountMinusProtocolFee} ${token.symbol}`}</h4> }\n      </div>\n      <div className=\"review-token-details__logo-icon\" style={{ backgroundImage: `url(\"${token.logoURI}\")` }} />\n    </div>\n    <div className=\"review-token-details__fees-info\">\n      <h3 className=\"review-token-details__title\">Fees</h3>\n      <h4 className=\"review-token-details__fees-text\">{`${projectFeePercent}% Project, ${protocolFeePercent}% Protocol`}</h4>\n      <Icon name=\"information-circle-outline\" className=\"review-token-details__information-icon\" />\n    </div>\n  </div>\n);\n\nexport default ReviewTokenDetails;\n","import React, { FC, useMemo } from 'react';\n\nimport { CollectionTokenInfo, TokenInfo } from '@airswap/types';\nimport { format } from '@greypixel_/nicenumbers';\nimport { BigNumber } from 'bignumber.js';\n\nimport './TradeDetails.scss';\n\ninterface TradeDetailsProps {\n  amount?: BigNumber;\n  amountSubtext?: string;\n  logoURI?: string;\n  title: string;\n  token: TokenInfo | CollectionTokenInfo;\n  className?: string;\n}\n\nconst TradeDetails: FC<TradeDetailsProps> = ({\n  amount,\n  amountSubtext,\n  logoURI,\n  title,\n  token,\n  className = '',\n}) => {\n  const symbol = 'symbol' in token && token.symbol;\n  const name = 'name' in token && token.name;\n  const decimals = 'decimals' in token;\n\n  const readableAmount = useMemo(() => {\n    if (!amount || !(decimals)) {\n      return undefined;\n    }\n\n    return format(amount, {\n      tokenDecimals: token.decimals,\n      significantFigures: 6,\n    });\n  }, [amount, decimals, token]);\n\n  return (\n    <div className={`trade-details ${className}`}>\n      <div className=\"trade-details__icon\" style={{ backgroundImage: `url(\"${logoURI}\")` }} />\n      <div className=\"trade-details__title-and-name\">\n        <h3 className=\"trade-details__title\">{title}</h3>\n        <h4 className=\"trade-details__name\">{symbol || name}</h4>\n      </div>\n      <div className=\"trade-details__amount-container\">\n        <div className=\"trade-details__amount-container-content\">\n          {readableAmount && <span className=\"trade-details__amount\">{readableAmount}</span>}\n          {amountSubtext && <span className=\"trade-details__amount-subtext\">{amountSubtext}</span>}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TradeDetails;\n","import React, { FC } from 'react';\n\nimport IconButton from '../IconButton/IconButton';\n\nimport './CopyLinkButton.scss';\n\ninterface CopyLinkButtonProps {\n  onClick: () => void;\n  className?: string;\n}\n\nconst CopyLinkButton: FC<CopyLinkButtonProps> = ({ onClick, className = '' }) => (\n  <IconButton\n    icon=\"copy2\"\n    text=\"Copy link\"\n    iconAlign=\"right\"\n    onClick={onClick}\n    className={`copy-link-button ${className}`}\n  />\n);\n\nexport default CopyLinkButton;\n","import React, { FC } from 'react';\n\nimport classNames from 'classnames';\n\nimport Button from '../../../../components/Button/Button';\nimport { SelectOption } from '../../../../types/SelectOption';\n\nimport './DropdownButton.scss';\n\ntype HTMLButtonProps = Omit<JSX.IntrinsicElements['button'], 'ref'>;\n\ninterface DropdownButtonProps extends HTMLButtonProps {\n  isActive: boolean;\n  option: SelectOption;\n  className?: string;\n}\n\nconst DropdownButton: FC<DropdownButtonProps> = ({\n  isActive,\n  option,\n  className = '',\n  ...props\n}) => {\n  const buttonClassName = classNames('dropdown-button', {\n    'dropdown-button--is-active': isActive,\n  }, className);\n\n  return (\n    <Button\n      {...props}\n      text={option.label}\n      className={buttonClassName}\n    />\n  );\n};\n\nexport default DropdownButton;\n","import React, {\n  FC,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\n\nimport Icon from '../../components/Icon/Icon';\nimport { SelectOption } from '../../types/SelectOption';\nimport IconButton from '../IconButton/IconButton';\nimport { getDropdownOptionsTranslateY } from './helpers/getDropdownOptionsTranslateY';\nimport DropdownButton from './subcomponents/DropdownButton/DropdownButton';\n\nimport './Dropdown.scss';\n\nexport type DropdownProps = {\n  selectedOption: SelectOption;\n  options: SelectOption[];\n  onBlur?: () => void;\n  onChange: (option: SelectOption) => void;\n  onFocus?: () => void;\n  className?: string;\n  buttonClassName?: string;\n  dropdownButtonClassName?: string;\n  dropdownButtonBackgroundClassName?: string;\n  mobileSelectIconClassName?: string;\n};\n\nconst Dropdown: FC<DropdownProps> = ({\n  selectedOption,\n  options,\n  onBlur,\n  onChange,\n  onFocus,\n  className = '',\n  buttonClassName = '',\n  dropdownButtonClassName = '',\n  dropdownButtonBackgroundClassName = '',\n  mobileSelectIconClassName = '',\n}) => {\n  const wrapperRef = useRef<HTMLDivElement>(null);\n  const optionsRef = useRef<HTMLDivElement>(null);\n\n  // activeOptionIndex is used for styling SelectOptions vertical position. This way\n  // the active option in SelectOptions always opens directly on top of the Select.\n  const [activeOptionIndex, setActiveOptionIndex] = useState(\n    options.findIndex((option) => option.value === selectedOption.value),\n  );\n\n  // activeHoverIndex is for setting the hover effect element position. It is animated\n  // so it's a separate div element.\n  const [activeHoverIndex, setActiveHoverIndex] = useState(activeOptionIndex);\n\n  const optionsTranslateY = useMemo(() => {\n    const optionsHeight = optionsRef.current?.clientHeight || 0;\n    const wrapperPosY = wrapperRef.current?.getBoundingClientRect().y || 0;\n\n    return getDropdownOptionsTranslateY(\n      optionsHeight,\n      wrapperPosY,\n      activeOptionIndex,\n      options.length,\n    );\n  }, [options, activeOptionIndex]);\n\n  const handleOptionClick = (newSelectedOption: SelectOption) => {\n    onChange(newSelectedOption);\n  };\n\n  const handleButtonBlur = () => {\n    const index = options.findIndex(option => option.value === selectedOption.value);\n    setActiveOptionIndex(index);\n    setActiveHoverIndex(index);\n\n    if (onBlur) {\n      onBlur();\n    }\n  };\n\n  const handleButtonClick = (e: React.MouseEvent<HTMLButtonElement>) => {\n    // Unlike other browsers, on safari clicking a button won't focus it.\n    e.currentTarget.focus();\n\n    if (onFocus) {\n      onFocus();\n    }\n  };\n\n  const handleSelectChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    const newSelectedOption = options.find(option => option.value === e.target.value);\n\n    if (newSelectedOption) {\n      onChange(newSelectedOption);\n    }\n  };\n\n  useEffect(() => {\n    setActiveOptionIndex(options.findIndex((option) => option.value === selectedOption.value));\n  }, [selectedOption]);\n\n  return (\n    <div\n      ref={wrapperRef}\n      className={`dropdown ${className}`}\n    >\n      <IconButton\n        iconAlign=\"right\"\n        icon=\"chevron-down\"\n        text={selectedOption.label}\n        onBlur={handleButtonBlur}\n        onClick={handleButtonClick}\n        onFocus={onFocus}\n        className={`dropdown__button ${buttonClassName}`}\n        iconClassName=\"dropdown__button-icon\"\n      />\n      <div\n        ref={optionsRef}\n        style={{ transform: `translateY(${optionsTranslateY}%)` }}\n        className=\"dropdown__options-container\"\n      >\n        {options.map((option, index) => (\n          <DropdownButton\n            isActive={activeHoverIndex === index}\n            key={option.value}\n            option={option}\n            onMouseOver={() => setActiveHoverIndex(index)}\n            onPointerDown={() => handleOptionClick(option)}\n            className={`dropdown__dropdown-button ${dropdownButtonClassName}`}\n          />\n        ))}\n        <div\n          style={{ transform: `translateY(calc(${activeHoverIndex * 100}% - ${activeHoverIndex}px)` }}\n          className={`dropdown__dropdown-button-background ${dropdownButtonBackgroundClassName}`}\n        />\n      </div>\n      {/* Native Select for mobile */}\n      <select\n        value={selectedOption.value}\n        className={`dropdown__select ${buttonClassName}`}\n        onChange={handleSelectChange}\n      >\n        {options.map(option => (\n          <option key={option.value} value={option.value}>\n            {option.label}\n          </option>\n        ))}\n      </select>\n      <Icon\n        name=\"chevron-down\"\n        className={`dropdown__mobile-select-icon ${mobileSelectIconClassName}`}\n      />\n    </div>\n  );\n};\n\nexport default Dropdown;\n","export const getDropdownOptionsTranslateY = (\n  optionsHeight: number,\n  wrapperY: number,\n  activeIndex: number,\n  optionsLength: number,\n) => {\n  const paddingTop = 16;\n  const overflow = Math.max(0, optionsHeight - (wrapperY - paddingTop));\n\n  const minTranslateY = ((optionsHeight - overflow) / optionsHeight) * -100;\n  const translateY = activeIndex * -(100 / optionsLength);\n\n  return Math.max(minTranslateY, translateY);\n};\n","import React, { FC, useMemo } from 'react';\n\nimport Input from '../../components/Input/Input';\nimport { ExpiryTimeUnit } from '../../types/ExpiryTimeUnit';\nimport { SelectOption } from '../../types/SelectOption';\nimport Dropdown from '../Dropdown/Dropdown';\nimport { getExpiryTimeUnitOptions, transformToExpiryTimeUnit } from './helpers';\n\nimport './SelectExpiry.scss';\n\ninterface SelectExpiryProps {\n  amount?: number;\n  timeUnit: ExpiryTimeUnit;\n  onAmountChange: (amount?: number) => void;\n  onTimeUnitChange: (timeUnit: ExpiryTimeUnit) => void;\n  className?: string;\n}\n\nconst SelectExpiry: FC<SelectExpiryProps> = ({\n  amount,\n  timeUnit,\n  className = '',\n  onAmountChange,\n  onTimeUnitChange,\n}) => {\n  const expiryOptions = useMemo(() => getExpiryTimeUnitOptions(), []);\n\n  const unitOption = useMemo(\n    () => expiryOptions.find(option => option.value === timeUnit) as SelectOption,\n    [expiryOptions, timeUnit],\n  );\n\n  const handleInputAmountChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    onAmountChange(parseInt(e.target.value, 10) || undefined);\n  };\n\n  const handleDropdownExpiryOptionChange = (option: SelectOption) => {\n    onTimeUnitChange(transformToExpiryTimeUnit(option.value));\n  };\n\n  return (\n    <div className={`select-expiry ${className}`}>\n      <div className=\"select-expiry__label\">\n        Expires in\n      </div>\n      <Input\n        min=\"1\"\n        type=\"number\"\n        value={amount || ''}\n        onChange={handleInputAmountChange}\n        className=\"select-expiry__input-amount\"\n      />\n      <Dropdown\n        selectedOption={unitOption}\n        options={expiryOptions}\n        onChange={handleDropdownExpiryOptionChange}\n        className=\"select-expiry__dropdown\"\n        buttonClassName=\"select-expiry__dropdown-button\"\n      />\n    </div>\n  );\n};\n\nexport default SelectExpiry;\n","import { ExpiryTimeUnit } from '../../../types/ExpiryTimeUnit';\nimport { SelectOption } from '../../../types/SelectOption';\n\nexport const getExpiryTimeUnitOptions = (): SelectOption[] => [\n  {\n    label: 'minutes',\n    value: ExpiryTimeUnit.minutes,\n  },\n  {\n    label: 'hours',\n    value: ExpiryTimeUnit.hours,\n  },\n  {\n    label: 'days',\n    value: ExpiryTimeUnit.days,\n  },\n  {\n    label: 'weeks',\n    value: ExpiryTimeUnit.weeks,\n  },\n];\n\nexport const transformToExpiryTimeUnit = (value: string): ExpiryTimeUnit => {\n  if (value === ExpiryTimeUnit.minutes) {\n    return ExpiryTimeUnit.minutes;\n  }\n\n  if (value === ExpiryTimeUnit.hours) {\n    return ExpiryTimeUnit.hours;\n  }\n\n  if (value === ExpiryTimeUnit.days) {\n    return ExpiryTimeUnit.days;\n  }\n\n  return ExpiryTimeUnit.weeks;\n};\n\n// const msPerMinute = 60000;\n//\n// value: `${msPerMinute}`,\n// {\n//   label: 'hours',\n//     value: `${60 * msPerMinute}`,\n// },\n// {\n//   label: 'days',\n//     value: `${24 * 60 * msPerMinute}`,\n// },\n// {\n//   label: 'weeks',\n//     value: `${7 * 24 * 60 * msPerMinute}`,\n","import React, { FC } from 'react';\n\nimport { CollectionTokenInfo } from '@airswap/types';\n\nimport Button from '../../components/Button/Button';\nimport Icon from '../../components/Icon/Icon';\n\nimport './SelectNftButton.scss';\n\ninterface SelectNftProps {\n  collectionName: string;\n  logoURI?: string;\n  title: string;\n  token?: CollectionTokenInfo;\n  onClick: () => void;\n  className?: string;\n}\n\nconst SelectNftButton: FC<SelectNftProps> = ({\n  collectionName,\n  logoURI,\n  title,\n  token,\n  onClick,\n  className = '',\n}) => {\n  const name = token?.name || `${collectionName} ${token?.id ? `#${token.id}` : ''}`;\n\n  return (\n    <Button onClick={onClick} className={`select-nft-button ${className}`}>\n      <div className=\"select-nft-button__logo-icon\" style={{ backgroundImage: `url(\"${logoURI}\")` }} />\n      <div className=\"select-nft-button__title-and-name\">\n        <h3 className=\"select-nft-button__title\">{title}</h3>\n        <h4 className=\"select-nft-button__name\">{name}</h4>\n      </div>\n      <Icon name=\"chevron-down\" className=\"select-nft-button__chevron-down-icon\" />\n    </Button>\n  );\n};\n\nexport default SelectNftButton;\n","import React, { ChangeEvent, FC } from 'react';\n\nimport { TokenInfo } from '@airswap/types';\n\nimport Input from '../../components/Input/Input';\nimport { transformInputEventToValue } from './helpers/transformInputEventToValue';\n\nimport './TradeTokenInput.scss';\n\ninterface TradeTokenInputProps {\n  protocolFeeInCurrencyToken?: string;\n  protocolFeePercent?: number;\n  token: TokenInfo;\n  value: string;\n  onInputChange: (value: string) => void;\n  className?: string;\n}\n\nconst TradeTokenInput: FC<TradeTokenInputProps> = ({\n  protocolFeeInCurrencyToken,\n  protocolFeePercent,\n  token,\n  value,\n  onInputChange,\n  className = '',\n}) => {\n  const logoURI = 'logoURI' in token && token.logoURI;\n  const image = 'image' in token && token.image;\n  const symbol = 'symbol' in token && token.symbol;\n  const name = 'name' in token && token.name;\n  const id = 'id' in token && token.id;\n\n  const handleInputChange = (e: ChangeEvent<HTMLInputElement>): void => {\n    const newValue = transformInputEventToValue(e);\n\n    if (newValue !== undefined) {\n      onInputChange(newValue);\n    }\n  };\n\n  return (\n    <div className={`trade-token-input ${className}`}>\n      <div className=\"trade-token-input__icon\" style={{ backgroundImage: `url(\"${logoURI || image}\")` }} />\n      <div className=\"trade-token-input__title-and-name\">\n        <h3 className=\"trade-token-input__title\">For</h3>\n        <h4 className=\"trade-token-input__name\">{symbol || `${name} #${id}`}</h4>\n      </div>\n      <div className=\"trade-token-input__amount-container\">\n        <div className=\"trade-token-input__amount-container-content\">\n          <Input\n            inputMode=\"decimal\"\n            autoComplete=\"off\"\n            pattern=\"^[0-9]*[.,]?[0-9]*$\"\n            minLength={1}\n            maxLength={79}\n            spellCheck={false}\n            value={value}\n            onChange={handleInputChange}\n            placeholder=\"0.00\"\n            className=\"trade-token-input__input\"\n          />\n          <span className=\"trade-token-input__amount-subtext\">\n            {protocolFeePercent && `Exl. fee ${protocolFeePercent}%`}\n            {protocolFeeInCurrencyToken && `= ${protocolFeeInCurrencyToken} ${token.symbol}`}\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TradeTokenInput;\n","import { ChangeEvent } from 'react';\n\nexport const transformInputEventToValue = (e: ChangeEvent<HTMLInputElement>): string | undefined => {\n  const floatRegExp = /^([0-9])*[.,]?([0-9])*$/;\n  let { value } = e.currentTarget;\n\n  if (value === '') {\n    return '';\n  }\n\n  if (!floatRegExp.test(value)) {\n    return undefined;\n  }\n\n  if (value[value.length - 1] === ',') {\n    value = `${value.slice(0, value.length - 1)}.`;\n  }\n\n  value = value.replace(/^0+/, '0');\n\n  return value;\n};\n","import React, { FC } from 'react';\n\nimport { NavLinkProps } from 'react-router-dom';\n\nimport IconNavLink from '../IconNavLink/IconNavLink';\n\nimport './TransactionLink.scss';\n\ninterface TransactionLinkProps extends NavLinkProps {\n  hideLabel?: boolean;\n  className?: string;\n}\n\nconst TransactionLink: FC<TransactionLinkProps> = ({ hideLabel, className = '', ...props }) => (\n  <IconNavLink\n    {...props}\n    hideLabel={hideLabel}\n    target=\"_blank\"\n    icon=\"transaction-link\"\n    iconAlign=\"right\"\n    text=\"View on Etherscan\"\n    className={`transaction-link ${className}`}\n  />\n);\n\nexport default TransactionLink;\n","import { CSSProperties, FC, ReactElement } from 'react';\n\nimport classNames from 'classnames';\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport { useElementSize } from 'usehooks-ts';\n\nimport Button from '../../../components/Button/Button';\nimport LoadingSpinner from '../../../components/LoadingSpinner/LoadingSpinner';\n\nimport './SelectNftListButton.scss';\n\ninterface SelectNftButtonProps {\n  isListed?: boolean;\n  isLoading?: boolean;\n  isPreview?: boolean;\n  balance?: string;\n  logoURI: string;\n  name: string;\n  value: string;\n  onClick: (value: string) => void;\n  className?: string;\n}\n\nconst SelectNftListButton: FC<SelectNftButtonProps> = ({\n  isListed,\n  isLoading,\n  isPreview,\n  balance,\n  logoURI,\n  name,\n  value,\n  onClick,\n  className = '',\n}): ReactElement => {\n  const [balanceElementRef, { width }] = useElementSize();\n\n  const buttonClassNames = classNames('select-nft-list-button', {\n    'select-nft-list-button--is-preview': isPreview,\n    'select-nft-list-button--has-balance': balance,\n  }, className);\n\n  const cssVariables = {\n    '--select-nft-list-button-balance-width': `${width}px`,\n  } as CSSProperties;\n\n  return (\n    <Button\n      style={cssVariables}\n      onClick={() => onClick(value)}\n      className={buttonClassNames}\n    >\n      {isLoading ? (\n        <LoadingSpinner className=\"select-nft-list-button__loading-spinner\" />\n      ) : (\n        <div className=\"select-nft-list-button__logo-icon\" style={{ backgroundImage: `url(\"${logoURI}\")` }} />\n      )}\n      <div className=\"select-nft-list-button__name-and-listed\">\n        <div className=\"select-nft-list-button__name\">{name}</div>\n        {isListed && <div className=\"select-nft-list-button__listed\">Listed</div>}\n      </div>\n\n      {!!balance && <div ref={balanceElementRef} className=\"select-nft-list-button__balance\">{`${balance}x`}</div>}\n    </Button>\n  );\n};\n\nexport default SelectNftListButton;\n","import {\n  ChangeEvent,\n  FC,\n  ReactElement,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\n\nimport { CollectionTokenInfo } from '@airswap/types';\nimport { useDebounce } from 'react-use';\n\nimport SearchInput from '../../components/SearchInput/SearchInput';\nimport { ExtendedFullOrder } from '../../entities/FullOrder/FullOrder';\nimport { TokenIdsWithBalance } from '../../entities/TokenIdsWithBalance/TokenIdsWithBalance';\nimport { FullOrderState } from '../../types/FullOrderState';\nimport EmptyState from '../EmptyState/EmptyState';\nimport { getSelectNftOptions } from '../SelectNftButton/helpers/getSelectNftOptions';\nimport { filterTokenBySearchValue } from './helpers/filterTokenBySearchValue';\nimport SelectNftListButton from './subcomponents/SelectNftListButton';\n\nimport './SelectNft.scss';\n\ninterface SelectNftProps {\n  collectionName: string;\n  tokenIdsWithBalance: TokenIdsWithBalance;\n  tokenInfo: CollectionTokenInfo[];\n  tokens: string[];\n  loadingTokens?: string[];\n  orders: ExtendedFullOrder[];\n  onClickNft: (id: string) => void;\n  onScroll: (tokens: string[]) => void;\n  className?: string;\n}\n\nconst SelectNft: FC<SelectNftProps> = ({\n  collectionName,\n  tokenIdsWithBalance,\n  tokenInfo,\n  tokens,\n  loadingTokens = [],\n  orders,\n  onClickNft,\n  onScroll,\n  className = '',\n}): ReactElement => {\n  const ref = useRef<HTMLUListElement>(null);\n\n  const [viewedTokens, setViewedTokens] = useState<string[]>([]);\n  const [debouncedViewedTokens, setDebouncedViewedTokens] = useState<string[]>([]);\n  const [searchValue, setSearchValue] = useState('');\n\n  const filteredTokens = useMemo(() => tokens.filter(token => filterTokenBySearchValue(token, searchValue, tokenInfo)), [tokens, searchValue, orders]);\n  const options = useMemo(() => getSelectNftOptions(filteredTokens, collectionName), [filteredTokens, collectionName]);\n\n  useDebounce((): void => {\n    setDebouncedViewedTokens(viewedTokens);\n  }, 300, [viewedTokens]);\n\n  useEffect(() => {\n    onScroll(debouncedViewedTokens);\n  }, [debouncedViewedTokens]);\n\n  const getViewedTokens = (element: HTMLUListElement | null) => {\n    const firstChild = ref.current?.firstChild as HTMLLIElement | null;\n\n    if (!element || !firstChild) {\n      return;\n    }\n\n    const { clientHeight, scrollTop } = element;\n    const itemHeight = firstChild.clientHeight;\n    const startIndex = Math.floor(scrollTop / itemHeight);\n    const endIndex = startIndex + Math.ceil(clientHeight / itemHeight);\n\n    setViewedTokens(options.slice(startIndex, endIndex).map(option => option.value));\n  };\n\n  const handleScroll = () => {\n    getViewedTokens(ref.current);\n  };\n\n  const handleSearchInputChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setSearchValue(e.target.value);\n  };\n\n  useEffect(() => {\n    getViewedTokens(ref.current);\n  }, [options]);\n\n  return (\n    <div className={`select-nft ${className}`}>\n      <SearchInput\n        placeholder=\"Search nft\"\n        onChange={handleSearchInputChange}\n        className=\"select-nft__search-input\"\n      />\n\n      {options.length === 0 && (\n        <EmptyState\n          text=\"No tokens found. Try another search term.\"\n          className=\"select-nft__empty-state\"\n        />\n      )}\n\n      <ul\n        ref={ref}\n        onScroll={handleScroll}\n        className=\"select-nft__list\"\n      >\n        {options.map(option => {\n          const nft = tokenInfo.find(token => token.id === option.value);\n          const isLoading = !nft && loadingTokens.some(token => token === option.value);\n          const isListed = orders.some(order => order.state === FullOrderState.open && order.signer.id === option.value);\n          const balance = tokenIdsWithBalance[option.value];\n\n          return (\n            <li key={option.value}>\n              <SelectNftListButton\n                isListed={isListed}\n                isLoading={isLoading}\n                isPreview={!nft}\n                balance={balance === '1' ? undefined : balance}\n                name={nft?.name || option.label}\n                logoURI={nft?.image || ''}\n                value={option.value}\n                onClick={onClickNft}\n                className=\"select-nft__nft-button\"\n              />\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default SelectNft;\n","import { CollectionTokenInfo } from '@airswap/types';\n\nimport { filterCollectionTokenBySearchValue } from '../../../entities/CollectionToken/CollectionTokenHelpers';\n\nexport const filterTokenBySearchValue = (tokenId: string, searchValue: string, tokenInfo: CollectionTokenInfo[]): boolean => {\n  const nft = tokenInfo.find(token => token.id === tokenId);\n\n  if (nft) {\n    return filterCollectionTokenBySearchValue(nft, searchValue);\n  }\n\n  return tokenId.includes(searchValue.toLowerCase());\n};\n","import { SelectOption } from '../../../types/SelectOption';\n\nexport const getSelectNftOptions = (tokens: string[], collectionName: string): SelectOption[] => tokens.map(token => ({\n  value: token.toString(),\n  label: `${collectionName} #${token}`,\n}));\n","import {\n  FC,\n  ReactElement,\n  useEffect,\n  useState,\n} from 'react';\n\nimport { BigNumber } from 'bignumber.js';\n\nimport SelectNft from '../../compositions/SelectNft/SelectNft';\nimport { getUniqueSingleDimensionArray } from '../../helpers/array';\nimport useCollectionTokens from '../../hooks/useCollectionTokens';\nimport { useAppSelector } from '../../redux/hooks';\n\ninterface ConnectedNftSelectorProps {\n  selectedToken: string;\n  tokens: string[];\n  onClickNft: (token: string) => void;\n  className?: string;\n}\n\nconst ConnectedNftSelector: FC<ConnectedNftSelectorProps> = ({\n  selectedToken,\n  tokens: allTokens,\n  onClickNft,\n  className = '',\n}): ReactElement => {\n  const { collectionToken, collectionName } = useAppSelector(state => state.config);\n  const { tokenIdsWithBalance } = useAppSelector(state => state.balances);\n  const { userOrders } = useAppSelector(state => state.listNft);\n\n  const [tokens, setTokens] = useState<string[]>([selectedToken]);\n  const [viewedTokens, setViewedTokens] = useState<string[]>([]);\n\n  const [tokenInfo, tokenInfoIsLoading] = useCollectionTokens(collectionToken, tokens);\n\n  const handleScroll = (newTokens: string[]) => {\n    setViewedTokens(newTokens);\n  };\n\n  useEffect(() => {\n    if (viewedTokens.length && !tokenInfoIsLoading) {\n      const newTokens = [...tokens, ...viewedTokens]\n        .filter(getUniqueSingleDimensionArray)\n        .sort((a, b) => new BigNumber(a).minus(b).toNumber());\n\n      setTokens(newTokens);\n    }\n  }, [viewedTokens, tokenInfoIsLoading]);\n\n  return (\n    <SelectNft\n      collectionName={collectionName}\n      loadingTokens={viewedTokens}\n      orders={userOrders}\n      tokenIdsWithBalance={tokenIdsWithBalance}\n      tokenInfo={tokenInfo}\n      tokens={allTokens}\n      onClickNft={onClickNft}\n      onScroll={handleScroll}\n      className={className}\n    />\n  );\n};\n\nexport default ConnectedNftSelector;\n","import React, { FC } from 'react';\n\nimport Icon from '../../../../components/Icon/Icon';\n\nimport './SwapIcon.scss';\n\ninterface SwapIconProps {\n  className?: string;\n}\n\nconst SwapIcon: FC<SwapIconProps> = ({ className = '' }) => (\n  <div className={`swap-icon ${className}`}>\n    <Icon className=\"swap-icon__icon\" name=\"swap\" />\n  </div>\n);\n\nexport default SwapIcon;\n","import React, { FC, useMemo } from 'react';\n\nimport { CollectionTokenInfo, FullOrder, TokenInfo } from '@airswap/types';\nimport { getReceiptUrl } from '@airswap/utils';\nimport classNames from 'classnames';\n\nimport ExpiryIndicator from '../../../../components/ExpiryIndicator/ExpiryIndicator';\nimport Icon from '../../../../components/Icon/Icon';\nimport LoadingSpinner from '../../../../components/LoadingSpinner/LoadingSpinner';\nimport ReviewNftDetails from '../../../../components/ReviewNftDetails/ReviewNftDetails';\nimport ReviewTokenDetails from '../../../../components/ReviewTokenDetails/ReviewTokenDetails';\nimport TradeDetails from '../../../../components/TradeDetails/TradeDetails';\nimport CopyLinkButton from '../../../../compositions/CopyLinkButton/CopyLinkButton';\nimport SelectExpiry from '../../../../compositions/SelectExpiry/SelectExpiry';\nimport SelectNftButton from '../../../../compositions/SelectNftButton/SelectNftButton';\nimport TradeTokenInput from '../../../../compositions/TradeTokenInput/TradeTokenInput';\nimport TransactionLink from '../../../../compositions/TransactionLink/TransactionLink';\nimport ConnectedNftSelector from '../../../../connectors/ConnectedNftSelector/ConnectedNftSelector';\nimport { NftApprovalTransaction } from '../../../../entities/SubmittedTransaction/SubmittedTransaction';\nimport { AppError } from '../../../../errors/appError';\nimport writeTextToClipboard from '../../../../helpers/browser';\nimport { routes } from '../../../../routes';\nimport { ExpiryTimeUnit } from '../../../../types/ExpiryTimeUnit';\nimport { ListNftState } from '../ConnectedListNftWidget/ConnectedListNftWidget';\nimport SwapIcon from '../SwapIcon/SwapIcon';\n\nimport './ListNftDetailsContainer.scss';\n\ninterface ListNftDetailContainerProps {\n  chainId: number;\n  collectionImage: string;\n  collectionName: string;\n  collectionTokenInfo?: CollectionTokenInfo;\n  currencyTokenAmount: string;\n  currencyTokenAmountMinusProtocolFee?: string;\n  currencyTokenInfo: TokenInfo;\n  error?: AppError;\n  expiryAmount?: number;\n  expiryTimeUnit: ExpiryTimeUnit;\n  fullOrder?: FullOrder,\n  projectFee: number;\n  protocolFeeInCurrencyToken?: string;\n  protocolFee: number;\n  selectedTokenId: string;\n  submittedApproval?: NftApprovalTransaction;\n  userTokens: string[];\n  widgetState: ListNftState;\n  onExpiryAmountChange: (value?: number) => void;\n  onExpiryTimeUnitChange: (value: ExpiryTimeUnit) => void;\n  onSelectedNftChange: (tokenId: string) => void;\n  onSelectNftButtonClick: () => void;\n  onTradeTokenInputChange: (value: string) => void;\n  className?: string;\n}\n\nconst ListNftDetailContainer: FC<ListNftDetailContainerProps> = ({\n  chainId,\n  collectionImage,\n  collectionName,\n  collectionTokenInfo,\n  currencyTokenInfo,\n  currencyTokenAmount,\n  currencyTokenAmountMinusProtocolFee,\n  error,\n  expiryAmount,\n  expiryTimeUnit,\n  fullOrder,\n  projectFee,\n  protocolFeeInCurrencyToken,\n  protocolFee,\n  submittedApproval,\n  selectedTokenId,\n  widgetState,\n  userTokens,\n  onExpiryAmountChange,\n  onExpiryTimeUnitChange,\n  onSelectedNftChange,\n  onSelectNftButtonClick,\n  onTradeTokenInputChange,\n  className = '',\n}) => {\n  const wrapperClassNames = classNames('list-nft-details-container', {\n    [`list-nft-details-container--has-${widgetState}-state`]: widgetState,\n  }, className);\n\n  const approvalUrl = useMemo(() => (submittedApproval?.hash ? getReceiptUrl(chainId, submittedApproval.hash) : undefined), [submittedApproval]);\n\n  const handleCopyLinkClick = async () => {\n    if (fullOrder) {\n      const link = `${window.location.host}/#${routes.orderDetail(fullOrder.signer.wallet, fullOrder.nonce)}`;\n      await writeTextToClipboard(link);\n    }\n  };\n\n  return (\n    <div className={wrapperClassNames}>\n      {widgetState === ListNftState.details && (\n        <>\n          <SelectNftButton\n            collectionName={collectionName}\n            logoURI={collectionTokenInfo?.image}\n            title=\"List\"\n            token={collectionTokenInfo}\n            onClick={onSelectNftButtonClick}\n            className=\"list-nft-details-container__select-nft\"\n          />\n          <SwapIcon className=\"list-nft-details-container__swap-icon\" />\n          <TradeTokenInput\n            protocolFeeInCurrencyToken={protocolFeeInCurrencyToken}\n            protocolFeePercent={protocolFee / 100}\n            token={currencyTokenInfo}\n            value={currencyTokenAmount}\n            onInputChange={onTradeTokenInputChange}\n          />\n          <SelectExpiry\n            amount={expiryAmount}\n            timeUnit={expiryTimeUnit}\n            onAmountChange={onExpiryAmountChange}\n            onTimeUnitChange={onExpiryTimeUnitChange}\n            className=\"list-nft-details-container__select-expiry\"\n          />\n        </>\n      )}\n\n      {widgetState === ListNftState.selectNft && (\n        <ConnectedNftSelector\n          selectedToken={selectedTokenId}\n          tokens={userTokens}\n          onClickNft={onSelectedNftChange}\n        />\n      )}\n\n      {(widgetState === ListNftState.review || widgetState === ListNftState.success) && (\n        <>\n          {widgetState === ListNftState.success && <Icon name=\"check\" className=\"list-nft-details-container__check-icon\" />}\n          <ReviewNftDetails\n            logoURI={collectionTokenInfo ? collectionTokenInfo.image : collectionImage}\n            title={widgetState === ListNftState.review ? 'List' : 'From'}\n            token={collectionTokenInfo}\n          />\n          <SwapIcon className=\"list-nft-details-container__swap-icon\" />\n          <ReviewTokenDetails\n            amount={currencyTokenAmount}\n            amountMinusProtocolFee={currencyTokenAmountMinusProtocolFee}\n            projectFeePercent={projectFee / 100}\n            protocolFeePercent={protocolFee / 100}\n            title={widgetState === ListNftState.review ? 'For' : 'To'}\n            token={currencyTokenInfo}\n          />\n          <ExpiryIndicator\n            unit={expiryTimeUnit}\n            amount={expiryAmount}\n            className=\"list-nft-details-container__expiry-indicator\"\n          />\n          {widgetState === ListNftState.success && (\n            <CopyLinkButton\n              onClick={handleCopyLinkClick}\n              className=\"list-nft-details-container__copy-link-button\"\n            />\n          )}\n        </>\n      )}\n\n      {widgetState === ListNftState.approving && (\n        <>\n          <LoadingSpinner className=\"list-nft-details-container__loading-spinner\" />\n          {collectionTokenInfo && (\n            <TradeDetails\n              logoURI={collectionTokenInfo ? collectionTokenInfo.image : collectionImage}\n              title=\"Approving\"\n              token={collectionTokenInfo}\n            />\n          )}\n          {approvalUrl && (\n            <TransactionLink\n              to={approvalUrl}\n              className=\"list-nft-details-container__transaction-link\"\n            />\n          )}\n        </>\n      )}\n\n      {(widgetState === ListNftState.sign || widgetState === ListNftState.approve) && (\n        <p className=\"list-nft-details-container__message\">\n          If your wallet does not open something went wrong\n        </p>\n      )}\n\n      {widgetState === ListNftState.indexing && (\n        <LoadingSpinner className=\"list-nft-details-container__loading-spinner\" />\n      )}\n\n      {widgetState === ListNftState.failed && (\n        <>\n          <Icon name=\"close\" className=\"list-nft-details-container__failed-icon\" />\n          <p className=\"list-nft-details-container__message\">\n            {/* TODO: Add translations for errors */}\n            {`Failed for the following reason: ${error?.type}`}\n          </p>\n        </>\n      )}\n\n      {widgetState === ListNftState.tokenAlreadyListedWarning && (\n        <>\n          <ReviewNftDetails\n            logoURI={collectionTokenInfo ? collectionTokenInfo.image : collectionImage}\n            title=\"Listed\"\n            token={collectionTokenInfo}\n          />\n          <div className=\"list-nft-details-container__warning\">\n            <Icon\n              name=\"information-circle-outline\"\n              className=\"list-nft-details-container__info-icon\"\n            />\n            <div className=\"list-nft-details-container__warning-text-wrapper\">\n              <div className=\"list-nft-details-container__warning-title\">\n                Token already listed\n              </div>\n              <div className=\"list-nft-details-container__warning-text\">\n                You are about to create a listing for a token that is already listed for sale. It&apos;s possible that the previous listing would fill instead.\n              </div>\n            </div>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default ListNftDetailContainer;\n","export default async function writeTextToClipboard(text: string): Promise<boolean> {\n  if (!navigator.clipboard || !navigator.clipboard.writeText) {\n    return false;\n  }\n\n  return navigator.clipboard\n    .writeText(text)\n    .then(() => true)\n    .catch(() => {\n      console.error('Async: Error copying text to clipboard');\n      return false;\n    });\n}\n\ntype EventPathElement = Element | Document | Window;\n\nexport const generateEventPath = (eventTarget: EventTarget | null): EventPathElement[] => {\n  if (eventTarget === null || !window) {\n    return [];\n  }\n\n  const path: EventPathElement[] = [];\n  let element: Element | null = eventTarget as Element;\n\n  while (element) {\n    path.push(element);\n\n    // Can't copy dom-related objects\n    // eslint-disable-next-line no-param-reassign\n    element = element.parentElement;\n  }\n\n  if (path.indexOf(window) === -1 && path.indexOf(document) === -1) {\n    path.push(document);\n  }\n\n  if (path.indexOf(window) === -1) {\n    path.push(window);\n  }\n\n  return path;\n};\n","import React, { FC, useMemo } from 'react';\n\nimport IconButton from '../../../../compositions/IconButton/IconButton';\nimport IconNavLink from '../../../../compositions/IconNavLink/IconNavLink';\nimport { getTitle } from '../../helpers';\nimport { ListNftState } from '../ConnectedListNftWidget/ConnectedListNftWidget';\n\nimport './ListNftWidgetHeader.scss';\n\ninterface ListNftWidgetHeaderProps {\n  state?: ListNftState;\n  onBackButtonClick?: () => void;\n  className?: string;\n}\n\nconst ListNftWidgetHeader: FC<ListNftWidgetHeaderProps> = ({ state, onBackButtonClick, className = '' }) => {\n  const title = useMemo(() => getTitle(state), [state]);\n\n  return (\n    <div className={`list-nft-widget-header ${className}`}>\n      <h1 className=\"list-nft-widget-header__title\">{title}</h1>\n      { state === ListNftState.selectNft ? (\n        <IconButton\n          hideLabel\n          icon=\"close\"\n          text=\"Back\"\n          onClick={onBackButtonClick}\n          className=\"list-nft-widget-header__back-button\"\n        />\n      ) : (\n        <IconNavLink\n          hideLabel\n          icon=\"close\"\n          text=\"Back\"\n          to=\"/\"\n          className=\"list-nft-widget-header__back-button\"\n        />\n      )}\n    </div>\n  );\n};\n\nexport default ListNftWidgetHeader;\n","import { ListNftState } from '../subcomponents/ConnectedListNftWidget/ConnectedListNftWidget';\n\nexport const getTitle = (state?: ListNftState): string => {\n  if (state === ListNftState.review) {\n    return 'Review Listing';\n  }\n\n  if (state === ListNftState.selectNft) {\n    return 'Select NFT';\n  }\n\n  if (state === ListNftState.tokenAlreadyListedWarning) {\n    return 'Warning';\n  }\n\n  if (state === ListNftState.approve) {\n    return 'Approve in Wallet';\n  }\n\n  if (state === ListNftState.approving) {\n    return 'Transaction in Progress';\n  }\n\n  if (state === ListNftState.sign) {\n    return 'Sign in Wallet';\n  }\n\n  if (state === ListNftState.indexing) {\n    return 'Listing in Progress';\n  }\n\n  if (state === ListNftState.success) {\n    return 'Successfully listed';\n  }\n\n  if (state === ListNftState.failed) {\n    return 'Listing failed';\n  }\n\n  return 'List a token';\n};\n","import React, { FC, useEffect, useState } from 'react';\n\nimport { FullOrder, TokenInfo } from '@airswap/types';\nimport { Web3Provider } from '@ethersproject/providers';\n\nimport { expiryAmounts } from '../../../../constants/expiry';\nimport { isCollectionTokenInfo } from '../../../../entities/CollectionToken/CollectionTokenHelpers';\nimport { ExtendedFullOrder } from '../../../../entities/FullOrder/FullOrder';\nimport { SubmittedTransactionStatus } from '../../../../entities/SubmittedTransaction/SubmittedTransaction';\nimport { AppErrorType, isAppError } from '../../../../errors/appError';\nimport { toMaxAllowedDecimalsNumberString } from '../../../../helpers/input';\nimport useApproveNftTransaction from '../../../../hooks/useApproveNftTransaction';\nimport useCollectionImage from '../../../../hooks/useCollectionImage';\nimport useCollectionToken from '../../../../hooks/useCollectionToken';\nimport useIndexedOrderResult from '../../../../hooks/useIndexedOrderResult';\nimport useInsufficientAmount from '../../../../hooks/useInsufficientAmount';\nimport useNftTokenApproval from '../../../../hooks/useNftTokenApproval';\nimport { useAppDispatch, useAppSelector } from '../../../../redux/hooks';\nimport { createNftOrder } from '../../../../redux/stores/listNft/listNftActions';\nimport { approve as approveNft } from '../../../../redux/stores/orders/ordersActions';\nimport { addInfoToast, addUserRejectedToast } from '../../../../redux/stores/toasts/toastsActions';\nimport { ExpiryTimeUnit } from '../../../../types/ExpiryTimeUnit';\nimport { IndexedOrderResult } from '../../../../types/IndexedOrderResult';\nimport { NftTokenKind } from '../../../../types/NftTokenKind';\nimport useTokenAmountAndFee from '../../hooks/useTokenAmountAndFee';\nimport ListActionButtons from '../ListActionButtons/ListActionButtons';\nimport ListNftDetailContainer from '../ListNftDetailsContainer/ListNftDetailsContainer';\nimport ListNftWidgetHeader from '../ListNftWidgetHeader/ListNftWidgetHeader';\n\nimport '../../ListNftWidget.scss';\n\nexport enum ListNftState {\n  approve = 'approve',\n  approving = 'approving',\n  details = 'details',\n  failed = 'failed',\n  indexing = 'indexing',\n  review = 'review',\n  selectNft = 'selectNft',\n  sign = 'sign',\n  success = 'success',\n  tokenAlreadyListedWarning = 'tokenAlreadyListedWarning',\n}\n\ninterface ListNftWidgetProps {\n  account: string;\n  chainId: number;\n  currencyTokenInfo: TokenInfo;\n  defaultSelectedTokenId?: string;\n  library: Web3Provider\n  userOrders: ExtendedFullOrder[];\n  userTokens: string[];\n  className?: string;\n}\n\nconst ConnectedListNftWidget: FC<ListNftWidgetProps> = ({\n  account,\n  chainId,\n  currencyTokenInfo,\n  defaultSelectedTokenId,\n  library,\n  userOrders,\n  userTokens,\n  className = '',\n}) => {\n  const dispatch = useAppDispatch();\n  const { bannerImage } = useCollectionImage();\n\n  // Store data\n  const { error: ordersError } = useAppSelector(state => state.orders);\n  const { error: listNftError } = useAppSelector(state => state.listNft);\n  const { collectionToken, collectionName } = useAppSelector(state => state.config);\n  const { protocolFee, projectFee } = useAppSelector(state => state.metadata);\n\n  // User input states\n  const [widgetState, setWidgetState] = useState<ListNftState>(ListNftState.details);\n  const [selectedTokenId, setSelectedTokenId] = useState(defaultSelectedTokenId || userTokens[0]);\n  const [currencyTokenAmount, setCurrencyTokenAmount] = useState('0');\n  const [expiryTimeUnit, setExpiryTimeUnit] = useState(ExpiryTimeUnit.minutes);\n  const [expiryAmount, setExpiryAmount] = useState<number | undefined>(60);\n\n  // States derived from user input\n  const [collectionTokenInfo] = useCollectionToken(collectionToken, selectedTokenId);\n  const [currencyTokenAmountMinusProtocolFee, protocolFeeInCurrencyToken] = useTokenAmountAndFee(currencyTokenAmount);\n  const [approvalTransactionHash, setApprovalTransactionHash] = useState<string>();\n  const [order, setOrder] = useState<FullOrder>();\n  const hasInsufficientAmount = useInsufficientAmount(currencyTokenAmount);\n  const hasInsufficientExpiryAmount = !expiryAmount || expiryAmount < 0;\n  const hasCollectionTokenApproval = useNftTokenApproval(collectionTokenInfo, selectedTokenId);\n  const approveTransaction = useApproveNftTransaction(approvalTransactionHash);\n  const [indexedOrderResult, indexerError] = useIndexedOrderResult(order?.nonce);\n  const activeUserOrder = userOrders.find(userOrder => userOrder.signer.id === selectedTokenId);\n\n  const handleActionButtonClick = async () => {\n    if (widgetState === ListNftState.details && activeUserOrder) {\n      setWidgetState(ListNftState.tokenAlreadyListedWarning);\n\n      return;\n    }\n\n    if (widgetState === ListNftState.details || widgetState === ListNftState.tokenAlreadyListedWarning) {\n      setWidgetState(ListNftState.review);\n    }\n\n    if (widgetState === ListNftState.review && collectionTokenInfo && !hasCollectionTokenApproval) {\n      setWidgetState(ListNftState.approve);\n\n      dispatch(approveNft({\n        tokenInfo: collectionTokenInfo,\n        library,\n        chainId,\n        tokenId: selectedTokenId,\n      }))\n        .unwrap()\n        .then((transactionHash) => {\n          if (typeof transactionHash === 'string') {\n            setApprovalTransactionHash(transactionHash);\n          }\n          setWidgetState(ListNftState.approving);\n        })\n        .catch((e) => {\n          if (isAppError(e) && e.type === AppErrorType.rejectedByUser) {\n            dispatch(addUserRejectedToast());\n            setWidgetState(ListNftState.review);\n          } else {\n            setWidgetState(ListNftState.failed);\n          }\n        });\n    }\n\n    if (\n      widgetState === ListNftState.review\n      && isCollectionTokenInfo(collectionTokenInfo)\n      && hasCollectionTokenApproval\n      && currencyTokenAmountMinusProtocolFee\n    ) {\n      setWidgetState(ListNftState.sign);\n\n      const expiryDate = Date.now() + (expiryAmounts[expiryTimeUnit] * (expiryAmount || 1));\n      const kind = collectionTokenInfo.kind as unknown as NftTokenKind;\n\n      dispatch(createNftOrder({\n        expiry: Math.floor(expiryDate / 1000).toString(),\n        kind,\n        library,\n        signerWallet: account,\n        signerTokenInfo: collectionTokenInfo,\n        protocolFee,\n        senderTokenInfo: currencyTokenInfo,\n        senderAmount: currencyTokenAmountMinusProtocolFee,\n        tokenId: selectedTokenId,\n      })).unwrap()\n        .then((result) => {\n          setOrder(result);\n          setWidgetState(ListNftState.indexing);\n        })\n        .catch((e) => {\n          if (isAppError(e) && e.type === AppErrorType.rejectedByUser) {\n            dispatch(addUserRejectedToast());\n            setWidgetState(ListNftState.review);\n          } else {\n            setWidgetState(ListNftState.failed);\n          }\n        });\n    }\n  };\n\n  const handleBackButtonClick = () => {\n    setWidgetState(ListNftState.details);\n  };\n\n  const handleTradeTokenInputChange = (value: string) => {\n    setCurrencyTokenAmount(toMaxAllowedDecimalsNumberString(value, currencyTokenInfo.decimals));\n  };\n\n  const handleSelectNftButtonClick = () => {\n    setWidgetState(ListNftState.selectNft);\n  };\n\n  const handleSelectedNftChange = (tokenId: string) => {\n    setSelectedTokenId(tokenId);\n    setWidgetState(ListNftState.details);\n  };\n\n  useEffect(() => {\n    if (approveTransaction?.status === SubmittedTransactionStatus.processing) {\n      setWidgetState(ListNftState.approving);\n    }\n\n    if (approveTransaction?.status === SubmittedTransactionStatus.succeeded && isCollectionTokenInfo(collectionTokenInfo)) {\n      dispatch(addInfoToast('Approved', `Approved ${collectionTokenInfo.name} to be spend.`));\n      setWidgetState(ListNftState.review);\n    }\n  }, [approveTransaction]);\n\n  useEffect(() => {\n    if (!selectedTokenId) {\n      setSelectedTokenId(userTokens[0]);\n    }\n  }, [userTokens]);\n\n  useEffect(() => {\n    if (indexedOrderResult === IndexedOrderResult.success) {\n      setWidgetState(ListNftState.success);\n    }\n\n    if (indexedOrderResult === IndexedOrderResult.failed) {\n      setWidgetState(ListNftState.failed);\n    }\n  }, [indexedOrderResult]);\n\n  return (\n    <div className={`list-nft-widget ${className}`}>\n      <ListNftWidgetHeader\n        state={widgetState}\n        onBackButtonClick={handleBackButtonClick}\n        className=\"list-nft-widget__header\"\n      />\n\n      <ListNftDetailContainer\n        chainId={chainId}\n        collectionImage={bannerImage}\n        collectionName={collectionName}\n        collectionTokenInfo={collectionTokenInfo}\n        currencyTokenAmount={currencyTokenAmount}\n        currencyTokenAmountMinusProtocolFee={currencyTokenAmountMinusProtocolFee}\n        currencyTokenInfo={currencyTokenInfo}\n        error={listNftError || ordersError || indexerError}\n        expiryAmount={expiryAmount}\n        expiryTimeUnit={expiryTimeUnit}\n        fullOrder={order}\n        projectFee={projectFee}\n        protocolFee={protocolFee}\n        protocolFeeInCurrencyToken={protocolFeeInCurrencyToken}\n        selectedTokenId={selectedTokenId}\n        submittedApproval={approveTransaction}\n        userTokens={userTokens}\n        widgetState={widgetState}\n        onExpiryAmountChange={setExpiryAmount}\n        onExpiryTimeUnitChange={setExpiryTimeUnit}\n        onSelectedNftChange={handleSelectedNftChange}\n        onSelectNftButtonClick={handleSelectNftButtonClick}\n        onTradeTokenInputChange={handleTradeTokenInputChange}\n        className=\"list-nft-widget__trade-details-container\"\n      />\n\n      {!(\n        widgetState === ListNftState.sign\n        || widgetState === ListNftState.approve\n        || widgetState === ListNftState.approving\n        || widgetState === ListNftState.selectNft\n      ) && (\n        <ListActionButtons\n          hasNoCollectionTokenApproval={!hasCollectionTokenApproval}\n          hasInsufficientAmount={hasInsufficientAmount}\n          hasInsufficientExpiryAmount={hasInsufficientExpiryAmount}\n          account={account}\n          activeUserOrder={activeUserOrder}\n          currencyToken={currencyTokenInfo}\n          tokenId={selectedTokenId}\n          orderNonce={order?.nonce}\n          state={widgetState}\n          onActionButtonClick={handleActionButtonClick}\n          onBackButtonClick={handleBackButtonClick}\n          className=\"list-nft-widget__action-buttons\"\n        />\n      )}\n    </div>\n  );\n};\n\nexport default ConnectedListNftWidget;\n","import React, { FC } from 'react';\n\nimport LoadingSpinner from '../../../../components/LoadingSpinner/LoadingSpinner';\nimport ListNftWidgetHeader from '../ListNftWidgetHeader/ListNftWidgetHeader';\n\nimport '../../ListNftWidget.scss';\n\ninterface ListNftWidgetProps {\n  hasNoUserTokens: boolean;\n  isLoading: boolean;\n  className?: string;\n}\n\nconst DisconnectedListNftWidget: FC<ListNftWidgetProps> = ({\n  hasNoUserTokens = false,\n  isLoading = false,\n  className = '',\n}) => (\n  <div className={`list-nft-widget ${className}`}>\n    <ListNftWidgetHeader className=\"list-nft-widget__header\" />\n    {isLoading && <LoadingSpinner className=\"list-nft-widget__loading-spinner\" />}\n    {(!isLoading && hasNoUserTokens) && (\n      <div className=\"list-nft-widget__no-tokens\">\n        <div className=\"list-nft-widget__no-tokens-title\">No items found</div>\n        <div className=\"list-nft-widget__no-tokens-subtitle\">You have no NFTs to list</div>\n      </div>\n    )}\n  </div>\n);\n\nexport default DisconnectedListNftWidget;\n","import React, { FC, useEffect } from 'react';\n\nimport { useLocation, useSearchParams } from 'react-router-dom';\n\nimport useWeb3ReactLibrary from '../../hooks/useWeb3ReactLibrary';\nimport { useAppDispatch, useAppSelector } from '../../redux/hooks';\nimport { getActiveUserOrders } from '../../redux/stores/listNft/listNftApi';\nimport ConnectedListNftWidget from './subcomponents/ConnectedListNftWidget/ConnectedListNftWidget';\nimport DisconnectedListNftWidget from './subcomponents/DisconnectedListNftWidget/DisconnectedListNftWidget';\n\ninterface ListNftWidgetProps {\n  className?: string;\n}\n\nconst ListNftWidget: FC<ListNftWidgetProps> = ({ className = '' }) => {\n  const dispatch = useAppDispatch();\n  const [searchParams] = useSearchParams();\n  const { key } = useLocation();\n  const { library, chainId } = useWeb3ReactLibrary();\n\n  const { config } = useAppSelector(state => state);\n  const { account } = useAppSelector(state => state.web3);\n  const { isLoadingUserOrders, userOrders } = useAppSelector(state => state.listNft);\n  const { isInitialized: isBalancesInitialized, tokenIdsWithBalance: userTokenIdsWithBalance } = useAppSelector(state => state.balances);\n  const { isLoading: isMetadataLoading, currencyTokenInfo } = useAppSelector(state => state.metadata);\n  const { isInitialized: isIndexerInitialized } = useAppSelector(state => state.indexer);\n\n  const userTokens = Object.keys(userTokenIdsWithBalance);\n  const tokenId = searchParams.get('tokenId');\n  const isLoading = !isBalancesInitialized || isMetadataLoading || !isIndexerInitialized || isLoadingUserOrders;\n  const chainIdIsCorrect = !!chainId && chainId === config.chainId;\n\n  useEffect(() => {\n    if (isIndexerInitialized && !isLoadingUserOrders && account && library) {\n      dispatch(getActiveUserOrders({ signerWallet: account, provider: library }));\n    }\n  }, [account, isIndexerInitialized, library]);\n\n  if (\n    !isLoading\n    && account\n    && currencyTokenInfo\n    && library\n    && userTokens.length\n    && chainIdIsCorrect\n  ) {\n    return (\n      <ConnectedListNftWidget\n        key={key}\n        account={account}\n        chainId={chainId}\n        currencyTokenInfo={currencyTokenInfo}\n        library={library}\n        defaultSelectedTokenId={tokenId || undefined}\n        userOrders={userOrders}\n        userTokens={userTokens}\n        className={className}\n      />\n    );\n  }\n\n  return (\n    <DisconnectedListNftWidget\n      hasNoUserTokens={!userTokens.length}\n      isLoading={isLoading || !chainIdIsCorrect}\n      className={className}\n    />\n  );\n};\n\nexport default ListNftWidget;\n","import React, { FC } from 'react';\n\nimport Helmet from '../../compositions/Helmet/Helmet';\nimport Page from '../../compositions/Page/Page';\nimport ListNftWidget from '../../widgets/ListNftWidget/ListNftWidget';\n\nimport './ListNftPage.scss';\n\nconst ListNftPage: FC = () => (\n  <Page className=\"list-nft-page\">\n    <Helmet title=\"List a token\" />\n    <div className=\"list-nft-page__list-nft-widget-cover\">\n      <div className=\"list-nft-page__list-nft-widget-container\">\n        <ListNftWidget className=\"list-nft-page__list-nft-widget\" />\n      </div>\n    </div>\n  </Page>\n);\n\nexport default ListNftPage;\n","import {\n  DetailsHTMLAttributes,\n  FC,\n  PropsWithChildren,\n  ReactElement, useEffect, useRef,\n} from 'react';\n\nimport { useWindowSize } from 'react-use';\n\nimport Icon from '../Icon/Icon';\n\nimport './Details.scss';\n\ninterface DetailsProps extends DetailsHTMLAttributes<HTMLDetailsElement> {\n  summary: string;\n  className?: string;\n}\n\nconst Details: FC<PropsWithChildren<DetailsProps>> = ({\n  summary,\n  className = '',\n  children,\n  ...detailsProps\n}): ReactElement => {\n  const ref = useRef<HTMLDetailsElement>(null);\n  const { width } = useWindowSize();\n\n  useEffect(() => {\n    if (ref.current) {\n      ref.current.open = true;\n    }\n  }, [ref, width]);\n\n  return (\n    <details\n      {...detailsProps}\n      ref={ref}\n      className={`details ${className}`}\n    >\n      <summary className=\"details__summary\">\n        {summary}\n\n        <Icon name=\"chevron-down\" className=\"details__summary-icon\" />\n      </summary>\n\n      <div className=\"details__content\">\n        {children}\n      </div>\n    </details>\n  );\n};\n\nexport default Details;\n","// eslint-disable-next-line import/no-extraneous-dependencies\nimport {\n  differenceInDays,\n  differenceInHours,\n  differenceInMinutes,\n  differenceInMonths,\n  differenceInSeconds,\n  differenceInWeeks,\n  differenceInYears,\n} from 'date-fns';\n\nconst getDifferenceBetweenDatesInTimeUnits = (\n  date1: Date,\n  date2: Date,\n): {\n  seconds: number;\n  minutes: number;\n  hours: number;\n  days: number;\n  weeks: number;\n  months: number;\n  years: number;\n} => {\n  const seconds = differenceInSeconds(date1, date2);\n  const minutes = differenceInMinutes(date1, date2);\n  const hours = differenceInHours(date1, date2);\n  const days = differenceInDays(date1, date2);\n  const weeks = differenceInWeeks(date1, date2);\n  const months = differenceInMonths(date1, date2);\n  const years = differenceInYears(date1, date2);\n\n  return {\n    seconds,\n    minutes,\n    hours,\n    days,\n    weeks,\n    months,\n    years,\n  };\n};\n\nexport default getDifferenceBetweenDatesInTimeUnits;\n","import { useEffect, useLayoutEffect, useState } from 'react';\n\nimport truncateEthAddress from 'truncate-eth-address';\n\nimport { useAppDispatch, useAppSelector } from '../redux/hooks';\nimport { setEnsAddresses } from '../redux/stores/metadata/metadataSlice';\nimport useDefaultLibrary from './useDefaultProvider';\n\nconst useAddressOrEnsName = (address?: string, shouldTruncate = false) => {\n  const dispatch = useAppDispatch();\n  const library = useDefaultLibrary();\n\n  const { ensAddresses } = useAppSelector((state) => state.metadata);\n\n  const fallback = (shouldTruncate && address) ? truncateEthAddress(address) : address;\n  const [lookedUpAddress, setLookedUpAddress] = useState<string | null>();\n  const [result, setResult] = useState<string | undefined>(fallback);\n\n  useLayoutEffect(() => {\n    if (!address || !fallback) {\n      return;\n    }\n\n    if (address in ensAddresses) {\n      setResult(ensAddresses[address] || fallback);\n\n      return;\n    }\n\n    if (!library) {\n      setResult(fallback);\n\n      return;\n    }\n\n    library\n      .lookupAddress(address)\n      .then((name) => {\n        setLookedUpAddress(name);\n        setResult(name || fallback);\n      })\n      .catch(() => {\n        setResult(fallback);\n      });\n  }, [library, address, fallback]);\n\n  useEffect(() => {\n    if (address && lookedUpAddress !== undefined) {\n      dispatch(setEnsAddresses({\n        ...ensAddresses,\n        [address]: lookedUpAddress,\n      }));\n    }\n  }, [lookedUpAddress]);\n\n  return result;\n};\n\nexport default useAddressOrEnsName;\n","import React, { FC, ReactElement, useMemo } from 'react';\n\n// @ts-ignore\nimport { getReceiptUrl } from '@airswap/utils';\nimport { NavLink } from 'react-router-dom';\n\nimport Icon from '../../../../components/Icon/Icon';\nimport TransactionLink from '../../../../compositions/TransactionLink/TransactionLink';\nimport { NftTransactionLog } from '../../../../entities/NftTransactionLog/NftTransactionLog';\nimport getTimeBetweenTwoDates from '../../../../helpers/date/getTimeBetweenTwoDates';\nimport useAddressOrEnsName from '../../../../hooks/useAddressOrEnsName';\nimport { routes } from '../../../../routes';\n\nimport './NftDetailActivityItem.scss';\n\ninterface NftDetailActivityItemProps {\n  chainId: number;\n  log: NftTransactionLog;\n  className?: string;\n}\n\nconst NftDetailActivityItem: FC<NftDetailActivityItemProps> = ({\n  chainId,\n  log,\n  className = '',\n}): ReactElement => {\n  const readableAddressName = useAddressOrEnsName(log.recipient, true);\n  const link = routes.profile(log.recipient);\n  const transactionLink = useMemo(() => getReceiptUrl(chainId, log.transactionHash), [chainId, log.transactionHash]);\n  const timeAgo = useMemo(() => (\n        log.timestamp ? getTimeBetweenTwoDates(new Date(), new Date(log.timestamp * 1000)) : undefined\n  ), [log.timestamp]);\n\n  return (\n    <li className={`nft-detail-activity-item ${className}`}>\n      <Icon\n        name=\"swap-horizontal\"\n        className=\"nft-detail-activity-item__swap-icon\"\n      />\n\n      <div className=\"nft-detail-activity-item__label\">\n        Transferred to\n      </div>\n\n      <NavLink\n        to={link}\n        className=\"nft-detail-activity-item__link\"\n      >\n        {readableAddressName}\n      </NavLink>\n\n      {timeAgo && (\n        <div className=\"nft-detail-activity-item__time\">\n          {timeAgo}\n        </div>\n      )}\n\n      <TransactionLink\n        hideLabel\n        to={transactionLink}\n        className=\"nft-detail-activity-item__transaction-icon\"\n      />\n    </li>\n  );\n};\n\nexport default NftDetailActivityItem;\n","import getDifferenceBetweenDatesInTimeUnits from './getDifferenceBetweenDatesInTimeUnits';\n\nexport default function getTimeBetweenTwoDates(\n  date1: Date,\n  date2: Date,\n): string {\n  const formatter = new Intl.RelativeTimeFormat('en', {\n    numeric: 'always',\n    style: 'short',\n  });\n\n  // if date is past the current date;\n  if (date1 < date2) {\n    return formatter.format(0, 'seconds');\n  }\n\n  const {\n    minutes,\n    hours,\n    days,\n    months,\n    years,\n  } = getDifferenceBetweenDatesInTimeUnits(date1, date2);\n\n  if (years) {\n    return formatter.format(-years, 'years');\n  }\n\n  if (months) {\n    return formatter.format(-months, 'months');\n  }\n\n  if (days) {\n    return formatter.format(-days, 'days');\n  }\n\n  if (hours) {\n    return formatter.format(-hours, 'hours');\n  }\n\n  return formatter.format(-minutes, 'minutes');\n}\n","import { FC, ReactElement, useRef } from 'react';\n\nimport classNames from 'classnames';\n\nimport Icon from '../../components/Icon/Icon';\nimport LoadingSpinner from '../../components/LoadingSpinner/LoadingSpinner';\nimport { NftTransactionLog } from '../../entities/NftTransactionLog/NftTransactionLog';\nimport NftDetailActivityItem from './subcomponents/NftDetailActivityItem/NftDetailActivityItem';\n\nimport './ActivityListContainer.scss';\n\ninterface NftDetailActivityProps {\n  isEndOfList: boolean;\n  isLoading: boolean;\n  chainId: number;\n  logs: NftTransactionLog[];\n  onScrolledToBottom: () => void;\n  className?: string;\n}\n\nconst ActivityListContainer: FC<NftDetailActivityProps> = ({\n  isEndOfList,\n  isLoading,\n  chainId,\n  logs,\n  onScrolledToBottom,\n  className = '',\n}): ReactElement => {\n  const scrollRef = useRef<HTMLDivElement>(null);\n\n  const wrapperClassName = classNames('activity-list-container', {\n    'activity-list-container--has-scrollbar': logs.length > 4,\n    'activity-list-container--is-end-of-list': isEndOfList,\n  }, className);\n\n  const handleElementScroll = () => {\n    if (scrollRef.current && !isEndOfList) {\n      const { scrollTop, clientHeight, scrollHeight } = scrollRef.current;\n      if (scrollTop + clientHeight === scrollHeight) {\n        onScrolledToBottom();\n      }\n    }\n  };\n\n  if (isLoading && !logs.length) {\n    return (\n      <div className={wrapperClassName}>\n        <LoadingSpinner className=\"activity-list-container__loading-spinner\" />\n      </div>\n    );\n  }\n\n  if (!logs.length) {\n    return (\n      <div className={wrapperClassName}>\n        No activity found\n      </div>\n    );\n  }\n\n  return (\n    <div className={wrapperClassName}>\n      <div\n        ref={scrollRef}\n        onScroll={handleElementScroll}\n        className=\"activity-list-container__scroller\"\n      >\n        <ul className=\"activity-list-container__items-list\">\n          {logs.map(log => (\n            <NftDetailActivityItem\n              key={log.key}\n              chainId={chainId}\n              log={log}\n            />\n          ))}\n          <li className=\"activity-list-container__last-list-item\">\n            {isLoading ? (\n              <LoadingSpinner className=\"activity-list-container__loading-spinner\" />\n            ) : (\n              <div className=\"activity-list-container__end-of-list\">\n                {isEndOfList && <Icon name=\"airswap\" className=\"activity-list-container__airswap-icon\" />}\n              </div>\n            )}\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default ActivityListContainer;\n","import { TransactionReceipt } from '@ethersproject/providers';\nimport { NftSale } from 'alchemy-sdk';\n\nimport { NftTransactionLog } from './NftTransactionLog';\n\nexport const transformTransactionReceiptToNftTransactionLog = (\n  transactionReceipt: TransactionReceipt,\n  timestamp: number,\n  recipient: string,\n): NftTransactionLog => ({\n  key: `${transactionReceipt.transactionHash}:${transactionReceipt.from}:${transactionReceipt.to}`,\n  blockNumber: transactionReceipt.blockNumber,\n  to: transactionReceipt.to,\n  from: transactionReceipt.from,\n  recipient,\n  timestamp,\n  tokenId: '0',\n  transactionHash: transactionReceipt.transactionHash,\n});\n\nexport const transformNftSalesToNftTransactionLog = (nftSale: NftSale, currentBlockNumber: number): NftTransactionLog => {\n  const averageBlockTime = 12.07;\n  const blockDifference = currentBlockNumber - nftSale.blockNumber;\n  const timestamp = Math.floor(Date.now() / 1000) - (blockDifference * averageBlockTime);\n\n  return {\n    key: `${nftSale.transactionHash}:${nftSale.sellerAddress}:${nftSale.buyerAddress}`,\n    blockNumber: nftSale.blockNumber,\n    to: nftSale.contractAddress,\n    from: nftSale.sellerAddress,\n    recipient: nftSale.buyerAddress,\n    timestamp,\n    tokenId: nftSale.tokenId,\n    transactionHash: nftSale.transactionHash,\n  };\n};\n","import { TokenKinds } from '@airswap/constants';\nimport { BaseProvider } from '@ethersproject/providers';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\nimport { GetNftSalesResponse, SortingOrder } from 'alchemy-sdk';\n\nimport { NftTransactionLog } from '../../../entities/NftTransactionLog/NftTransactionLog';\nimport { transformNftSalesToNftTransactionLog } from '../../../entities/NftTransactionLog/NftTransactionLogTransformers';\nimport { AppThunkApiConfig } from '../../store';\nimport { getErc721Logs } from './nftActivityHelpers';\n\ninterface GetNftTransactionHistoryParams {\n  provider: BaseProvider;\n  tokenId: string;\n}\n\ninterface GetNftTransactionHistoryPayload {\n  logs: NftTransactionLog[];\n  pageKey?: string | null;\n}\n\nexport const getNftTransactionReceipts = createAsyncThunk<\nGetNftTransactionHistoryPayload,\nGetNftTransactionHistoryParams,\nAppThunkApiConfig\n>('nftActivity/getNftTransactionReceipts', async ({ provider, tokenId }, { getState }) => {\n  const { collectionToken, collectionTokenKind } = getState().config;\n  const { logs, pageKey } = getState().nftActivity;\n\n  if (collectionTokenKind === TokenKinds.ERC1155) {\n    const response: GetNftSalesResponse = await alchemy.nft.getNftSales({\n      contractAddress: collectionToken,\n      order: SortingOrder.DESCENDING,\n      pageKey,\n      tokenId: tokenId.toString(),\n      limit: 20,\n    });\n    const blockNumber = await provider.getBlockNumber();\n    const { nftSales } = response;\n\n    const newLogs = nftSales\n      .map(nftSale => transformNftSalesToNftTransactionLog(nftSale, blockNumber));\n\n    return {\n      logs: [...logs, ...newLogs],\n      pageKey: response.pageKey,\n    };\n  }\n\n  const newLogs = await getErc721Logs(\n    collectionToken,\n    provider,\n    tokenId,\n  );\n\n  return {\n    logs: newLogs,\n    pageKey: null,\n  };\n});\n","import { BaseProvider } from '@ethersproject/providers';\nimport erc721AbiContract from '@openzeppelin/contracts/build/contracts/ERC721.json';\nimport { ethers } from 'ethers';\n\nimport { NftTransactionLog } from '../../../entities/NftTransactionLog/NftTransactionLog';\nimport {\n  transformTransactionReceiptToNftTransactionLog,\n} from '../../../entities/NftTransactionLog/NftTransactionLogTransformers';\nimport { getUniqueArrayChildren } from '../../../helpers/array';\n\nexport const getErc721Logs = async (\n  collectionToken: string,\n  provider: BaseProvider,\n  tokenId: string,\n): Promise<NftTransactionLog[]> => {\n  const contract = new ethers.Contract(collectionToken, erc721AbiContract.abi, provider);\n  const transferFilter = contract.filters.Transfer(null, null, tokenId);\n\n  const events = await contract.queryFilter(transferFilter, 0);\n\n  const transactionReceipts = await Promise.all(events.map(event => event.getTransactionReceipt()));\n  const transactionReceiptBlocks = await Promise.all(transactionReceipts.map(receipt => provider.getBlock(receipt.blockNumber)));\n\n  const logs = transactionReceipts.map((transactionReceipt, index) => transformTransactionReceiptToNftTransactionLog(\n    transactionReceipt,\n    transactionReceiptBlocks[index].timestamp,\n    transactionReceipt.from,\n  )).sort((a, b) => (b.timestamp || 0) - (a.timestamp || 0));\n\n  return getUniqueArrayChildren(logs, 'transactionHash');\n};\n","import { createSlice } from '@reduxjs/toolkit';\n\nimport { NftTransactionLog } from '../../../entities/NftTransactionLog/NftTransactionLog';\nimport { getNftTransactionReceipts } from './nftActivityApi';\n\nexport interface NftActivityState {\n  isLoading: boolean;\n  logs: NftTransactionLog[];\n  pageKey?: string | null;\n}\n\nconst initialState: NftActivityState = {\n  isLoading: false,\n  logs: [],\n};\n\nexport const NftActivitySlice = createSlice({\n  name: 'nftActivityReducer',\n  initialState,\n  reducers: {\n    reset: (): NftActivityState => ({\n      ...initialState,\n    }),\n  },\n  extraReducers: (builder) => {\n    builder.addCase(getNftTransactionReceipts.pending, (state): NftActivityState => ({\n      ...state,\n      isLoading: true,\n    }));\n    builder.addCase(getNftTransactionReceipts.fulfilled, (state, action): NftActivityState => ({\n      ...state,\n      logs: action.payload.logs,\n      pageKey: action.payload.pageKey,\n      isLoading: false,\n    }));\n    builder.addCase(getNftTransactionReceipts.rejected, (state): NftActivityState => ({\n      ...state,\n      logs: [],\n      isLoading: false,\n    }));\n  },\n});\n\nexport const {\n  reset,\n} = NftActivitySlice.actions;\n\nexport default NftActivitySlice.reducer;\n","import {\n  FC,\n  ReactElement,\n  useEffect,\n  useState,\n} from 'react';\n\nimport ActivityListContainer from '../../containers/ActivityListContainer/ActivityListContainer';\nimport useDefaultLibrary from '../../hooks/useDefaultProvider';\nimport { useAppDispatch, useAppSelector } from '../../redux/hooks';\nimport { getNftTransactionReceipts } from '../../redux/stores/nftActivity/nftActivityApi';\nimport { reset } from '../../redux/stores/nftActivity/nftActivitySlice';\n\ninterface ConnectedActivityListProps {\n  isEnabled: boolean;\n  tokenId: string;\n}\n\nconst ConnectedActivityList: FC<ConnectedActivityListProps> = ({ isEnabled, tokenId }): ReactElement => {\n  const dispatch = useAppDispatch();\n  const library = useDefaultLibrary();\n  const { chainId } = useAppSelector(state => state.config);\n  const { isLoading, logs, pageKey } = useAppSelector(state => state.nftActivity);\n\n  const [page, setPage] = useState(1);\n  const isEndOfList = pageKey === null;\n\n  const handleScrolledToBottom = () => {\n    if (!isLoading && !isEndOfList) {\n      setPage(page + 1);\n    }\n  };\n\n  useEffect(() => {\n    if (library && isEnabled) {\n      dispatch(getNftTransactionReceipts({ provider: library, tokenId }));\n    }\n  }, [\n    library,\n    tokenId,\n    page,\n    isEnabled,\n  ]);\n\n  useEffect(() => {\n    dispatch(reset());\n  }, []);\n\n  return (\n    <ActivityListContainer\n      isEndOfList={isEndOfList}\n      isLoading={isLoading}\n      chainId={chainId}\n      logs={logs}\n      onScrolledToBottom={handleScrolledToBottom}\n    />\n  );\n};\n\nexport default ConnectedActivityList;\n","import {\n  DialogHTMLAttributes,\n  forwardRef,\n  ForwardRefExoticComponent,\n  ReactElement,\n  Ref,\n  RefAttributes, useEffect, useRef,\n} from 'react';\n\nimport { generateEventPath } from '../../helpers/browser';\nimport IconButton from '../IconButton/IconButton';\n\nimport './Dialog.scss';\n\ninterface DialogProps extends DialogHTMLAttributes<HTMLDialogElement>, RefAttributes<HTMLDialogElement> {\n  onClose: () => void;\n  className?: string;\n}\n\nconst Dialog: ForwardRefExoticComponent<DialogProps> = forwardRef(({\n  onClose,\n  className = '',\n  children,\n  ...dialogProps\n}, ref: Ref<HTMLDialogElement>): ReactElement => {\n  const contentRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    window.onclick = (event: MouseEvent): void => {\n      const eventPath = generateEventPath(event.target);\n\n      if (contentRef.current && !eventPath.includes(contentRef.current)) {\n        onClose();\n      }\n    };\n  }, []);\n\n  return (\n    <dialog\n      {...dialogProps}\n      ref={ref}\n      onClose={onClose}\n      className={`dialog ${className}`}\n    >\n      <div className=\"dialog__content\" ref={contentRef}>\n        <IconButton\n          hideLabel\n          icon=\"close\"\n          text=\"close\"\n          onClick={onClose}\n          className=\"dialog__close-button\"\n        />\n\n        {children}\n      </div>\n    </dialog>\n  );\n});\n\nexport default Dialog;\n","import { FC, ReactElement } from 'react';\n\nimport classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nimport { Address } from '../../../../entities/Address/Address';\nimport { routes } from '../../../../routes';\n\nimport './OwnersListItem.scss';\n\ninterface OwnerListItemProps {\n  owner: Address;\n  className?: string;\n}\n\nconst OwnersListItem: FC<OwnerListItemProps> = ({ owner, className = '' }): ReactElement => {\n  const listItemClassName = classNames('owners-list-item', {\n    'owners-list-item--has-no-ens': !owner.ens,\n  }, className);\n\n  return (\n    <li className={listItemClassName}>\n      <NavLink\n        to={routes.profile(owner.address)}\n        className=\"owners-list-item__nav-link\"\n      >\n        <div className=\"owners-list-item__ens-address\">{owner.ens || 'Unnamed'}</div>\n        <div className=\"owners-list-item__address\">{owner.address}</div>\n      </NavLink>\n    </li>\n  );\n};\n\nexport default OwnersListItem;\n","import {\n  FC,\n  ReactElement,\n  useEffect,\n  useRef,\n} from 'react';\n\nimport Icon from '../../components/Icon/Icon';\nimport LoadingSpinner from '../../components/LoadingSpinner/LoadingSpinner';\nimport { Address } from '../../entities/Address/Address';\nimport OwnersListItem from './subcomponents/OwnersListItem/OwnersListItem';\n\nimport './OwnersContainer.scss';\n\ninterface OwnersContainerProps {\n  isEndOfList: boolean;\n  isLoading: boolean;\n  owners: Address[];\n  onScrolledToBottom: () => void;\n  className?: string;\n}\n\nconst OwnersContainer: FC<OwnersContainerProps> = ({\n  isEndOfList,\n  isLoading,\n  owners,\n  onScrolledToBottom,\n  className = '',\n}): ReactElement => {\n  const listRef = useRef<HTMLUListElement>(null);\n\n  const handleListScroll = () => {\n    if (listRef.current && !isEndOfList) {\n      const { scrollTop, clientHeight, scrollHeight } = listRef.current;\n      if (scrollTop + clientHeight === scrollHeight) {\n        onScrolledToBottom();\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (isLoading && listRef.current) {\n      listRef.current.scrollTo(0, listRef.current.scrollHeight);\n    }\n  }, [isLoading]);\n\n  if (isLoading && !owners.length) {\n    return (\n      <div className={`owners-container ${className}`}>\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  return (\n    <div className={`owners-container ${className}`}>\n      <ul\n        ref={listRef}\n        onScroll={handleListScroll}\n        className=\"owners-container__list\"\n      >\n        {owners.map(owner => <OwnersListItem key={owner.address} owner={owner} />)}\n        <li>\n          {isLoading ? (\n            <LoadingSpinner className=\"owners-container__loading-spinner\" />\n          ) : (\n            <div className=\"owners-container__end-of-list\">\n              {isEndOfList && <Icon name=\"airswap\" className=\"owners-container__airswap-icon\" />}\n            </div>\n          )}\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default OwnersContainer;\n","import { Address, EnsAddressesMap } from './Address';\n\nexport const transformToAddress = (\n  address: string,\n  ensAddress: string | null = null,\n): Address => ({\n  address,\n  ...(ensAddress && { ens: ensAddress }),\n});\n\nexport const transformAddressesToEnsAddressesMap = (addresses: Address[]): EnsAddressesMap => {\n  const ensAddresses: EnsAddressesMap = {};\n\n  addresses.forEach((address) => {\n    ensAddresses[address.address] = address.ens || null;\n  });\n\n  return ensAddresses;\n};\n","import { BaseProvider } from '@ethersproject/providers';\nimport { ethers } from 'ethers';\n\nconst address = '0x3671aE578E63FdF66ad4F3E12CC0c0d71Ac7510C';\n\nconst abi: ethers.ContractInterface = [{\n  inputs: [{ internalType: 'contract ENS', name: '_ens', type: 'address' }],\n  stateMutability: 'nonpayable',\n  type: 'constructor',\n}, {\n  inputs: [{ internalType: 'address[]', name: 'addresses', type: 'address[]' }],\n  name: 'getNames',\n  outputs: [{ internalType: 'string[]', name: 'r', type: 'string[]' }],\n  stateMutability: 'view',\n  type: 'function',\n}];\n\nexport const getEnsNames = async (addresses: string[], provider: BaseProvider): Promise<(string | null)[]> => {\n  if (provider.network.chainId !== 1) {\n    return [];\n  }\n\n  const contract = new ethers.Contract(address, abi, provider);\n\n  const responses: string[] = await contract.getNames(addresses);\n\n  return responses.map(response => (response === '' ? null : response));\n};\n\n","import { BaseProvider } from '@ethersproject/providers';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\nimport { Address, EnsAddressesMap } from '../../../entities/Address/Address';\nimport { transformAddressesToEnsAddressesMap, transformToAddress } from '../../../entities/Address/AddressTransformers';\nimport { getEnsNames } from '../../../helpers/ens';\nimport { AppThunkApiConfig } from '../../store';\nimport { setEnsAddresses } from '../metadata/metadataSlice';\n\ninterface GetErc1155OwnerAddressesParams {\n  provider: BaseProvider;\n  tokenId: string;\n}\n\ninterface GetErc1155OwnerAddressesPayload {\n  owners: Address[];\n  pageKey: string;\n}\n\nconst getEnsNamesForAddresses = async (provider: BaseProvider, addresses: string[], ensAddresses: EnsAddressesMap): Promise<(string | null)[]> => {\n  if (addresses.some(address => !(address in ensAddresses))) {\n    return getEnsNames(addresses, provider);\n  }\n\n  return addresses.map(address => ensAddresses[address]);\n};\n\nexport const getErc1155OwnerAddresses = createAsyncThunk<\nGetErc1155OwnerAddressesPayload,\nGetErc1155OwnerAddressesParams,\nAppThunkApiConfig\n>('owners/getErc1155OwnerAddresses', async ({ provider, tokenId }, { getState, dispatch }) => {\n  const { collectionToken } = getState().config;\n  const { owners, pageKey } = getState().owners;\n  const { ensAddresses } = getState().metadata;\n  const sales = await alchemy.nft.getOwnersForNft(collectionToken, tokenId, { pageSize: 20, pageKey });\n\n  const newOwners: string[] = sales.owners;\n\n  const responses = await getEnsNamesForAddresses(provider, newOwners, ensAddresses);\n\n  const combinedOwners = [\n    ...owners,\n    ...newOwners.map((address, index) => transformToAddress(\n      address,\n      responses[index],\n    )),\n  ];\n\n  const newEnsAddresses = transformAddressesToEnsAddressesMap(combinedOwners);\n\n  dispatch(setEnsAddresses({\n    ...ensAddresses,\n    ...newEnsAddresses,\n  }));\n\n  return {\n    owners: combinedOwners,\n    pageKey: sales.pageKey,\n  };\n});\n","import { createSlice } from '@reduxjs/toolkit';\n\nimport { Address } from '../../../entities/Address/Address';\nimport { getErc1155OwnerAddresses } from './ownersApi';\n\nexport interface NftDetailState {\n  isLoading: boolean;\n  owners: Address[];\n  pageKey?: string | null;\n}\n\nconst initialState: NftDetailState = {\n  isLoading: false,\n  owners: [],\n};\n\nexport const ownersSlice = createSlice({\n  name: 'owners',\n  initialState,\n  reducers: {\n    reset: (): NftDetailState => ({\n      ...initialState,\n    }),\n  },\n  extraReducers: (builder) => {\n    builder.addCase(getErc1155OwnerAddresses.pending, (state): NftDetailState => ({\n      ...state,\n      isLoading: true,\n    }));\n    builder.addCase(getErc1155OwnerAddresses.fulfilled, (state, action): NftDetailState => ({\n      ...state,\n      isLoading: false,\n      owners: action.payload.owners,\n      pageKey: action.payload.pageKey,\n    }));\n    builder.addCase(getErc1155OwnerAddresses.rejected, (state): NftDetailState => ({\n      ...state,\n      isLoading: false,\n    }));\n  },\n});\n\nexport const {\n  reset,\n} = ownersSlice.actions;\n\nexport default ownersSlice.reducer;\n","import {\n  FC,\n  ReactElement,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\n\nimport { BaseProvider } from '@ethersproject/providers';\n\nimport Dialog from '../../compositions/Dialog/Dialog';\nimport OwnersContainer from '../../containers/OwnersContainer/OwnersContainer';\nimport { useAppDispatch, useAppSelector } from '../../redux/hooks';\nimport { getErc1155OwnerAddresses } from '../../redux/stores/owners/ownersApi';\nimport { reset } from '../../redux/stores/owners/ownersSlice';\n\ninterface ConnectedOwnersListProps {\n  library: BaseProvider;\n  tokenId: string;\n  onClose: () => void;\n}\n\nconst ConnectedOwnersList: FC<ConnectedOwnersListProps> = ({ library, tokenId, onClose }): ReactElement => {\n  const dispatch = useAppDispatch();\n\n  const { isLoading, owners, pageKey } = useAppSelector((state) => state.owners);\n\n  const dialogRef = useRef<HTMLDialogElement>(null);\n  const [page, setPage] = useState(1);\n  const isEndOfList = pageKey === null;\n\n  const handleScrolledToBottom = () => {\n    if (!isLoading && !isEndOfList) {\n      setPage(page + 1);\n    }\n  };\n\n  useEffect(() => {\n    dispatch(reset());\n  }, []);\n\n  useEffect(() => {\n    dispatch(getErc1155OwnerAddresses({ tokenId, provider: library }));\n  }, [page, tokenId]);\n\n  useEffect(() => {\n    if (dialogRef.current) {\n      dialogRef.current.showModal();\n    }\n  }, [dialogRef]);\n\n  return (\n    <Dialog\n      ref={dialogRef}\n      onClose={onClose}\n    >\n      <OwnersContainer\n        isEndOfList={isEndOfList}\n        isLoading={isLoading}\n        owners={owners}\n        onScrolledToBottom={handleScrolledToBottom}\n      />\n    </Dialog>\n  );\n};\n\nexport default ConnectedOwnersList;\n","import { useLayoutEffect, useState } from 'react';\n\nimport { CollectionTokenInfo } from '@airswap/types';\n\nimport { getCollectionTokenOwners } from '../entities/CollectionToken/CollectionTokenHelpers';\nimport { useAppSelector } from '../redux/hooks';\nimport useDefaultProvider from './useDefaultProvider';\n\nconst useNftTokenOwners = (token: CollectionTokenInfo): [string | undefined, number, boolean] => {\n  const { chainId } = useAppSelector((state) => state.config);\n  const library = useDefaultProvider(chainId);\n\n  const [owner, setOwner] = useState<string>();\n  const [ownersLength, setOwnersLength] = useState<number>(0);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useLayoutEffect(() => {\n    if (!library) {\n      return;\n    }\n\n    const callGetCollectionTokenOwner = async () => {\n      const result = await getCollectionTokenOwners(library, token);\n      setIsLoading(false);\n      setOwner(result?.length ? result[0] : undefined);\n      setOwnersLength(result?.length || 0);\n    };\n\n    callGetCollectionTokenOwner();\n  }, [library, token]);\n\n  return [owner, ownersLength, isLoading];\n};\n\nexport default useNftTokenOwners;\n","import { FullOrder } from '@airswap/types';\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nimport { NftTransactionLog } from '../../../entities/NftTransactionLog/NftTransactionLog';\nimport { getNftOrderByTokenId } from './nftDetailApi';\n\nexport interface NftDetailState {\n  isLoading: boolean;\n  isOrderNotFound: boolean;\n  order?: FullOrder;\n  tokenId?: string;\n  transactionLogs: NftTransactionLog[];\n}\n\nconst initialState: NftDetailState = {\n  isLoading: false,\n  isOrderNotFound: false,\n  transactionLogs: [],\n};\n\nexport const nftDetailSlice = createSlice({\n  name: 'collection',\n  initialState,\n  reducers: {\n    reset: (): NftDetailState => ({\n      ...initialState,\n    }),\n    setTokenId: (state, action: PayloadAction<string>): NftDetailState => ({\n      ...state,\n      tokenId: action.payload,\n    }),\n  },\n  extraReducers: (builder) => {\n    builder.addCase(getNftOrderByTokenId.pending, (state): NftDetailState => ({\n      ...state,\n      isLoading: true,\n      isOrderNotFound: false,\n    }));\n    builder.addCase(getNftOrderByTokenId.fulfilled, (state, action): NftDetailState => ({\n      ...state,\n      isLoading: false,\n      isOrderNotFound: !action.payload,\n      order: action.payload,\n    }));\n    builder.addCase(getNftOrderByTokenId.rejected, (state): NftDetailState => ({\n      ...state,\n      isLoading: false,\n    }));\n  },\n});\n\nexport const {\n  reset,\n  setTokenId,\n} = nftDetailSlice.actions;\n\nexport default nftDetailSlice.reducer;\n","import { FullOrder } from '@airswap/types';\nimport { BaseProvider } from '@ethersproject/providers';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\nimport { getOrdersFromIndexers } from '../../../helpers/indexers';\nimport { AppThunkApiConfig } from '../../store';\nimport { addGetOrderFailedToast } from '../toasts/toastsActions';\nimport { setTokenId } from './nftDetailSlice';\n\ninterface GetNftOrderByTokenIdParams {\n  tokenId: string;\n  provider: BaseProvider;\n}\n\nexport const getNftOrderByTokenId = createAsyncThunk<\nFullOrder | undefined,\nGetNftOrderByTokenIdParams,\nAppThunkApiConfig\n>('nftDetail/getNftOrderByTokenId', async ({ tokenId, provider }, { dispatch, getState }) => {\n  const { indexer } = getState();\n\n  dispatch(setTokenId(tokenId));\n\n  try {\n    const orders = await getOrdersFromIndexers(\n      {\n        signerId: tokenId,\n        offset: 0,\n        limit: 999,\n      },\n      indexer.urls,\n      provider,\n    );\n\n    return orders[0];\n  } catch {\n    dispatch(addGetOrderFailedToast());\n\n    return undefined;\n  }\n});\n","import React, { FC } from 'react';\n\nimport './NftDetailAttributeCard.scss';\n\ninterface NftDetailAttributeCardProps {\n  label: string;\n  value: string | number;\n  className?: string;\n}\n\nconst NftDetailAttributeCard: FC<NftDetailAttributeCardProps> = ({\n  label,\n  value,\n  className = '',\n}) => (\n  <div key={label} className={`nft-detail-attribute-card ${className}`}>\n    <p className=\"nft-detail-attribute-card__label\">{label}</p>\n    <p className=\"nft-detail-attribute-card__value\">{value}</p>\n  </div>\n);\n\nexport default NftDetailAttributeCard;\n","import React, { FC } from 'react';\n\nimport { CollectionTokenAttribute } from '@airswap/types';\n\nimport NftDetailAttributeCard from '../NftDetailAttributeCard/NftDetailAttributeCard';\n\nimport './NftDetailAttributes.scss';\n\ninterface NftDetailAttributesProps {\n  attrs?: Array<CollectionTokenAttribute>;\n  className?: string;\n}\n\nconst NftDetailAttributes: FC<NftDetailAttributesProps> = ({ attrs, className = '' }) => (\n  <div className={`nft-detail-attributes ${className}`}>\n    {attrs?.map((attribute: CollectionTokenAttribute) => (\n      <NftDetailAttributeCard\n        className=\"nft-detail-attributes__card\"\n        key={attribute.label}\n        label={attribute.label}\n        value={attribute.value}\n      />\n    ))}\n  </div>\n);\n\nexport default NftDetailAttributes;\n","import React, { FC } from 'react';\n\nimport { chainNames } from '@airswap/constants';\nimport { getAccountUrl } from '@airswap/utils';\nimport truncateEthAddress from 'truncate-eth-address';\n\nimport './NftDetailList.scss';\n\ninterface NftDetailListProps {\n  address: string;\n  id: string;\n  chainId: number;\n  standard: string;\n  fee: number;\n  className?: string;\n}\n\nconst NftDetailList: FC<NftDetailListProps> = ({\n  address,\n  id,\n  chainId,\n  standard,\n  fee,\n  className = '',\n}) => (\n  <div className={`nft-detail-list ${className}`}>\n    <div className=\"nft-detail-list__item\">\n      <p className=\"nft-detail-list__item-heading\">Contract Address:</p>\n      <a\n        href={getAccountUrl(chainId, address)}\n        rel=\"noreferrer\"\n        target=\"_blank\"\n        className=\"nft-detail-list__item-value nft-detail-list__item-link\"\n      >\n        <div className=\"nft-detail-list__item-link-address\">\n          {address}\n        </div>\n        <div className=\"nft-detail-list__item-link-truncated-address\">\n          {truncateEthAddress(address)}\n        </div>\n      </a>\n    </div>\n    <div className=\"nft-detail-list__item\">\n      <p className=\"nft-detail-list__item-heading\">Token ID:</p>\n      <p className=\"nft-detail-list__item-value\">{`#${id}`}</p>\n    </div>\n    <div className=\"nft-detail-list__item\">\n      <p className=\"nft-detail-list__item-heading\">Blockchain:</p>\n      <p className=\"nft-detail-list__item-value\">{chainNames[chainId] || chainId}</p>\n    </div>\n    <div className=\"nft-detail-list__item\">\n      <p className=\"nft-detail-list__item-heading\">Token Standard:</p>\n      <p className=\"nft-detail-list__item-value\">{standard}</p>\n    </div>\n    <div className=\"nft-detail-list__item\">\n      <p className=\"nft-detail-list__item-heading\">Trading Fee:</p>\n      <p className=\"nft-detail-list__item-value\">{`${fee}% (Paid by seller)`}</p>\n    </div>\n  </div>\n);\nexport default NftDetailList;\n","import React, { FC } from 'react';\n\nimport { Link } from 'react-router-dom';\n\nimport Button from '../../../../components/Button/Button';\n\nimport './NftDetailMainInfo.scss';\n\nexport interface INftDetailMainInfoProps {\n  accountRoute?: string;\n  description?: string;\n  title?: string;\n  owner?: string;\n  ownersLength?: number;\n  onOwnersButtonClick: () => void;\n  className?: string;\n}\n\nconst NftDetailMainInfo: FC<INftDetailMainInfoProps> = ({\n  accountRoute,\n  description,\n  title,\n  owner,\n  ownersLength = 0,\n  onOwnersButtonClick,\n  className = '',\n}) => (\n  <div className={`nft-detail-main-info ${className}`}>\n    <h1 className=\"nft-detail-main-info__title\">{title}</h1>\n\n    <span className=\"nft-detail-main-info__owner\">\n      <p className=\"nft-detail-main-info__owner-label\">Owned by&nbsp;</p>\n\n      {!!(owner && ownersLength === 1 && accountRoute) && (\n        <Link\n          to={accountRoute}\n          className=\"nft-detail-main-info__owner-name\"\n        >\n          {owner}\n        </Link>\n      )}\n\n      {ownersLength > 1 && (\n        <Button\n          className=\"nft-detail-main-info__owners-button\"\n          onClick={onOwnersButtonClick}\n        >\n          {`${ownersLength > 100 ? '100+' : ownersLength} addresses`}\n        </Button>\n      )}\n    </span>\n\n    {description && (\n      <div className=\"nft-detail-main-info__description\">\n        <h2 className=\"nft-detail-main-info__sub-title\">Description</h2>\n        <p className=\"nft-detail-main-info__paragraph\">{description}</p>\n      </div>\n    )}\n\n  </div>\n);\n\nexport default NftDetailMainInfo;\n","import React, { CSSProperties, FC } from 'react';\n\nimport LoadingSpinner from '../../../../components/LoadingSpinner/LoadingSpinner';\n\nimport './NftDetailPortrait.scss';\n\ninterface CollectionPortraitProps {\n  backgroundImage: string;\n  id: string;\n  className?: string;\n}\n\nconst NftDetailPortrait: FC<CollectionPortraitProps> = ({\n  backgroundImage,\n  id,\n  className = '',\n}) => {\n  const cssProperties: CSSProperties = {\n    viewTransitionName: `nft-image-${id}`,\n    backgroundImage: `url(\"${backgroundImage}\")`,\n  };\n\n  return (\n    <div className={`nft-detail-portrait ${className}`}>\n      <LoadingSpinner className=\"nft-detail-portrait__loading-spinner\" />\n      <div\n        style={cssProperties}\n        className=\"nft-detail-portrait__image\"\n      />\n    </div>\n  );\n};\n\nexport default NftDetailPortrait;\n","import React, { useMemo } from 'react';\n\nimport { NavLink } from 'react-router-dom';\n\nimport Button from '../../../../components/Button/Button';\n\nimport './NftDetailProceedButton.scss';\n\ninterface NftDetailProceedButtonProps {\n  accountIsOwner: boolean;\n  isExpired: boolean;\n  listRoute?: string;\n  orderRoute?: string;\n  className?: string;\n}\n\nconst NftDetailProceedButton: React.FC<NftDetailProceedButtonProps> = ({\n  accountIsOwner,\n  isExpired,\n  listRoute,\n  orderRoute,\n  className = '',\n}) => {\n  const navLink = useMemo(() => {\n    if (isExpired) {\n      return (\n        <Button\n          disabled\n          className=\"nft-detail-proceed-button__link\"\n        >\n          Order expired\n        </Button>\n      );\n    }\n\n    if (listRoute && accountIsOwner) {\n      return (\n        <NavLink\n          to={listRoute}\n          className=\"nft-detail-proceed-button__link\"\n        >\n          List token\n        </NavLink>\n      );\n    }\n\n    if (orderRoute) {\n      return (\n        <NavLink\n          to={orderRoute}\n          className=\"nft-detail-proceed-button__link\"\n        >\n          {accountIsOwner ? 'Cancel listing' : 'Proceed to buy'}\n        </NavLink>\n      );\n    }\n\n    return null;\n  }, [\n    accountIsOwner,\n    isExpired,\n    listRoute,\n    orderRoute,\n  ]);\n\n  return (\n    <div className={`nft-detail-proceed-button ${className}`}>\n      {navLink}\n    </div>\n  );\n};\n\nexport default NftDetailProceedButton;\n","import React, { FC, useMemo } from 'react';\n\nimport { FullOrder, TokenInfo } from '@airswap/types';\n\nimport LoadingSpinner from '../../../../components/LoadingSpinner/LoadingSpinner';\nimport {\n  getFullOrderExpiryDate,\n  getFullOrderReadableSenderAmountPlusTotalFees, isFullOrderExpired,\n} from '../../../../entities/FullOrder/FullOrderHelpers';\nimport { getExpiryTranslation } from '../../../../helpers/date/getExpiryTranslation';\n\nimport './NftDetailSaleInfo.scss';\n\ninterface NftDetailSaleInfoProps {\n  isLoading?: boolean;\n  tokenInfo: TokenInfo;\n  order?: FullOrder;\n  className?: string;\n}\n\nconst NftDetailSaleInfo: FC<NftDetailSaleInfoProps> = ({\n  isLoading,\n  tokenInfo,\n  order,\n  className = '',\n}) => {\n  const price = useMemo(() => (order ? getFullOrderReadableSenderAmountPlusTotalFees(order, tokenInfo) : undefined), [order]);\n  const expiry = useMemo(() => {\n    if (!order || isFullOrderExpired(order)) {\n      return undefined;\n    }\n\n    return getExpiryTranslation(getFullOrderExpiryDate(order), new Date());\n  }, [order]);\n  const { symbol } = tokenInfo;\n\n  if (isLoading) {\n    return (\n      <div className={`nft-detail-sale-info ${className}`}>\n        <LoadingSpinner className=\"nft-detail-sale-info__loading-spinner\" />\n      </div>\n    );\n  }\n\n  if (!order) {\n    return null;\n  }\n\n  return (\n    <div className={`nft-detail-sale-info ${className}`}>\n      <h3 className=\"nft-detail-sale-info__price\">\n        {price ? `${price} ${symbol}` : null}\n      </h3>\n      {expiry && (\n        <h4 className=\"nft-detail-sale-info__expiry\">\n          Expires in\n          <span className=\"nft-detail-sale-info__expiry-date\">{expiry}</span>\n        </h4>\n      )}\n    </div>\n  );\n};\n\nexport default NftDetailSaleInfo;\n","import { compareAsc, formatDuration } from 'date-fns';\n\nimport getDifferenceBetweenDatesInTimeUnits from './getDifferenceBetweenDatesInTimeUnits';\n\ntype formatDistanceLocaleKey = 'xMinutes' | 'xHours' | 'xDays' | 'xWeeks';\n\n// Get expiry time in short formats, ie:\n// 20MIN\n// 1H 59MIN\n// 23H\n// 4D 23H\n// 3W 6D\n\nexport const getExpiryTranslation = (\n  expiry: Date,\n  now: Date,\n): string | undefined => {\n  if (compareAsc(expiry, now) === -1) {\n    return undefined;\n  }\n\n  const {\n    minutes,\n    hours,\n    days,\n    weeks,\n  } = getDifferenceBetweenDatesInTimeUnits(\n    expiry,\n    now,\n  );\n\n  const formatDistanceLocale: Record<formatDistanceLocaleKey, string> = {\n    xMinutes: '{{count}} MIN',\n    xHours: '{{count}}H',\n    xDays: '{{count}}D',\n    xWeeks: '{{count}}W',\n  };\n  const locale: Locale = {\n    formatDistance: (token: formatDistanceLocaleKey, count: number): string => formatDistanceLocale[token].replace('{{count}}', count.toString()),\n  };\n\n  const format: string[] = [\n    ...(weeks ? ['weeks'] : []),\n    ...(days ? ['days'] : []),\n    ...(hours ? ['hours'] : []),\n    ...(minutes ? ['minutes'] : []),\n    // We only need max two time units\n  ].slice(0, 2);\n\n  if (format.length) {\n    const daysRemainder = days - weeks * 7;\n    const hoursRemainder = hours - days * 24;\n    const minutesRemainder = minutes - hours * 60;\n    return formatDuration(\n      {\n        weeks,\n        days: daysRemainder,\n        hours: hoursRemainder,\n        minutes: minutesRemainder,\n      },\n      { format, locale },\n    );\n  }\n\n  // If all is 0 then it probably means less than one minute is left.\n  return formatDuration({ minutes: 1 }, { locale });\n};\n","import React, {\n  FC,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\n\nimport { CollectionTokenInfo, TokenInfo } from '@airswap/types';\nimport { BaseProvider } from '@ethersproject/providers';\nimport classNames from 'classnames';\nimport { useToggle } from 'react-use';\n\nimport Details from '../../../../components/Details/Details';\nimport ConnectedActivityList from '../../../../connectors/ConnectedActivityList/ConnectedActivityList';\nimport ConnectedOwnersList from '../../../../connectors/ConnectedOwnersList/ConnectedOwnersList';\nimport { isFullOrderExpired } from '../../../../entities/FullOrder/FullOrderHelpers';\nimport useAddressOrEnsName from '../../../../hooks/useAddressOrEnsName';\nimport useCollectionImage from '../../../../hooks/useCollectionImage';\nimport useNftTokenOwners from '../../../../hooks/useNftTokenOwners';\nimport { useAppDispatch, useAppSelector } from '../../../../redux/hooks';\nimport { getNftOrderByTokenId } from '../../../../redux/stores/nftDetail/nftDetailApi';\nimport { reset } from '../../../../redux/stores/nftDetail/nftDetailSlice';\nimport { routes } from '../../../../routes';\nimport NftDetailAttributes from '../NftDetailAttributes/NftDetailAttributes';\nimport NftDetailList from '../NftDetailList/NftDetailList';\nimport NftDetailMainInfo from '../NftDetailMainInfo/NftDetailMainInfo';\nimport NftDetailPortrait from '../NftDetailPortrait/NftDetailPortrait';\nimport NftDetailProceedButton from '../NftDetailProceedButton/NftDetailProceedButton';\nimport NftDetailSaleInfo from '../NftDetailSaleInfo/NftDetailSaleInfo';\n\ninterface ConnectedNftDetailWidgetProps {\n  accountIsOwner: boolean;\n  collectionTokenInfo: CollectionTokenInfo;\n  currencyTokenInfo: TokenInfo;\n  library: BaseProvider;\n  className?: string;\n}\n\nconst ConnectedNftDetailWidget: FC<ConnectedNftDetailWidgetProps> = ({\n  accountIsOwner,\n  collectionTokenInfo,\n  currencyTokenInfo,\n  library,\n  className = '',\n}) => {\n  const dispatch = useAppDispatch();\n  const activityListRef = useRef<HTMLDivElement>(null);\n  const { bannerImage } = useCollectionImage();\n\n  const { chainId, collectionToken } = useAppSelector((state) => state.config);\n  const { account } = useAppSelector((state) => state.web3);\n\n  const { protocolFee } = useAppSelector(state => state.metadata);\n  const { isLoading: isPriceLoading, order } = useAppSelector(state => state.nftDetail);\n\n  const [showOwnersModal, toggleShowOwnersModal] = useToggle(false);\n  const [showActivityList, setShowActivityList] = useState(false);\n\n  const [owner, ownersLength, isOwnerLoading] = useNftTokenOwners(collectionTokenInfo);\n\n  const isLoading = isPriceLoading || isOwnerLoading;\n  const isExpired = order ? isFullOrderExpired(order) : false;\n  const readableOwnerAddress = useAddressOrEnsName(owner, true);\n  const accountRoute = owner ? routes.profile(owner) : undefined;\n  const orderRoute = order ? routes.orderDetail(order.signer.wallet, order.nonce) : undefined;\n  const listRoute = (accountIsOwner && !order) ? routes.listNft(collectionTokenInfo.id) : undefined;\n  const showButton = (orderRoute || listRoute) && ownersLength && account && !isLoading;\n\n  const wrapperClassName = classNames('nft-detail-widget', {\n    'nft-detail-widget--has-button': showButton,\n  }, className);\n\n  useEffect(() => {\n    dispatch(getNftOrderByTokenId({ tokenId: collectionTokenInfo.id, provider: library }));\n\n    return () => {\n      dispatch(reset());\n    };\n  }, [collectionTokenInfo, library]);\n\n  useEffect(() => {\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        if (entry.isIntersecting) {\n          setShowActivityList(true);\n        }\n      });\n    });\n\n    if (activityListRef.current) {\n      observer.observe(activityListRef.current);\n    }\n\n    return () => {\n      if (activityListRef.current) {\n        observer.unobserve(activityListRef.current);\n      }\n    };\n  }, [activityListRef]);\n\n  return (\n    <div className={wrapperClassName}>\n      <div className=\"nft-detail-widget__main-info\">\n        <NftDetailMainInfo\n          accountRoute={accountRoute}\n          description={collectionTokenInfo.description}\n          owner={readableOwnerAddress}\n          ownersLength={ownersLength}\n          title={collectionTokenInfo.name}\n          onOwnersButtonClick={toggleShowOwnersModal}\n        />\n\n        <NftDetailSaleInfo\n          isLoading={isLoading}\n          order={order}\n          tokenInfo={currencyTokenInfo}\n          className=\"nft-detail-widget__main-info-price\"\n        />\n\n        {showButton && (\n          <NftDetailProceedButton\n            accountIsOwner={accountIsOwner}\n            isExpired={isExpired}\n            orderRoute={orderRoute}\n            listRoute={listRoute}\n          />\n        )}\n      </div>\n\n      <NftDetailPortrait\n        id={collectionTokenInfo.id}\n        backgroundImage={collectionTokenInfo.image || bannerImage}\n        className=\"nft-detail-widget__portrait\"\n      />\n\n      <NftDetailSaleInfo\n        isLoading={isLoading}\n        order={order}\n        tokenInfo={currencyTokenInfo}\n        className=\"nft-detail-widget__price\"\n      />\n\n      <Details\n        summary=\"Description\"\n        className=\"nft-detail-widget__description\"\n      >\n        <p>{collectionTokenInfo.description}</p>\n      </Details>\n\n      <Details\n        summary=\"Properties\"\n        className=\"nft-detail-widget__attributes\"\n      >\n        <NftDetailAttributes attrs={collectionTokenInfo.attributes} />\n      </Details>\n\n      <Details\n        summary=\"Item activity\"\n        className=\"nft-detail-widget__activity\"\n      >\n        <div\n          ref={activityListRef}\n          className=\"nft-detail-widget__activity-list-wrapper\"\n        >\n          <ConnectedActivityList\n            isEnabled={showActivityList}\n            tokenId={collectionTokenInfo.id}\n          />\n        </div>\n      </Details>\n\n      <Details\n        summary=\"Details\"\n        className=\"nft-detail-widget__details\"\n      >\n        <NftDetailList\n          address={collectionToken}\n          chainId={chainId}\n          fee={protocolFee / 100}\n          id={collectionTokenInfo.id}\n          standard={collectionTokenInfo.kind}\n        />\n      </Details>\n\n      {showOwnersModal && (\n        <ConnectedOwnersList\n          library={library}\n          tokenId={collectionTokenInfo.id}\n          onClose={toggleShowOwnersModal}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default ConnectedNftDetailWidget;\n","import React, { FC } from 'react';\n\nimport LoadingSpinner from '../../../../components/LoadingSpinner/LoadingSpinner';\n\ninterface DisconnectedNftDetailWidgetProps {\n  isLoading: boolean;\n  isNftNotFound: boolean;\n  isNetworkError: boolean;\n  id: string;\n  className?: string;\n}\n\nconst DisconnectedNftDetailWidget: FC<DisconnectedNftDetailWidgetProps> = ({\n  isLoading,\n  isNftNotFound,\n  isNetworkError,\n  id,\n  className = '',\n}) => (\n  <div className={`nft-detail-widget nft-detail-widget--is-disconnected ${className}`}>\n    {isLoading && <LoadingSpinner className=\"nft-detail-widget__loading-spinner\" />}\n    {(!isLoading && isNftNotFound) && `NFT with id ${id} not found`}\n    {(!isLoading && isNetworkError) && 'Network error. Could not fetch NFT metadata.'}\n  </div>\n);\n\nexport default DisconnectedNftDetailWidget;\n","import React, { FC, useEffect } from 'react';\n\nimport { AppErrorType } from '../../errors/appError';\nimport useCollectionToken from '../../hooks/useCollectionToken';\nimport useDefaultProvider from '../../hooks/useDefaultProvider';\nimport { useAppSelector } from '../../redux/hooks';\nimport ConnectedNftDetailWidget from './subcomponents/ConnectedNftDetailWidget/ConnectedNftDetailWidget';\nimport DisconnectedNftDetailWidget from './subcomponents/DisconnectedNftDetailWidget/DisconnectedNftDetailWidget';\n\nimport './NftDetailWidget.scss';\n\ninterface NftDetailWidgetProps {\n  tokenId: string;\n  className?: string;\n}\n\nconst NftDetailWidget: FC<NftDetailWidgetProps> = ({ tokenId, className = '' }) => {\n  const { chainId, collectionToken } = useAppSelector(state => state.config);\n  const { isInitialized } = useAppSelector(state => state.indexer);\n  const { isLoadingBalances, tokenIdsWithBalance } = useAppSelector(state => state.balances);\n  const { currencyTokenInfo, isLoading: isMetadataLoading } = useAppSelector(state => state.metadata);\n  const library = useDefaultProvider(chainId);\n\n  const [collectionTokenInfo, isLoadingCollectionTokenInfo, error] = useCollectionToken(collectionToken, tokenId);\n  const isLoading = isMetadataLoading || isLoadingCollectionTokenInfo || isLoadingBalances;\n  const accountIsOwner = !!tokenIdsWithBalance[tokenId];\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  if (!isLoadingCollectionTokenInfo\n    && !isMetadataLoading\n    && isInitialized\n    && collectionTokenInfo\n    && currencyTokenInfo\n    && library\n  ) {\n    return (\n      <ConnectedNftDetailWidget\n        accountIsOwner={accountIsOwner}\n        collectionTokenInfo={collectionTokenInfo}\n        currencyTokenInfo={currencyTokenInfo}\n        library={library}\n        className={className}\n      />\n    );\n  }\n\n  return (\n    <DisconnectedNftDetailWidget\n      isLoading={isLoading}\n      isNftNotFound={error?.type === AppErrorType.notFound}\n      isNetworkError={error?.type === AppErrorType.networkError}\n      id={tokenId}\n      className={className}\n    />\n  );\n};\n\nexport default NftDetailWidget;\n","import React, { FC } from 'react';\n\nimport { useParams } from 'react-router-dom';\n\nimport Helmet from '../../compositions/Helmet/Helmet';\nimport Page from '../../compositions/Page/Page';\nimport NftDetailWidget from '../../widgets/NftDetailWidget/NftDetailWidget';\n\nconst NftDetailPage: FC = () => {\n  const { tokenId } = useParams<{ tokenId: string }>();\n\n  return (\n    <Page>\n      <Helmet title={`Token ${tokenId || 1}`} />\n      <NftDetailWidget\n        tokenId={tokenId || '1'}\n      />\n    </Page>\n  );\n};\n\nexport default NftDetailPage;\n","import React, { FC } from 'react';\n\nimport { routes } from '../../routes';\nimport IconNavLink from '../IconNavLink/IconNavLink';\n\nimport './OrderWidgetHeader.scss';\n\ninterface OrderWidgetHeaderProps {\n  nftId?: string;\n  title: string;\n  className?: string;\n}\n\nconst OrderWidgetHeader: FC<OrderWidgetHeaderProps> = ({ nftId, title, className = '' }) => (\n  <div className={`order-widget-header ${className}`}>\n    <h1 className=\"order-widget-header__title\">{title}</h1>\n    <IconNavLink\n      hideLabel\n      icon=\"close\"\n      text=\"Back\"\n      to={nftId ? routes.nftDetail(nftId) : routes.collection()}\n      className=\"order-widget-header__back-button\"\n    />\n  </div>\n);\n\nexport default OrderWidgetHeader;\n","import React, { FC } from 'react';\n\nimport LoadingSpinner from '../../components/LoadingSpinner/LoadingSpinner';\nimport OrderWidgetHeader from '../OrderWidgetHeader/OrderWidgetHeader';\n\nimport './DisconnectedOrderDetail.scss';\n\ninterface DisconnectedBuyNftWidgetProps {\n  isLoading?: boolean;\n  isOrderNonceUndefined?: boolean;\n  isOrderNotFound?: boolean;\n  nftId?: string;\n  orderNonce?: string;\n  className?: string;\n}\n\nconst DisconnectedOrderDetail: FC<DisconnectedBuyNftWidgetProps> = ({\n  isLoading,\n  isOrderNonceUndefined,\n  isOrderNotFound,\n  nftId,\n  orderNonce,\n  className = '',\n}) => (\n  <div className={`disconnected-order-detail ${className}`}>\n    <div className=\"disconnected-order-detail__widget\">\n      <OrderWidgetHeader\n        title=\"\"\n        nftId={nftId}\n        className=\"disconnected-order-detail__header\"\n      />\n      {isLoading && <LoadingSpinner className=\"disconnected-order-detail__loading-spinner\" />}\n      {isOrderNonceUndefined && 'Order nonce not defined'}\n      {isOrderNotFound && `Order with nonce ${orderNonce} not found`}\n    </div>\n  </div>\n);\n\nexport default DisconnectedOrderDetail;\n","import { FullOrder } from '@airswap/types';\nimport { BaseProvider } from '@ethersproject/providers';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\nimport { OrderFilter } from '../../../entities/OrderFilter/OrderFilter';\nimport { getOrdersFromIndexers } from '../../../helpers/indexers';\nimport { AppThunkApiConfig } from '../../store';\nimport { addGetOrderFailedToast } from '../toasts/toastsActions';\n\ninterface GetNftOrderByOrderNonceParams extends Partial<OrderFilter> {\n  orderNonce: string;\n  signerWallet: string;\n  provider: BaseProvider;\n}\n\nexport const getNftOrderByOrderNonce = createAsyncThunk<\nFullOrder | undefined,\nGetNftOrderByOrderNonceParams,\nAppThunkApiConfig\n>('orderDetail/getNftOrderByNonce', async ({ orderNonce, signerWallet, provider }, { dispatch, getState }) => {\n  const { indexer } = getState();\n\n  try {\n    const orders = await getOrdersFromIndexers(\n      {\n        signerWallet,\n        offset: 0,\n        limit: 999,\n      },\n      indexer.urls,\n      provider,\n    );\n\n    return orders.find(order => order.nonce === orderNonce);\n  } catch {\n    dispatch(addGetOrderFailedToast());\n\n    return undefined;\n  }\n});\n","import { useEffect, useState } from 'react';\n\nimport { FullOrder } from '@airswap/types';\n\nimport { getFullOrderNonceUsed } from '../entities/FullOrder/FullOrderHelpers';\nimport useDefaultProvider from './useDefaultProvider';\n\nconst useFullOrderNonceUsed = (fullOrder?: FullOrder, usePolling = true): [boolean, boolean] => {\n  const library = useDefaultProvider(fullOrder?.chainId);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isNonceUsed, setIsNonceUsed] = useState(false);\n\n  const getNonceUsedCall = async () => {\n    if (!library || !fullOrder) {\n      return;\n    }\n\n    const response = await getFullOrderNonceUsed(fullOrder, library);\n\n    setIsNonceUsed(response);\n    setIsLoading(!response);\n  };\n\n  useEffect((): () => void => {\n    getNonceUsedCall();\n\n    const timer = setInterval(async () => {\n      if (!library || !fullOrder) {\n        return;\n      }\n\n      const response = await getFullOrderNonceUsed(fullOrder, library);\n\n      if (response || !usePolling) {\n        clearInterval(timer);\n      }\n\n      setIsLoading(false);\n      setIsNonceUsed(response);\n    }, 1000);\n\n    return () => clearInterval(timer);\n  }, [fullOrder, library]);\n\n  return [isNonceUsed, isLoading];\n};\n\nexport default useFullOrderNonceUsed;\n","import { useMemo } from 'react';\n\nimport { Erc20ApprovalTransaction } from '../entities/SubmittedTransaction/SubmittedTransaction';\nimport { useAppSelector } from '../redux/hooks';\nimport { selectErc20ApprovalTransactions } from '../redux/stores/transactions/transactionsSlice';\n\nconst useApproveCurrencyTokenTransaction = (hash?: string): Erc20ApprovalTransaction | undefined => {\n  const transactions = useAppSelector(selectErc20ApprovalTransactions);\n\n  return useMemo(() => {\n    if (!transactions.length || !hash) {\n      return undefined;\n    }\n\n    return transactions.find(transaction => transaction.hash === hash);\n  }, [transactions, hash]);\n};\n\nexport default useApproveCurrencyTokenTransaction;\n","import { useEffect, useState } from 'react';\n\nconst useFullOrderExpired = (orderExpiry: string): boolean => {\n  const expiry = +orderExpiry * 1000;\n\n  const [isExpired, setIsExpired] = useState(new Date().getTime() > expiry);\n\n  useEffect((): () => void => {\n    const timer = setInterval(() => {\n      setIsExpired(new Date().getTime() > expiry);\n    }, 1000);\n\n    return () => clearInterval(timer);\n  }, [orderExpiry]);\n\n  return isExpired;\n};\n\nexport default useFullOrderExpired;\n","import { useMemo } from 'react';\n\nimport { BigNumber } from 'bignumber.js';\n\nimport { useAppSelector } from '../redux/hooks';\n\nconst useInsufficientBalance = (amount: string): boolean => {\n  const { currencyTokenBalance } = useAppSelector(store => store.balances);\n\n  return useMemo(() => new BigNumber(currencyTokenBalance).lt(amount), [currencyTokenBalance, amount]);\n};\n\nexport default useInsufficientBalance;\n","import { useMemo } from 'react';\n\nimport { OrderTransaction } from '../entities/SubmittedTransaction/SubmittedTransaction';\nimport { useAppSelector } from '../redux/hooks';\nimport { selectOrderTransactions } from '../redux/stores/transactions/transactionsSlice';\n\nconst useOrderTransaction = (orderNonce: string): OrderTransaction | undefined => {\n  const pendingOrders = useAppSelector(selectOrderTransactions);\n\n  return useMemo(() => {\n    if (!orderNonce || !pendingOrders.length) {\n      return undefined;\n    }\n\n    return pendingOrders.find(tx => tx.order.nonce === orderNonce);\n  }, [orderNonce, pendingOrders]);\n};\n\nexport default useOrderTransaction;\n","import { useEffect, useState } from 'react';\n\nimport { FullOrder } from '@airswap/types';\nimport { BigNumber } from 'bignumber.js';\n\nimport { getFullOrderSenderAmountPlusTotalFees } from '../entities/FullOrder/FullOrderHelpers';\nimport { useAppSelector } from '../redux/hooks';\n\nconst useSufficientErc20Allowance = (fullOrder: FullOrder): boolean => {\n  const { currencyTokenAllowance } = useAppSelector((state) => state.balances);\n\n  const [hasSufficientAllowance, setHasSufficientAllowance] = useState(false);\n\n  useEffect(() => {\n    const amount = getFullOrderSenderAmountPlusTotalFees(fullOrder);\n    setHasSufficientAllowance(new BigNumber(currencyTokenAllowance).gte(amount));\n  }, [fullOrder, currencyTokenAllowance]);\n\n  return hasSufficientAllowance;\n};\n\nexport default useSufficientErc20Allowance;\n","import React, { FC, useCallback } from 'react';\n\nimport { CollectionTokenInfo } from '@airswap/types';\nimport { NavLink } from 'react-router-dom';\n\nimport Button from '../../../../components/Button/Button';\nimport { routes } from '../../../../routes';\nimport { BuyNftState } from '../ConnectedBuyNftWidget/ConnectedBuyNftWidget';\n\nimport './BuyActionButtons.scss';\n\ninterface ActionButtonsProps {\n  hasInsufficientAmount: boolean;\n  hasNoCurrencyTokenApproval: boolean;\n  isOrderExpired: boolean;\n  isOrderNonceUsed: boolean;\n  ownerIsAccount: boolean;\n  account: string;\n  collectionTokenInfo: CollectionTokenInfo;\n  currencyTokenSymbol: string;\n  state: BuyNftState;\n  onActionButtonClick: () => void;\n  className?: string;\n}\n\nconst BuyActionButtons: FC<ActionButtonsProps> = ({\n  hasInsufficientAmount,\n  hasNoCurrencyTokenApproval,\n  isOrderExpired,\n  isOrderNonceUsed,\n  ownerIsAccount,\n  account,\n  collectionTokenInfo,\n  currencyTokenSymbol,\n  state,\n  onActionButtonClick,\n  className = '',\n}) => {\n  const getActionButton = useCallback((): JSX.Element | null => {\n    if (ownerIsAccount) {\n      return (\n        <Button\n          disabled\n          text=\"This is your own order\"\n          className=\"buy-action-buttons__action-button\"\n        />\n      );\n    }\n\n    if (isOrderNonceUsed && state === BuyNftState.details) {\n      return (\n        <Button\n          disabled\n          text=\"Order is already taken\"\n          className=\"buy-action-buttons__action-button\"\n        />\n      );\n    }\n\n    if (isOrderExpired && state === BuyNftState.details) {\n      return (\n        <Button\n          disabled\n          text=\"Order is expired\"\n          className=\"buy-action-buttons__action-button\"\n        />\n      );\n    }\n\n    if (hasInsufficientAmount && state === BuyNftState.details) {\n      return (\n        <Button\n          disabled\n          text={`Insufficient ${currencyTokenSymbol}`}\n          className=\"buy-action-buttons__action-button\"\n        />\n      );\n    }\n\n    if (state === BuyNftState.details) {\n      return (\n        <Button\n          text={hasNoCurrencyTokenApproval ? `Approve ${currencyTokenSymbol}` : 'Buy NFT'}\n          onClick={onActionButtonClick}\n          className=\"buy-action-buttons__action-button\"\n        />\n      );\n    }\n\n    if (state === BuyNftState.buying) {\n      return (\n        <NavLink\n          to=\"/\"\n          className=\"buy-action-buttons__action-button\"\n        >\n          Back to collection\n        </NavLink>\n      );\n    }\n\n    if (state === BuyNftState.success) {\n      return (\n        <NavLink\n          to={routes.profile(account, collectionTokenInfo.id)}\n          className=\"buy-action-buttons__action-button\"\n        >\n          View in my profile\n        </NavLink>\n      );\n    }\n\n    if (state === BuyNftState.failed) {\n      return (\n        <NavLink\n          to={routes.nftDetail(collectionTokenInfo.id)}\n          onClick={onActionButtonClick}\n          className=\"buy-action-buttons__action-button\"\n        >\n          Go back\n        </NavLink>\n      );\n    }\n\n    return null;\n  }, [\n    hasInsufficientAmount,\n    hasNoCurrencyTokenApproval,\n    isOrderExpired,\n    isOrderNonceUsed,\n    ownerIsAccount,\n    account,\n    collectionTokenInfo,\n    currencyTokenSymbol,\n    state,\n  ]);\n\n  return (\n    <div className={`buy-action-buttons ${className}`}>\n      {getActionButton()}\n    </div>\n  );\n};\n\nexport default BuyActionButtons;\n","import React, { FC } from 'react';\n\nimport { CollectionTokenInfo } from '@airswap/types';\nimport classNames from 'classnames';\n\nimport Icon from '../Icon/Icon';\n\nimport './TradeNftDetails.scss';\n\nexport interface TradeNftDetailsProps {\n  collectionImage: string;\n  collectionName: string;\n  collectionToken: CollectionTokenInfo;\n  icon?: 'success' | 'failed';\n  className?: string;\n}\n\nconst TradeNftDetails: FC<TradeNftDetailsProps> = ({\n  collectionImage,\n  collectionName,\n  collectionToken,\n  icon,\n  className = '',\n}) => {\n  const wrapperClassName = classNames('trade-nft-details', {\n    [`trade-nft-details--has-${icon}-icon`]: icon,\n  }, className);\n\n  return (\n    <div className={wrapperClassName}>\n      {icon && (\n        <div className=\"trade-nft-details__check-icon-container\">\n          <div className=\"trade-nft-details__check-icon-circle\">\n            <Icon\n              name={icon === 'failed' ? 'close' : 'check'}\n              className=\"trade-nft-details__check-icon\"\n            />\n          </div>\n        </div>\n      )}\n      <div\n        style={{ backgroundImage: `url(\"${collectionToken.image}\")` }}\n        className=\"trade-nft-details__inner\"\n      >\n        <h2 className=\"trade-nft-details__token-name\">{collectionToken.name}</h2>\n        <div className=\"trade-nft-details__portrait-and-collection-details\">\n          <div\n            style={{ backgroundImage: `url(\"${collectionImage}\")` }}\n            className=\"trade-nft-details__collection-portrait\"\n          />\n          <div className=\"trade-nft-details__collection-details\">\n            <h3 className=\"trade-nft-details__collection-name\">{collectionName}</h3>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TradeNftDetails;\n","import React, { FC, useMemo } from 'react';\n\nimport { CollectionTokenInfo, FullOrder, TokenInfo } from '@airswap/types';\nimport { getReceiptUrl } from '@airswap/utils';\nimport classNames from 'classnames';\n\nimport LoadingSpinner from '../../../../components/LoadingSpinner/LoadingSpinner';\nimport TradeDetails from '../../../../components/TradeDetails/TradeDetails';\nimport TradeNftDetails, { TradeNftDetailsProps } from '../../../../components/TradeNftDetails/TradeNftDetails';\nimport TransactionLink from '../../../../compositions/TransactionLink/TransactionLink';\nimport { getFullOrderSenderAmountPlusTotalFees } from '../../../../entities/FullOrder/FullOrderHelpers';\nimport { Erc20ApprovalTransaction, OrderTransaction } from '../../../../entities/SubmittedTransaction/SubmittedTransaction';\nimport { AppError } from '../../../../errors/appError';\nimport SwapIcon from '../../../ListNftWidget/subcomponents/SwapIcon/SwapIcon';\nimport { getNftDetailsIcon } from '../../helpers';\nimport { BuyNftState } from '../ConnectedBuyNftWidget/ConnectedBuyNftWidget';\n\nimport './BuyNftWidgetDetailsContainer.scss';\n\ninterface BuyNftWidgetDetailsContainerProps {\n  chainId: number;\n  collectionImage: string;\n  collectionName: string;\n  collectionTokenInfo: CollectionTokenInfo;\n  currencyTokenInfo: TokenInfo;\n  error?: AppError;\n  fullOrder: FullOrder,\n  submittedApproval?: Erc20ApprovalTransaction;\n  submittedOrder?: OrderTransaction;\n  widgetState: BuyNftState;\n  className?: string;\n}\n\nconst BuyNftWidgetDetailsContainer: FC<BuyNftWidgetDetailsContainerProps> = ({\n  chainId,\n  collectionImage,\n  collectionName,\n  collectionTokenInfo,\n  currencyTokenInfo,\n  error,\n  fullOrder,\n  submittedApproval,\n  submittedOrder,\n  widgetState,\n  className = '',\n}) => {\n  const wrapperClassName = classNames('buy-nft-details-container', {\n    [`buy-nft-details-container--has-${widgetState}-state`]: widgetState,\n  }, className);\n\n  const pricePlusFees = useMemo(() => getFullOrderSenderAmountPlusTotalFees(fullOrder), [fullOrder]);\n  const nftDetailsIcon: TradeNftDetailsProps['icon'] = useMemo(() => getNftDetailsIcon(widgetState), [widgetState]);\n  const approvalUrl = useMemo(() => (submittedApproval?.hash ? getReceiptUrl(chainId, submittedApproval.hash) : undefined), [submittedApproval]);\n  const orderUrl = useMemo(() => (submittedOrder?.hash ? getReceiptUrl(chainId, submittedOrder.hash) : undefined), [submittedOrder]);\n\n  return (\n    <div className={wrapperClassName}>\n      {(widgetState === BuyNftState.details || widgetState === BuyNftState.success || widgetState === BuyNftState.failed) && (\n        <>\n          <TradeNftDetails\n            icon={nftDetailsIcon}\n            collectionImage={collectionImage}\n            collectionName={collectionName}\n            collectionToken={collectionTokenInfo}\n            className=\"buy-nft-details-container__trade-details\"\n          />\n          {widgetState === BuyNftState.details && (\n            <>\n              <SwapIcon />\n              <TradeDetails\n                amount={pricePlusFees}\n                logoURI={currencyTokenInfo.logoURI}\n                title=\"For\"\n                token={currencyTokenInfo}\n                className=\"buy-nft-details-container__trade-details\"\n              />\n            </>\n          )}\n          {(widgetState === BuyNftState.success && orderUrl) && (\n            <TransactionLink\n              to={orderUrl}\n              className=\"buy-nft-details-container__transaction-link\"\n            />\n          )}\n          {(widgetState === BuyNftState.failed && error) && (\n            <p className=\"buy-nft-details-container__message\">\n              {/* TODO: Add translations for errors */}\n              {`Failed for the following reason: ${error.type}`}\n            </p>\n          )}\n        </>\n      )}\n\n      {(widgetState === BuyNftState.sign || widgetState === BuyNftState.approve) && (\n        <>\n          <LoadingSpinner className=\"buy-nft-details-container__loading-spinner--is-hidden\" />\n\n          <p className=\"list-nft-details-container__message\">\n            If your wallet does not open something went wrong\n          </p>\n        </>\n      )}\n\n      {(widgetState === BuyNftState.approving) && (\n        <>\n          <LoadingSpinner className=\"buy-nft-details-container__loading-spinner\" />\n          <TradeDetails\n            logoURI={currencyTokenInfo.logoURI}\n            title=\"Approving\"\n            token={currencyTokenInfo}\n          />\n          {approvalUrl && (\n            <TransactionLink\n              to={approvalUrl}\n              className=\"list-nft-details-container__transaction-link\"\n            />\n          )}\n        </>\n      )}\n\n      {(widgetState === BuyNftState.buying) && (\n        <>\n          <LoadingSpinner className=\"buy-nft-details-container__loading-spinner\" />\n          <TradeDetails\n            amount={pricePlusFees}\n            logoURI={currencyTokenInfo.logoURI}\n            title=\"For\"\n            token={currencyTokenInfo}\n            className=\"buy-nft-details-container__trade-details\"\n          />\n          <SwapIcon />\n          <TradeDetails\n            logoURI={collectionTokenInfo ? collectionTokenInfo.image : collectionImage}\n            title=\"Buy\"\n            token={collectionTokenInfo}\n          />\n          {orderUrl && (\n            <TransactionLink\n              to={orderUrl}\n              className=\"buy-nft-details-container__transaction-link\"\n            />\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default BuyNftWidgetDetailsContainer;\n","import { TradeNftDetailsProps } from '../../../components/TradeNftDetails/TradeNftDetails';\nimport { BuyNftState } from '../subcomponents/ConnectedBuyNftWidget/ConnectedBuyNftWidget';\n\nexport const getNftDetailsIcon = (state: BuyNftState): TradeNftDetailsProps['icon'] => {\n  if (state === BuyNftState.success) {\n    return 'success';\n  }\n\n  if (state === BuyNftState.failed) {\n    return 'failed';\n  }\n\n  return undefined;\n};\n\nexport const getTitle = (state: BuyNftState): string => {\n  if (state === BuyNftState.approve) {\n    return 'Approve in Wallet';\n  }\n\n  if (state === BuyNftState.approving) {\n    return 'Transaction in progress';\n  }\n\n  if (state === BuyNftState.sign) {\n    return 'Sign in Wallet';\n  }\n\n  if (state === BuyNftState.buying) {\n    return 'Buying in progress';\n  }\n\n  if (state === BuyNftState.success) {\n    return 'Success';\n  }\n\n  if (state === BuyNftState.failed) {\n    return 'Failed';\n  }\n\n  return 'Buy NFT';\n};\n","import React, {\n  FC,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\n\nimport { CollectionTokenInfo, FullOrder, TokenInfo } from '@airswap/types';\nimport { Web3Provider } from '@ethersproject/providers';\n\nimport OrderWidgetHeader from '../../../../compositions/OrderWidgetHeader/OrderWidgetHeader';\nimport { getFullOrderSenderAmountPlusTotalFees } from '../../../../entities/FullOrder/FullOrderHelpers';\nimport { AppErrorType, isAppError } from '../../../../errors/appError';\nimport useApproveCurrencyTokenTransaction from '../../../../hooks/useApproveCurrencyTokenTransaction';\nimport useCollectionImage from '../../../../hooks/useCollectionImage';\nimport useFullOrderExpired from '../../../../hooks/useFullOrderExpired';\nimport useInsufficientBalance from '../../../../hooks/useInsufficientBalance';\nimport useOrderTransaction from '../../../../hooks/useOrderTransaction';\nimport useSufficientErc20Allowance from '../../../../hooks/useSufficientErc20Allowance';\nimport { useAppDispatch, useAppSelector } from '../../../../redux/hooks';\nimport { approve as approveErc20, take } from '../../../../redux/stores/orders/ordersActions';\nimport { setError } from '../../../../redux/stores/orders/ordersSlice';\nimport { addInfoToast, addUserRejectedToast } from '../../../../redux/stores/toasts/toastsActions';\nimport { getTitle } from '../../helpers';\nimport BuyActionButtons from '../BuyActionButtons/BuyActionButtons';\nimport BuyNftWidgetDetailsContainer from '../BuyNftWidgetDetailsContainer/BuyNftWidgetDetailsContainer';\n\nexport enum BuyNftState {\n  details = 'details',\n  approve = 'approve',\n  approving = 'approving',\n  sign = 'sign',\n  buying = 'buying',\n  success = 'success',\n  failed = 'failed',\n}\n\ninterface ConnectedBuyNftWidgetProps {\n  isOrderNonceUsed: boolean;\n  account: string;\n  chainId: number\n  collectionTokenInfo: CollectionTokenInfo;\n  currencyTokenInfo: TokenInfo;\n  fullOrder: FullOrder;\n  library: Web3Provider;\n  className?: string;\n}\n\nconst BuyNftWidget: FC<ConnectedBuyNftWidgetProps> = ({\n  isOrderNonceUsed,\n  account,\n  chainId,\n  collectionTokenInfo,\n  currencyTokenInfo,\n  fullOrder,\n  library,\n  className = '',\n}) => {\n  const dispatch = useAppDispatch();\n  const { bannerImage } = useCollectionImage();\n\n  const { collectionName } = useAppSelector(state => state.config);\n  const { error } = useAppSelector(state => state.orders);\n\n  const [widgetState, setWidgetState] = useState<BuyNftState>(BuyNftState.details);\n  const [approvalTransactionHash, setApprovalTransactionHash] = useState<string>();\n\n  const hasInsufficientBalance = useInsufficientBalance(fullOrder.sender.amount);\n  const hasSufficientCurrencyAllowance = useSufficientErc20Allowance(fullOrder);\n  const approveTransaction = useApproveCurrencyTokenTransaction(approvalTransactionHash);\n  const orderTransaction = useOrderTransaction(fullOrder.nonce);\n  const isOrderExpired = useFullOrderExpired(fullOrder.expiry);\n  const ownerIsAccount = fullOrder.signer.wallet.toLowerCase() === account.toLowerCase();\n\n  const title = useMemo(() => getTitle(widgetState), [widgetState]);\n\n  const handleActionButtonClick = async () => {\n    if (widgetState === BuyNftState.details && !hasSufficientCurrencyAllowance) {\n      setWidgetState(BuyNftState.approve);\n\n      dispatch(approveErc20({\n        amount: getFullOrderSenderAmountPlusTotalFees(fullOrder).toNumber(),\n        tokenInfo: currencyTokenInfo,\n        library,\n        chainId,\n      }))\n        .unwrap()\n        .then((transactionHash) => {\n          if (typeof transactionHash === 'string') {\n            setApprovalTransactionHash(transactionHash);\n          }\n        })\n        .catch((e) => {\n          if (isAppError(e) && e.type === AppErrorType.rejectedByUser) {\n            dispatch(addUserRejectedToast());\n            setWidgetState(BuyNftState.details);\n          } else {\n            setWidgetState(BuyNftState.failed);\n          }\n        });\n    }\n\n    if (widgetState === BuyNftState.details && hasSufficientCurrencyAllowance) {\n      setWidgetState(BuyNftState.sign);\n\n      dispatch(take({\n        order: fullOrder,\n        senderWallet: account,\n        library,\n      }));\n    }\n\n    if (widgetState === BuyNftState.failed) {\n      dispatch(setError(undefined));\n    }\n  };\n\n  useEffect(() => {\n    if (approveTransaction?.status === 'processing') {\n      setWidgetState(BuyNftState.approving);\n    }\n\n    if (approveTransaction?.status === 'succeeded') {\n      dispatch(addInfoToast('Approved', `Approved ${currencyTokenInfo.symbol} to be spend.`));\n      setWidgetState(BuyNftState.details);\n    }\n  }, [approveTransaction]);\n\n  useEffect(() => {\n    if (orderTransaction?.status === 'processing') {\n      setWidgetState(BuyNftState.buying);\n    }\n\n    if (orderTransaction?.status === 'succeeded') {\n      setWidgetState(BuyNftState.success);\n    }\n  }, [orderTransaction]);\n\n  useEffect(() => {\n    if (!error) {\n      return;\n    }\n\n    if (error?.type === AppErrorType.rejectedByUser) {\n      dispatch(addUserRejectedToast());\n      setWidgetState(BuyNftState.details);\n    } else {\n      setWidgetState(BuyNftState.failed);\n    }\n  }, [error]);\n\n  // This will clear the store when unmounting the component\n  useEffect((): () => void => () => dispatch(setError(undefined)), []);\n\n  return (\n    <div className={`buy-nft-widget ${className}`}>\n      <OrderWidgetHeader\n        nftId={collectionTokenInfo.id}\n        title={title}\n        className=\"buy-nft-widget__header\"\n      />\n\n      <BuyNftWidgetDetailsContainer\n        chainId={chainId}\n        collectionImage={bannerImage}\n        collectionName={collectionName}\n        collectionTokenInfo={collectionTokenInfo}\n        currencyTokenInfo={currencyTokenInfo}\n        error={error}\n        fullOrder={fullOrder}\n        submittedApproval={approveTransaction}\n        submittedOrder={orderTransaction}\n        widgetState={widgetState}\n        className=\"buy-nft-widget__trade-details-container\"\n      />\n\n      <BuyActionButtons\n        hasInsufficientAmount={hasInsufficientBalance}\n        hasNoCurrencyTokenApproval={!hasSufficientCurrencyAllowance}\n        isOrderExpired={isOrderExpired}\n        isOrderNonceUsed={isOrderNonceUsed}\n        ownerIsAccount={ownerIsAccount}\n        account={account}\n        collectionTokenInfo={collectionTokenInfo}\n        currencyTokenSymbol={currencyTokenInfo.symbol}\n        state={widgetState}\n        onActionButtonClick={handleActionButtonClick}\n        className=\"buy-nft-widget__action-buttons\"\n      />\n    </div>\n  );\n};\n\nexport default BuyNftWidget;\n","import React, { FC, ReactElement } from 'react';\n\nimport { chainNames } from '@airswap/constants';\nimport { CollectionTokenInfo, FullOrder, TokenInfo } from '@airswap/types';\n\nimport Button from '../../../../components/Button/Button';\nimport LoadingSpinner from '../../../../components/LoadingSpinner/LoadingSpinner';\nimport OrderWidgetHeader from '../../../../compositions/OrderWidgetHeader/OrderWidgetHeader';\nimport { useAppDispatch } from '../../../../redux/hooks';\nimport { setShowConnectModal } from '../../../../redux/stores/web3/web3Slice';\nimport { ConnectionType } from '../../../../web3-connectors/connections';\nimport { switchNetwork } from '../../../../web3-connectors/helpers';\nimport BuyNftWidgetDetailsContainer from '../BuyNftWidgetDetailsContainer/BuyNftWidgetDetailsContainer';\nimport { BuyNftState } from '../ConnectedBuyNftWidget/ConnectedBuyNftWidget';\n\ninterface DisconnectedBuyNftWidgetProps {\n  isActive: boolean;\n  isLoading: boolean;\n  chainId?: number;\n  configChainId: number;\n  collectionImage: string;\n  collectionName: string;\n  collectionTokenInfo?: CollectionTokenInfo;\n  currencyTokenInfo?: TokenInfo;\n  connectionType?: ConnectionType;\n  fullOrder: FullOrder;\n  nftId: string\n  className?: string;\n}\n\nconst DisconnectedBuyNftWidget: FC<DisconnectedBuyNftWidgetProps> = ({\n  isActive,\n  isLoading,\n  chainId,\n  configChainId,\n  collectionImage,\n  collectionName,\n  collectionTokenInfo,\n  connectionType,\n  currencyTokenInfo,\n  fullOrder,\n  nftId,\n  className = '',\n}): ReactElement => {\n  const dispatch = useAppDispatch();\n\n  const handleSwitchChainClick = (): void => {\n    if (connectionType) {\n      switchNetwork(configChainId, connectionType);\n    }\n  };\n\n  const handleConnectWalletClick = (): void => {\n    dispatch(setShowConnectModal(true));\n  };\n\n  return (\n    <div className={`buy-nft-widget ${className}`}>\n      <OrderWidgetHeader\n        nftId={nftId}\n        title=\"Buy NFT\"\n        className=\"buy-nft-widget__header\"\n      />\n\n      {(collectionTokenInfo && currencyTokenInfo && configChainId) && (\n        <BuyNftWidgetDetailsContainer\n          chainId={configChainId}\n          collectionImage={collectionImage}\n          collectionName={collectionName}\n          collectionTokenInfo={collectionTokenInfo}\n          currencyTokenInfo={currencyTokenInfo}\n          fullOrder={fullOrder}\n          widgetState={BuyNftState.details}\n          className=\"buy-nft-widget__trade-details-container\"\n        />\n      )}\n\n      {isLoading && <LoadingSpinner className=\"buy-nft-widget__button-loading-spinner\" />}\n      {!isLoading && !isActive && (\n        <Button\n          text=\"Connect wallet\"\n          onClick={handleConnectWalletClick}\n          className=\"buy-nft-widget__action-button\"\n        />\n      )}\n      {!isLoading && isActive && chainId !== configChainId && (\n        <Button\n          text={`Switch to ${chainNames[configChainId]}`}\n          onClick={handleSwitchChainClick}\n          className=\"buy-nft-widget__action-button\"\n        />\n      )}\n    </div>\n  );\n};\n\nexport default DisconnectedBuyNftWidget;\n","import React, { FC } from 'react';\n\nimport { FullOrder } from '@airswap/types';\n\nimport useCollectionImage from '../../hooks/useCollectionImage';\nimport useCollectionToken from '../../hooks/useCollectionToken';\nimport useFullOrderNonceUsed from '../../hooks/useFullOrderNonceUsed';\nimport useWeb3ReactLibrary from '../../hooks/useWeb3ReactLibrary';\nimport { useAppSelector } from '../../redux/hooks';\nimport ConnectedBuyNftWidget from './subcomponents/ConnectedBuyNftWidget/ConnectedBuyNftWidget';\nimport DisconnectedBuyNftWidget from './subcomponents/DisconnectedBuyNftWidget/DisconnectedBuyNftWidget';\n\nimport './BuyNftWidget.scss';\n\ninterface BuyNftWidgetProps {\n  order: FullOrder;\n  className?: string;\n}\n\nconst BuyNftWidget: FC<BuyNftWidgetProps> = ({ order, className = '' }) => {\n  const { library, chainId } = useWeb3ReactLibrary();\n  const { bannerImage } = useCollectionImage();\n\n  const { collectionName, collectionToken, chainId: configChainId } = useAppSelector((state) => state.config);\n  const { isLoading: isMetadataLoading, currencyTokenInfo } = useAppSelector(state => state.metadata);\n  const { isActive, account, connectionType } = useAppSelector(state => state.web3);\n\n  const tokenId = order.signer.id;\n  const [collectionTokenInfo, isCollectionTokenInfoLoading] = useCollectionToken(collectionToken, tokenId);\n  const [isNonceUsed, isNonceUsedLoading] = useFullOrderNonceUsed(order);\n  const isLoading = isMetadataLoading || isCollectionTokenInfoLoading || isNonceUsedLoading;\n\n  if (\n    !isLoading\n    && isActive\n    && account\n    && chainId === configChainId\n    && collectionTokenInfo\n    && currencyTokenInfo\n    && library\n  ) {\n    return (\n      <ConnectedBuyNftWidget\n        isOrderNonceUsed={isNonceUsed}\n        account={account}\n        chainId={chainId}\n        collectionTokenInfo={collectionTokenInfo}\n        currencyTokenInfo={currencyTokenInfo}\n        fullOrder={order}\n        library={library}\n        className={className}\n      />\n    );\n  }\n\n  return (\n    <DisconnectedBuyNftWidget\n      isActive={isActive}\n      isLoading={isLoading}\n      chainId={chainId}\n      configChainId={configChainId}\n      collectionImage={bannerImage}\n      collectionName={collectionName}\n      collectionTokenInfo={collectionTokenInfo}\n      connectionType={connectionType}\n      currencyTokenInfo={currencyTokenInfo}\n      fullOrder={order}\n      nftId={tokenId}\n      className={className}\n    />\n  );\n};\n\nexport default BuyNftWidget;\n","import { useMemo } from 'react';\n\nimport { CancelOrderTransaction } from '../entities/SubmittedTransaction/SubmittedTransaction';\nimport { useAppSelector } from '../redux/hooks';\nimport {\n  selectCancelOrderTransactions,\n} from '../redux/stores/transactions/transactionsSlice';\n\nconst useCancelOrderTransaction = (hash?: string): CancelOrderTransaction | undefined => {\n  const transactions = useAppSelector(selectCancelOrderTransactions);\n\n  return useMemo(() => {\n    if (!transactions.length || !hash) {\n      return undefined;\n    }\n\n    return transactions.find(transaction => transaction.hash === hash);\n  }, [transactions, hash]);\n};\n\nexport default useCancelOrderTransaction;\n","import React, { FC, ReactElement, useCallback } from 'react';\n\nimport { NavLink } from 'react-router-dom';\n\nimport Button from '../../../../components/Button/Button';\nimport { routes } from '../../../../routes';\nimport { CancelOrderState } from '../ConnectedCancelOrderWidget/ConnectedCancelOrderWidget';\n\nimport './CancelActionButtons.scss';\n\ninterface CancelActionButtonsProps {\n  nftId: string;\n  state: CancelOrderState;\n  onActionButtonClick: () => void;\n  className?: string;\n}\n\nconst CancelActionButtons: FC<CancelActionButtonsProps> = ({\n  nftId,\n  state,\n  onActionButtonClick,\n  className = '',\n}): ReactElement => {\n  const getActionButton = useCallback((): JSX.Element | null => {\n    if (state === CancelOrderState.details) {\n      return (\n        <Button\n          text=\"Cancel listing\"\n          onClick={onActionButtonClick}\n          className=\"cancel-action-buttons__cancel-button\"\n        />\n      );\n    }\n\n    if (state === CancelOrderState.success) {\n      return (\n        <>\n          <NavLink\n            to={routes.nftDetail(nftId)}\n            className=\"cancel-action-buttons__back-button\"\n          >\n            Back\n          </NavLink>\n          <NavLink\n            to={routes.listNft(nftId)}\n            className=\"cancel-action-buttons__action-button\"\n          >\n            Re-list NFT\n          </NavLink>\n        </>\n      );\n    }\n\n    if (state === CancelOrderState.failed) {\n      return (\n        <>\n          <NavLink\n            to={routes.nftDetail(nftId)}\n            className=\"cancel-action-buttons__back-button\"\n          >\n            Back\n          </NavLink>\n          <Button\n            text=\"Try again\"\n            onClick={onActionButtonClick}\n            className=\"cancel-action-buttons__action-button\"\n          />\n        </>\n      );\n    }\n\n    return null;\n  }, [state]);\n\n  return (\n    <div className={`cancel-action-buttons ${className}`}>\n      {getActionButton()}\n    </div>\n  );\n};\n\nexport default CancelActionButtons;\n","import React, { FC, ReactElement } from 'react';\n\nimport './ExpiryDateInfo.scss';\n\ninterface ExpiryDateInfoProps {\n  expiry: Date;\n  className?: string;\n}\n\nconst ExpiryDateInfo: FC<ExpiryDateInfoProps> = ({ expiry, className = '' }): ReactElement => (\n  <div className={`expiry-date-info ${className}`}>\n    <div className=\"expiry-date-info__title\">\n      Expires on\n    </div>\n    <div className=\"expiry-date-info__date\">\n      {expiry.toLocaleString()}\n    </div>\n  </div>\n);\n\nexport default ExpiryDateInfo;\n","import React, { FC, ReactElement, useMemo } from 'react';\n\nimport { CollectionTokenInfo, FullOrder, TokenInfo } from '@airswap/types';\nimport { getReceiptUrl } from '@airswap/utils';\nimport classNames from 'classnames';\n\nimport ExpiryDateInfo from '../../../../components/ExpiryDateInfo/ExpiryDateInfo';\nimport LoadingSpinner from '../../../../components/LoadingSpinner/LoadingSpinner';\nimport ReviewNftDetails from '../../../../components/ReviewNftDetails/ReviewNftDetails';\nimport ReviewTokenDetails from '../../../../components/ReviewTokenDetails/ReviewTokenDetails';\nimport TradeDetails from '../../../../components/TradeDetails/TradeDetails';\nimport TransactionLink from '../../../../compositions/TransactionLink/TransactionLink';\nimport {\n  getFullOrderExpiryDate,\n  getFullOrderReadableSenderAmount,\n  getFullOrderReadableSenderAmountPlusTotalFees,\n} from '../../../../entities/FullOrder/FullOrderHelpers';\nimport { SubmittedTransaction } from '../../../../entities/SubmittedTransaction/SubmittedTransaction';\nimport SwapIcon from '../../../ListNftWidget/subcomponents/SwapIcon/SwapIcon';\nimport { CancelOrderState } from '../ConnectedCancelOrderWidget/ConnectedCancelOrderWidget';\n\nimport './CancelDetailsContainer.scss';\n\ninterface CancelDetailsContainerProps {\n  chainId: number;\n  collectionImage: string;\n  collectionTokenInfo: CollectionTokenInfo;\n  currencyTokenInfo: TokenInfo;\n  fullOrder: FullOrder;\n  projectFee: number;\n  protocolFee: number;\n  submittedTransaction?: SubmittedTransaction;\n  widgetState: CancelOrderState;\n  className?: string;\n}\n\nconst CancelDetailsContainer: FC<CancelDetailsContainerProps> = ({\n  chainId,\n  collectionImage,\n  collectionTokenInfo,\n  currencyTokenInfo,\n  fullOrder,\n  projectFee,\n  protocolFee,\n  submittedTransaction,\n  widgetState,\n  className = '',\n}): ReactElement => {\n  const wrapperClassName = classNames('cancel-details-container', {\n    [`cancel-details-container--has-${widgetState}-state`]: widgetState,\n  }, className);\n\n  const transactionUrl = useMemo(() => (submittedTransaction?.hash ? getReceiptUrl(chainId, submittedTransaction.hash) : undefined), [submittedTransaction]);\n  const expiryDate = useMemo(() => getFullOrderExpiryDate(fullOrder), [fullOrder]);\n  const readableSenderAmountPlusFees = useMemo(() => getFullOrderReadableSenderAmountPlusTotalFees(fullOrder, currencyTokenInfo), [fullOrder, currencyTokenInfo]);\n  const readableSenderAmount = useMemo(() => getFullOrderReadableSenderAmount(fullOrder, currencyTokenInfo), [fullOrder, currencyTokenInfo]);\n\n  return (\n    <div className={wrapperClassName}>\n      {widgetState === CancelOrderState.details && (\n        <>\n          <ReviewNftDetails\n            logoURI={collectionTokenInfo ? collectionTokenInfo.image : collectionImage}\n            title=\"Cancel\"\n            token={collectionTokenInfo}\n            className=\"cancel-details-container__review-nft-details\"\n          />\n          <SwapIcon className=\"cancel-details-container__swap-icon\" />\n          <ReviewTokenDetails\n            amount={readableSenderAmountPlusFees}\n            amountMinusProtocolFee={readableSenderAmount}\n            projectFeePercent={projectFee / 100}\n            protocolFeePercent={protocolFee / 100}\n            title=\"For\"\n            token={currencyTokenInfo}\n          />\n          <ExpiryDateInfo\n            expiry={expiryDate}\n            className=\"cancel-details-container__expiry-date-info\"\n          />\n        </>\n      )}\n\n      {widgetState === CancelOrderState.sign && (\n        <p className=\"cancel-details-container__message\">\n          If your wallet does not open something went wrong\n        </p>\n      )}\n\n      {widgetState === CancelOrderState.canceling && (\n        <>\n          <LoadingSpinner className=\"cancel-details-container__loading-spinner\" />\n          <TradeDetails\n            logoURI={collectionTokenInfo ? collectionTokenInfo.image : collectionImage}\n            title=\"Canceling\"\n            token={collectionTokenInfo}\n          />\n          {transactionUrl && (\n            <TransactionLink\n              to={transactionUrl}\n              className=\"cancel-details-container__transaction-link\"\n            />\n          )}\n        </>\n      )}\n\n      {(widgetState === CancelOrderState.success || widgetState === CancelOrderState.failed) && (\n        <>\n          <LoadingSpinner className=\"cancel-details-container__loading-spinner--is-hidden\" />\n          <TradeDetails\n            logoURI={collectionTokenInfo ? collectionTokenInfo.image : collectionImage}\n            title={widgetState === CancelOrderState.success ? 'Canceled' : 'Failed transaction'}\n            token={collectionTokenInfo}\n          />\n          {transactionUrl && (\n            <TransactionLink\n              to={transactionUrl}\n              className=\"cancel-details-container__transaction-link\"\n            />\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default CancelDetailsContainer;\n","import {\n  FC,\n  ReactElement,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\n\nimport { CollectionTokenInfo, FullOrder, TokenInfo } from '@airswap/types';\nimport { Web3Provider } from '@ethersproject/providers';\n\nimport OrderWidgetHeader from '../../../../compositions/OrderWidgetHeader/OrderWidgetHeader';\nimport { AppErrorType, isAppError } from '../../../../errors/appError';\nimport useCancelOrderTransaction from '../../../../hooks/useCancelOrderTransaction';\nimport useCollectionImage from '../../../../hooks/useCollectionImage';\nimport { useAppDispatch, useAppSelector } from '../../../../redux/hooks';\nimport { cancel } from '../../../../redux/stores/orders/ordersActions';\nimport { addUserRejectedToast } from '../../../../redux/stores/toasts/toastsActions';\nimport { getTitle } from '../../helpers';\nimport CancelActionButtons from '../CancelActionButtons/CancelActionButtons';\nimport CancelDetailsContainer from '../CancelDetailsContainer/CancelDetailsContainer';\n\nexport enum CancelOrderState {\n  details = 'details',\n  sign = 'sign',\n  canceling = 'canceling',\n  success = 'success',\n  failed = 'failed',\n}\n\ninterface ConnectedCancelOrderWidgetProps {\n  chainId: number\n  collectionTokenInfo: CollectionTokenInfo;\n  currencyTokenInfo: TokenInfo;\n  fullOrder: FullOrder;\n  library: Web3Provider\n  className?: string;\n}\n\nconst ConnectedCancelOrderWidget: FC<ConnectedCancelOrderWidgetProps> = ({\n  chainId,\n  collectionTokenInfo,\n  currencyTokenInfo,\n  fullOrder,\n  library,\n  className = '',\n}): ReactElement => {\n  const dispatch = useAppDispatch();\n  const { bannerImage } = useCollectionImage();\n\n  const [widgetState, setWidgetState] = useState<CancelOrderState>(CancelOrderState.details);\n  const [cancelTransactionHash, setCancelTransactionHash] = useState<string>();\n\n  const { protocolFee, projectFee } = useAppSelector(state => state.metadata);\n  const cancelOrderTransaction = useCancelOrderTransaction(cancelTransactionHash);\n\n  const title = useMemo(() => getTitle(widgetState), [widgetState]);\n\n  const handleActionButtonClick = async () => {\n    if (widgetState === CancelOrderState.details) {\n      setWidgetState(CancelOrderState.sign);\n      dispatch(cancel({ order: fullOrder, chainId, library }))\n        .unwrap()\n        .then((transactionHash) => {\n          if (typeof transactionHash === 'string') {\n            setCancelTransactionHash(transactionHash);\n          }\n        })\n        .catch((e) => {\n          if (isAppError(e) && e.type === AppErrorType.rejectedByUser) {\n            dispatch(addUserRejectedToast());\n            setWidgetState(CancelOrderState.details);\n          } else {\n            setWidgetState(CancelOrderState.failed);\n          }\n        });\n    }\n\n    if (widgetState === CancelOrderState.failed) {\n      setWidgetState(CancelOrderState.details);\n    }\n  };\n\n  useEffect(() => {\n    if (cancelOrderTransaction?.status === 'processing') {\n      setWidgetState(CancelOrderState.canceling);\n    }\n\n    if (cancelOrderTransaction?.status === 'succeeded') {\n      setWidgetState(CancelOrderState.success);\n    }\n\n    if (cancelOrderTransaction?.status === 'failed') {\n      setWidgetState(CancelOrderState.failed);\n    }\n  }, [cancelOrderTransaction]);\n\n  return (\n    <div className={`cancel-order-widget ${className}`}>\n      <OrderWidgetHeader\n        nftId={fullOrder.signer.id}\n        title={title}\n      />\n      <CancelDetailsContainer\n        chainId={chainId}\n        collectionImage={bannerImage}\n        collectionTokenInfo={collectionTokenInfo}\n        currencyTokenInfo={currencyTokenInfo}\n        fullOrder={fullOrder}\n        projectFee={projectFee}\n        protocolFee={protocolFee}\n        submittedTransaction={cancelOrderTransaction}\n        widgetState={widgetState}\n        className=\"cancel-order-widget__trade-details-container\"\n      />\n      <CancelActionButtons\n        nftId={fullOrder.signer.id}\n        state={widgetState}\n        onActionButtonClick={handleActionButtonClick}\n        className=\"cancel-order-widget__action-buttons\"\n      />\n    </div>\n  );\n};\n\nexport default ConnectedCancelOrderWidget;\n","import { CancelOrderState } from '../subcomponents/ConnectedCancelOrderWidget/ConnectedCancelOrderWidget';\n\nexport const getTitle = (state: CancelOrderState): string => {\n  if (state === CancelOrderState.sign) {\n    return 'Sign in Wallet';\n  }\n\n  if (state === CancelOrderState.canceling) {\n    return 'Canceling in progress';\n  }\n\n  if (state === CancelOrderState.success) {\n    return 'Successfully canceled';\n  }\n\n  if (state === CancelOrderState.failed) {\n    return 'Failed';\n  }\n\n  return 'Are you sure you want to cancel?';\n};\n","import React, { FC, ReactElement } from 'react';\n\nimport { FullOrder } from '@airswap/types';\n\nimport LoadingSpinner from '../../../../components/LoadingSpinner/LoadingSpinner';\nimport OrderWidgetHeader from '../../../../compositions/OrderWidgetHeader/OrderWidgetHeader';\n\ninterface DisconnectedCancelOrderWidgetProps {\n  isLoading: boolean;\n  isOrderNonceUsed: boolean;\n  fullOrder: FullOrder;\n  className?: string;\n}\n\nconst DisconnectedCancelOrderWidget: FC<DisconnectedCancelOrderWidgetProps> = ({\n  isLoading,\n  isOrderNonceUsed,\n  fullOrder,\n  className = '',\n}): ReactElement => (\n  <div className={`cancel-order-widget ${className}`}>\n    <OrderWidgetHeader\n      nftId={fullOrder.signer.id}\n      title=\"Are you sure you want to cancel?\"\n    />\n    <div className=\"cancel-order-widget__fail-details\">\n      {isOrderNonceUsed && 'Order nonce already used'}\n    </div>\n    {isLoading && <LoadingSpinner className=\"cancel-order-widget__loading-spinner\" />}\n  </div>\n);\n\nexport default DisconnectedCancelOrderWidget;\n","import { FC, ReactElement } from 'react';\n\nimport { FullOrder } from '@airswap/types';\n\nimport useCollectionToken from '../../hooks/useCollectionToken';\nimport useFullOrderNonceUsed from '../../hooks/useFullOrderNonceUsed';\nimport useWeb3ReactLibrary from '../../hooks/useWeb3ReactLibrary';\nimport { useAppSelector } from '../../redux/hooks';\nimport ConnectedCancelOrderWidget from './subcomponents/ConnectedCancelOrderWidget/ConnectedCancelOrderWidget';\nimport DisconnectedCancelOrderWidget from './subcomponents/DisconnectedCancelOrderWidget/DisconnectedCancelOrderWidget';\n\nimport './CancelOrderWidget.scss';\n\ninterface CancelOrderWidgetProps {\n  order: FullOrder;\n  className?: string;\n}\n\nconst CancelOrderWidget: FC<CancelOrderWidgetProps> = ({ order, className = '' }): ReactElement => {\n  const { library, chainId } = useWeb3ReactLibrary();\n  const tokenId = order.signer.id;\n\n  const { collectionToken } = useAppSelector((state) => state.config);\n\n  const { isLoading: isMetadataLoading, currencyTokenInfo } = useAppSelector(state => state.metadata);\n\n  const [collectionTokenInfo, isCollectionTokenInfoLoading] = useCollectionToken(collectionToken, tokenId);\n  const [isNonceUsed, isNonceUsedLoading] = useFullOrderNonceUsed(order, false);\n  const isLoading = isMetadataLoading || isCollectionTokenInfoLoading || isNonceUsedLoading;\n\n  if (\n    !isLoading\n    && !isNonceUsed\n    && chainId\n    && collectionTokenInfo\n    && currencyTokenInfo\n    && library\n  ) {\n    return (\n      <ConnectedCancelOrderWidget\n        chainId={chainId}\n        collectionTokenInfo={collectionTokenInfo}\n        currencyTokenInfo={currencyTokenInfo}\n        fullOrder={order}\n        library={library}\n        className={className}\n      />\n    );\n  }\n\n  return (\n    <DisconnectedCancelOrderWidget\n      isLoading={isLoading}\n      isOrderNonceUsed={isNonceUsed}\n      fullOrder={order}\n      className={className}\n    />\n  );\n};\n\nexport default CancelOrderWidget;\n","import React, { FC, ReactElement } from 'react';\n\nimport { FullOrder } from '@airswap/types';\n\nimport BuyNftWidget from '../../../BuyNftWidget/BuyNftWidget';\nimport CancelOrderWidget from '../../../CancelOrderWidget/CancelOrderWidget';\nimport NftDetailWidget from '../../../NftDetailWidget/NftDetailWidget';\n\ninterface ConnectedOrderDetailWidgetProps {\n  account?: string;\n  order: FullOrder;\n  className?: string;\n}\n\nconst ConnectedOrderDetailWidget: FC<ConnectedOrderDetailWidgetProps> = ({ account, order, className = '' }): ReactElement => {\n  const userIsOwner = account ? order.signer.wallet.toLowerCase() === account.toLowerCase() : false;\n\n  return (\n    <div className={`order-detail-widget ${className}`}>\n      <div className=\"order-detail-widget__nft-detail-widget\">\n        <NftDetailWidget tokenId={order.signer.id} />\n      </div>\n      <div className=\"order-detail-widget__buy-nft-widget-container\">\n        {userIsOwner ? (\n          <CancelOrderWidget\n            order={order}\n            className=\"order-detail-widget__cancel-order-widget\"\n          />\n        ) : (\n          <BuyNftWidget\n            order={order}\n            className=\"order-detail-widget__buy-nft-widget\"\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ConnectedOrderDetailWidget;\n","import React, { FC, ReactElement, useEffect } from 'react';\n\nimport { useWeb3React } from '@web3-react/core';\n\nimport DisconnectedOrderDetail from '../../compositions/DisconnectedOrderDetail/DisconnectedOrderDetail';\nimport useDefaultProvider from '../../hooks/useDefaultProvider';\nimport { useAppDispatch, useAppSelector } from '../../redux/hooks';\nimport { getNftOrderByOrderNonce } from '../../redux/stores/orderDetail/orderDetailApi';\nimport ConnectedOrderDetailWidget from './subcomponents/ConnectedOrderDetailWidget/ConnectedOrderDetailWidget';\n\nimport './OrderDetailWidget.scss';\n\ninterface OrderDetailWidgetProps {\n  orderNonce: string;\n  signerWallet: string;\n  className?: string;\n}\n\nconst OrderDetailWidget: FC<OrderDetailWidgetProps> = ({ orderNonce, signerWallet, className = '' }): ReactElement => {\n  const { chainId } = useAppSelector((state) => state.config);\n\n  const dispatch = useAppDispatch();\n  const provider = useDefaultProvider(chainId);\n  const { account } = useWeb3React();\n\n  const { isInitialized, isLoading: isIndexerLoading } = useAppSelector(state => state.indexer);\n  const { isOrderNotFound, isLoading: isOrderLoading, order } = useAppSelector(state => state.orderDetail);\n  const isLoading = isIndexerLoading || isOrderLoading;\n\n  useEffect(() => {\n    if (!isInitialized || !orderNonce || !provider) {\n      return;\n    }\n\n    dispatch(getNftOrderByOrderNonce({ orderNonce, signerWallet, provider }));\n  }, [isInitialized, orderNonce, provider]);\n\n  if (\n    isInitialized\n    && !isLoading\n    && order\n  ) {\n    return (\n      <ConnectedOrderDetailWidget\n        account={account || undefined}\n        order={order}\n        className={className}\n      />\n    );\n  }\n\n  return (\n    <DisconnectedOrderDetail\n      isLoading={isLoading}\n      isOrderNotFound={isOrderNotFound}\n      orderNonce={orderNonce}\n      className={className}\n    />\n  );\n};\n\nexport default OrderDetailWidget;\n","import React, { FC } from 'react';\n\nimport { useParams } from 'react-router-dom';\n\nimport DisconnectedOrderDetail from '../../compositions/DisconnectedOrderDetail/DisconnectedOrderDetail';\nimport Helmet from '../../compositions/Helmet/Helmet';\nimport Page from '../../compositions/Page/Page';\nimport OrderDetailWidget from '../../widgets/OrderDetailWidget/OrderDetailWidget';\n\nimport './OrderDetailPage.scss';\n\nconst OrderDetailPage: FC = () => {\n  const { account, orderNonce } = useParams<{ account: string, orderNonce: string }>();\n\n  if (!orderNonce || !account) {\n    return (\n      <Page className=\"order-detail-page\">\n        <DisconnectedOrderDetail isOrderNonceUndefined />\n      </Page>\n    );\n  }\n\n  return (\n    <Page className=\"order-detail-page\">\n      <Helmet title=\"Order detail\" />\n      <OrderDetailWidget orderNonce={orderNonce} signerWallet={account} />\n    </Page>\n  );\n};\n\nexport default OrderDetailPage;\n","import { getAccountUrl } from '@airswap/utils';\n\nconst getOwnedTokensByAccountUrl = (chainId: number, account: string, contract: string): string => {\n  const accountUrl = getAccountUrl(chainId, account);\n  const [etherScanUrl] = accountUrl.split('/address/');\n\n  return `${etherScanUrl}/token/${contract}?a=${account}`;\n};\n\nexport default getOwnedTokensByAccountUrl;\n","import { FC, ReactElement } from 'react';\n\nimport { NavLink, NavLinkProps } from 'react-router-dom';\n\nimport './ProfileNavigationNavLink.scss';\n\ninterface ProfileNavigationNavLinkProps extends NavLinkProps {\n  className?: string;\n}\n\nconst ProfileNavigationNavLink: FC<ProfileNavigationNavLinkProps> = ({ className = '', ...props }): ReactElement => (\n  <NavLink\n    {...props}\n    className={`profile-navigation-nav-link ${className}`}\n  />\n);\n\nexport default ProfileNavigationNavLink;\n","import { FC, ReactElement } from 'react';\n\nimport { routes } from '../../../../routes';\nimport ProfileNavigationNavLink from '../ProfileNavigationNavLink/ProfileNavigationNavLink';\n\nimport './ProfileNavigation.scss';\n\ninterface ProfileNavigationProps {\n  account: string;\n  className?: string;\n}\n\nconst ProfileNavigation: FC<ProfileNavigationProps> = ({ account, className = '' }): ReactElement => (\n  <div className={`profile-navigation ${className}`}>\n    <ProfileNavigationNavLink to={routes.profile(account)}>\n      All tokens\n    </ProfileNavigationNavLink>\n    <ProfileNavigationNavLink\n      to=\"activity\"\n      aria-disabled\n    >\n      Activity\n    </ProfileNavigationNavLink>\n    <ProfileNavigationNavLink\n      to={routes.userOrders(account)}\n    >\n      For sale\n    </ProfileNavigationNavLink>\n  </div>\n);\n\nexport default ProfileNavigation;\n","import React, { FC } from 'react';\n\nimport WalletInfo from '../../../../components/WalletInfo/WalletInfo';\nimport ProfileNavigation from '../ProfileNavigation/ProfileNavigation';\n\nimport './ProfileHeader.scss';\n\ninterface ProfileHeaderProp {\n  accountUrl?: string;\n  avatarUrl?: string;\n  address?: string;\n  backgroundImage?: string;\n  ensAddress?: string;\n  className?: string;\n}\n\nconst ProfileHeader: FC<ProfileHeaderProp> = ({\n  accountUrl,\n  avatarUrl,\n  ensAddress,\n  address,\n  backgroundImage,\n  className = '',\n}) => (\n  <div\n    className={`profile-header ${className}`}\n  >\n    <div\n      style={{ backgroundImage: `url(\"${backgroundImage}\")` }}\n      className=\"profile-header__portrait\"\n    >\n      <WalletInfo\n        isBanner\n        accountUrl={accountUrl}\n        avatarUrl={avatarUrl}\n        ensAddress={ensAddress}\n        address={address}\n        className=\"profile-header__wallet-info\"\n      />\n    </div>\n\n    <div className=\"profile-header__navigation-container\">\n      {address && (\n        <ProfileNavigation\n          account={address}\n          className=\"profile-header__navigation\"\n        />\n      )}\n    </div>\n  </div>\n);\n\n\nexport default ProfileHeader;\n","import { FC, useMemo } from 'react';\n\nimport LoadingSpinner from '../../../../components/LoadingSpinner/LoadingSpinner';\nimport SearchInput from '../../../../components/SearchInput/SearchInput';\nimport getOwnedTokensByAccountUrl from '../../../../helpers/airswap/getOwnedTokensByAccountUrl';\nimport useCollectionImage from '../../../../hooks/useCollectionImage';\nimport useEnsAddress from '../../../../hooks/useEnsAddress';\nimport { useAppSelector } from '../../../../redux/hooks';\nimport ProfileHeader from '../ProfileHeader/ProfileHeader';\n\ninterface ConnectedProfileWidgetProps {\n  profileAccount?: string;\n  className?: string;\n}\n\nconst ConnectedProfileWidget: FC<ConnectedProfileWidgetProps> = ({\n  profileAccount,\n  className = '',\n}) => {\n  const { bannerImage } = useCollectionImage();\n\n  const { chainId, collectionToken } = useAppSelector((state) => state.config);\n  const { avatarUrl } = useAppSelector((state) => state.user);\n\n  const ensAddress = useEnsAddress(profileAccount);\n  const accountUrl = useMemo(() => (\n    profileAccount ? getOwnedTokensByAccountUrl(chainId, profileAccount, collectionToken) : undefined\n  ), [profileAccount, chainId, collectionToken]);\n\n  return (\n    <div className={`profile-orders ${className}`}>\n      <ProfileHeader\n        accountUrl={accountUrl}\n        avatarUrl={avatarUrl}\n        backgroundImage={bannerImage}\n        ensAddress={ensAddress}\n        address={profileAccount}\n        className=\"profile-widget__header\"\n      />\n      <div className=\"profile-widget__content\">\n        <SearchInput\n          disabled\n          placeholder=\"Search tokens\"\n          value=\"\"\n          className=\"profile-widget__search-input\"\n        />\n        <LoadingSpinner className=\"profile-widget__loading-spinner\" />\n      </div>\n    </div>\n  );\n};\n\nexport default ConnectedProfileWidget;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nimport { INDEXER_ORDERS_OFFSET } from '../../../constants/indexer';\nimport { ExtendedFullOrder } from '../../../entities/FullOrder/FullOrder';\nimport { getProfileOrders } from './profileOrdersApi';\n\nexport interface ProfileOrdersState {\n  hasServerError: boolean;\n  isLoading: boolean;\n  isTotalOrdersReached: boolean;\n  offset: number;\n  orders: ExtendedFullOrder[];\n}\n\nconst initialState: ProfileOrdersState = {\n  hasServerError: false,\n  isLoading: false,\n  isTotalOrdersReached: false,\n  offset: 0,\n  orders: [],\n};\n\nconst profileSlice = createSlice({\n  name: 'profileOrders',\n  initialState,\n  reducers: {\n    reset: (): ProfileOrdersState => ({\n      ...initialState,\n    }),\n    setOrders: (state, action: PayloadAction<ExtendedFullOrder[]>): ProfileOrdersState => ({\n      ...state,\n      orders: action.payload,\n    }),\n    setOrdersOffset: (state, action: PayloadAction<number>): ProfileOrdersState => ({\n      ...state,\n      offset: action.payload,\n    }),\n  },\n  extraReducers: builder => {\n    builder.addCase(getProfileOrders.pending, (state): ProfileOrdersState => ({\n      ...state,\n      isLoading: true,\n    }));\n\n    builder.addCase(getProfileOrders.fulfilled, (state, action): ProfileOrdersState => {\n      const newOrders = [\n        ...state.orders,\n        ...action.payload,\n      ];\n      const isTotalOrdersReached = action.payload.length < INDEXER_ORDERS_OFFSET;\n\n      return {\n        ...state,\n        isLoading: false,\n        isTotalOrdersReached,\n        orders: newOrders,\n      };\n    });\n\n    builder.addCase(getProfileOrders.rejected, (state, action): ProfileOrdersState => {\n      console.error('profileOrders/getProfileOrders', action);\n\n      return {\n        ...state,\n        hasServerError: true,\n        isTotalOrdersReached: true,\n        isLoading: false,\n      };\n    });\n  },\n});\n\nexport const {\n  reset,\n  setOrders,\n  setOrdersOffset,\n} = profileSlice.actions;\n\nexport default profileSlice.reducer;\n","import { BaseProvider } from '@ethersproject/providers';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\nimport { ExtendedFullOrder } from '../../../entities/FullOrder/FullOrder';\nimport { OrderFilter } from '../../../entities/OrderFilter/OrderFilter';\nimport { getOrdersFromIndexers } from '../../../helpers/indexers';\nimport { AppThunkApiConfig } from '../../store';\nimport { addGetOrderFailedToast } from '../toasts/toastsActions';\nimport { setOrdersOffset } from './profileOrdersSlice';\n\ninterface GetProfileOrdersParams extends OrderFilter {\n  provider: BaseProvider;\n}\n\nexport const getProfileOrders = createAsyncThunk<\nExtendedFullOrder[],\nGetProfileOrdersParams,\nAppThunkApiConfig\n>('profileOrders/getProfileOrders', async ({ provider, ...filter }, { dispatch, getState }) => {\n  const { indexer } = getState();\n\n  try {\n    dispatch(setOrdersOffset((filter.limit || 0) + (filter.offset || 0)));\n\n    return await getOrdersFromIndexers(filter, indexer.urls, provider);\n  } catch {\n    dispatch(addGetOrderFailedToast());\n\n    throw new Error('Failed to get orders');\n  }\n});\n","const getListCallToActionText = (searchValue: string, userHasOrders: boolean, hasServerError: boolean): string => {\n  if (hasServerError) {\n    return 'Unable to fetch listings.';\n  }\n\n  if (userHasOrders && searchValue.length) {\n    return 'No listing results. Try another search term.';\n  }\n\n  return 'No active listings by this wallet.';\n};\n\nexport default getListCallToActionText;\n","import React, {\n  FC,\n  ReactElement,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\n\nimport { TokenInfo } from '@airswap/types';\nimport { BaseProvider } from '@ethersproject/providers';\nimport { useSearchParams } from 'react-router-dom';\n\nimport SearchInput from '../../../../components/SearchInput/SearchInput';\nimport Helmet from '../../../../compositions/Helmet/Helmet';\nimport { INDEXER_ORDERS_OFFSET } from '../../../../constants/indexer';\nimport OrdersContainer from '../../../../containers/OrdersContainer/OrdersContainer';\nimport { filterCollectionTokenBySearchValue } from '../../../../entities/CollectionToken/CollectionTokenHelpers';\nimport getOwnedTokensByAccountUrl from '../../../../helpers/airswap/getOwnedTokensByAccountUrl';\nimport useCollectionImage from '../../../../hooks/useCollectionImage';\nimport useCollectionTokens from '../../../../hooks/useCollectionTokens';\nimport useEnsAddress from '../../../../hooks/useEnsAddress';\nimport useScrollToBottom from '../../../../hooks/useScrollToBottom';\nimport { useAppDispatch, useAppSelector } from '../../../../redux/hooks';\nimport { getProfileOrders } from '../../../../redux/stores/profileOrders/profileOrdersApi';\nimport { reset } from '../../../../redux/stores/profileOrders/profileOrdersSlice';\nimport ProfileHeader from '../../../ProfileWidget/subcomponents/ProfileHeader/ProfileHeader';\nimport getListCallToActionText from '../../helpers/getListCallToActionText';\n\ninterface ConnectedProfileOrdersWidgetProps {\n  account?: string;\n  currencyTokenInfo: TokenInfo;\n  profileAccount: string;\n  provider: BaseProvider;\n  className?: string;\n}\n\nconst ConnectedProfileOrdersWidget: FC<ConnectedProfileOrdersWidgetProps> = ({\n  account,\n  currencyTokenInfo,\n  profileAccount,\n  provider,\n  className = '',\n}): ReactElement => {\n  const dispatch = useAppDispatch();\n  const [searchParams] = useSearchParams();\n  const { bannerImage } = useCollectionImage();\n  const scrolledToBottom = useScrollToBottom();\n\n  const { chainId, collectionToken } = useAppSelector((state) => state.config);\n  const { tokenIdsWithBalance: userTokenIdsWithBalance } = useAppSelector((state) => state.balances);\n  const { avatarUrl } = useAppSelector((state) => state.user);\n  const {\n    hasServerError,\n    isLoading,\n    isTotalOrdersReached,\n    offset,\n    orders,\n  } = useAppSelector((state) => state.profileOrders);\n\n  const userTokens = Object.keys(userTokenIdsWithBalance);\n  const highlightOrderNonce = searchParams.get('highlightOrderNonce');\n  const [searchValue, setSearchValue] = useState('');\n\n  const ensAddress = useEnsAddress(profileAccount);\n  const accountUrl = useMemo(() => (\n    profileAccount ? getOwnedTokensByAccountUrl(chainId, profileAccount, collectionToken) : undefined\n  ), [profileAccount, chainId, collectionToken]);\n  const tokenIds = useMemo(() => orders.map(order => order.signer.id), [orders]);\n  const [tokens] = useCollectionTokens(collectionToken, tokenIds);\n  const filteredOrders = useMemo(() => (\n    orders.filter(order => {\n      const orderToken = tokens.find(token => token.id === order.signer.id);\n\n      return orderToken ? filterCollectionTokenBySearchValue(orderToken, searchValue) : true;\n    })), [orders, tokens, searchValue]);\n  const userIsProfileAccount = account === profileAccount;\n  const listCallToActionText = getListCallToActionText(searchValue, !!orders.length, hasServerError);\n\n  const getOrders = () => {\n    if (isLoading || isTotalOrdersReached) {\n      return;\n    }\n\n    dispatch(getProfileOrders({\n      signerWallet: profileAccount,\n      offset,\n      limit: INDEXER_ORDERS_OFFSET,\n      provider,\n    }));\n  };\n\n  useEffect((): () => void => {\n    getOrders();\n\n    return () => dispatch(reset());\n  }, []);\n\n  useEffect(() => {\n    if (scrolledToBottom) {\n      getOrders();\n    }\n  }, [scrolledToBottom]);\n\n  return (\n    <div className={`profile-orders-widget ${className}`}>\n      <Helmet title={`Listed orders of ${ensAddress || profileAccount}`} />\n      <ProfileHeader\n        accountUrl={accountUrl}\n        address={profileAccount}\n        avatarUrl={avatarUrl}\n        backgroundImage={bannerImage}\n        ensAddress={ensAddress}\n        className=\"profile-widget__header\"\n      />\n\n      <div className=\"profile-orders-widget__content\">\n        <SearchInput\n          placeholder=\"Search listings\"\n          onChange={e => setSearchValue(e.target.value)}\n          value={searchValue || ''}\n          className=\"profile-orders-widget__search-input\"\n        />\n        <OrdersContainer\n          hasListCallToActionButton={!!userTokens.length && userIsProfileAccount && !hasServerError}\n          isEndOfOrders={isTotalOrdersReached}\n          isLoading={isLoading || offset === 0}\n          showExpiryDate\n          currencyTokenInfo={currencyTokenInfo}\n          highlightOrderNonce={highlightOrderNonce || undefined}\n          listCallToActionText={listCallToActionText}\n          orders={filteredOrders}\n          tokens={tokens}\n          className=\"profile-orders-widget__nfts-container\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default ConnectedProfileOrdersWidget;\n","import { FC } from 'react';\n\nimport { useParams } from 'react-router-dom';\n\nimport useDefaultProvider from '../../hooks/useDefaultProvider';\nimport { useAppSelector } from '../../redux/hooks';\nimport DisconnectedProfileWidget\n  from '../ProfileWidget/subcomponents/DisconnectedProfileWidget/DisconnectedProfileWidget';\nimport ConnectedProfileOrdersWidget from './subcomponents/ConnectedProfileOrdersWidget/ConnectedProfileOrdersWidget';\n\nimport './ProfileOrdersWidget.scss';\n\nconst ProfileOrdersWidget: FC = () => {\n  const { account: profileAccount } = useParams();\n\n  const { chainId } = useAppSelector((state) => state.config);\n  const { account } = useAppSelector((state) => state.web3);\n  const { isInitialized } = useAppSelector((state) => state.indexer);\n  const { currencyTokenInfo } = useAppSelector((state) => state.metadata);\n\n  const provider = useDefaultProvider(chainId);\n\n  if (\n    isInitialized\n    && currencyTokenInfo\n    && profileAccount\n    && provider\n  ) {\n    return (\n      <ConnectedProfileOrdersWidget\n        account={account}\n        currencyTokenInfo={currencyTokenInfo}\n        profileAccount={profileAccount}\n        provider={provider}\n      />\n    );\n  }\n\n  return (\n    <DisconnectedProfileWidget\n      profileAccount={profileAccount}\n    />\n  );\n};\n\nexport default ProfileOrdersWidget;\n","import React, { FC } from 'react';\n\nimport Page from '../../compositions/Page/Page';\nimport ProfileOrdersWidget from '../../widgets/ProfileOrdersWidget/ProfileOrdersWidget';\n\nimport './ProfileOrdersPage.scss';\n\nconst ProfileOrdersPage: FC = () => (\n  <Page\n    className=\"profile-page\"\n    contentClassName=\"profile-page__content\"\n  >\n    <ProfileOrdersWidget />\n  </Page>\n);\n\nexport default ProfileOrdersPage;\n","import { OwnedNft } from 'alchemy-sdk';\n\nimport { TokenIdsWithBalance } from './TokenIdsWithBalance';\n\nexport const transformTokensToTokenIdsWithBalance = (tokens: string[]): TokenIdsWithBalance => tokens\n  .sort((a, b) => +a - +b)\n  .reduce((acc: TokenIdsWithBalance, tokenId: string) => {\n    acc[tokenId] = '1';\n\n    return acc;\n  }, {});\n\nexport const transformOwnedNftsToTokenIdsWithBalance = (ownedNfts: OwnedNft[]): TokenIdsWithBalance => ownedNfts\n  .reduce((acc: TokenIdsWithBalance, ownedNft: OwnedNft) => {\n    acc[ownedNft.tokenId] = ownedNft.balance;\n\n    return acc;\n  }, {});\n","import { TokenKinds } from '@airswap/constants';\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport { Event } from '@ethersproject/contracts';\nimport erc721AbiContract from '@openzeppelin/contracts/build/contracts/ERC721.json';\nimport erc721EnumerableContract from '@openzeppelin/contracts/build/contracts/ERC721Enumerable.json';\nimport { BigNumber, ethers } from 'ethers';\n\nimport { TokenIdsWithBalance } from '../../../entities/TokenIdsWithBalance/TokenIdsWithBalance';\nimport {\n  transformOwnedNftsToTokenIdsWithBalance,\n  transformTokensToTokenIdsWithBalance,\n} from '../../../entities/TokenIdsWithBalance/TokenIdsWithBalanceTransformers';\nimport { getUniqueSingleDimensionArray } from '../../../helpers/array';\n\nconst getUniqueTokenIds = (tokenIds: BigNumber[]): string[] => tokenIds\n  .sort((a, b) => a.sub(b).toNumber())\n  .map(t => t.toString())\n  .filter(getUniqueSingleDimensionArray);\n\nconst getOwnedErc721TokensByFilteringEvents = async (\n  provider: ethers.providers.BaseProvider,\n  walletAddress: string,\n  collectionToken: string,\n): Promise<TokenIdsWithBalance> => {\n  const contract = new ethers.Contract(collectionToken, erc721AbiContract.abi, provider);\n  const transferFilter = contract.filters.Transfer(null, walletAddress);\n\n  const events: Event[] = await contract.queryFilter(transferFilter, 0);\n\n  /* get token ids from past events */\n  const foundTokenIds: BigNumber[] = events.map(e => e.args?.at(2));\n  const uniqueTokenIds = getUniqueTokenIds(foundTokenIds);\n\n  /* get owners of tokens */\n  const tokenOwners: string[] = await Promise.all(\n    uniqueTokenIds.map(tokenId => contract.ownerOf(tokenId)),\n  );\n\n  /* get only the owned token ids */\n  const ownedTokenIds = uniqueTokenIds.filter((_, index) => tokenOwners[index] === walletAddress);\n\n  return transformTokensToTokenIdsWithBalance(ownedTokenIds);\n};\n\nconst getOwnedErc721EnumerableTokensByFilteringEvents = async (\n  provider: ethers.providers.BaseProvider,\n  walletAddress: string,\n  collectionToken: string,\n): Promise<TokenIdsWithBalance> => {\n  const contract = new ethers.Contract(collectionToken, erc721EnumerableContract.abi, provider);\n\n  const balance: number = await contract.balanceOf(walletAddress);\n  const indexes = Array.from({ length: balance }, (_, i) => i);\n\n  const tokenIdsPromises = indexes.map(async index => (await contract.tokenOfOwnerByIndex(walletAddress, BigNumber.from(index))) as BigNumber);\n  const tokenIds = await Promise.all(tokenIdsPromises);\n\n  return transformTokensToTokenIdsWithBalance(tokenIds.map(tokenId => tokenId.toString()));\n};\n\nconst getOwnedTokensByAlchemy = async (walletAddress: string, collectionToken: string): Promise<TokenIdsWithBalance> => {\n  const response = await alchemy.nft.getNftsForOwner(walletAddress, { contractAddresses: [collectionToken], withMetadata: false });\n\n  return transformOwnedNftsToTokenIdsWithBalance(response.ownedNfts);\n};\n\nexport const getOwnedTokenIdsOfWallet = async (\n  provider: ethers.providers.BaseProvider,\n  walletAddress: string,\n  collectionToken: string,\n): Promise<TokenIdsWithBalance> => {\n  const contract = new ethers.Contract(collectionToken, erc721AbiContract.abi, provider);\n\n  const [isErc721Enumerable, isErc721, isErc1155] = await Promise.all([\n    contract.supportsInterface('0x780e9d63'), // The interface ID for erc721 enumerable\n    contract.supportsInterface(TokenKinds.ERC721),\n    contract.supportsInterface(TokenKinds.ERC1155),\n  ]) as boolean[];\n\n\n  if (isErc721) {\n    try {\n      return await getOwnedErc721TokensByFilteringEvents(provider, walletAddress, collectionToken);\n    } catch {\n      return getOwnedTokensByAlchemy(walletAddress, collectionToken);\n    }\n  }\n\n  if (isErc721Enumerable) {\n    try {\n      return await getOwnedErc721EnumerableTokensByFilteringEvents(provider, walletAddress, collectionToken);\n    } catch {\n      return getOwnedTokensByAlchemy(walletAddress, collectionToken);\n    }\n  }\n\n  if (isErc1155) {\n    return getOwnedTokensByAlchemy(walletAddress, collectionToken);\n  }\n\n  throw new Error('Unknown nft interface. Could not fetch token ids.');\n};\n","import { BaseProvider } from '@ethersproject/providers';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\nimport { ethers } from 'ethers';\n\nimport { ExtendedFullOrder } from '../../../entities/FullOrder/FullOrder';\nimport { OrderFilter } from '../../../entities/OrderFilter/OrderFilter';\nimport { TokenIdsWithBalance } from '../../../entities/TokenIdsWithBalance/TokenIdsWithBalance';\nimport { getOrdersFromIndexers } from '../../../helpers/indexers';\nimport { FullOrderState } from '../../../types/FullOrderState';\nimport { AppThunkApiConfig } from '../../store';\nimport { getOwnedTokenIdsOfWallet } from '../balances/balancesHelpers';\n\ninterface GetProfileOrdersParams extends OrderFilter {\n  provider: BaseProvider;\n}\n\nexport const getProfileOrders = createAsyncThunk<\nExtendedFullOrder[],\nGetProfileOrdersParams,\nAppThunkApiConfig\n>('profile/getProfileOrders', async ({ provider, ...filter }, { getState }) => {\n  const { indexer } = getState();\n\n  const orders = await getOrdersFromIndexers({\n    ...filter,\n    offset: 0,\n    limit: 9999,\n  }, indexer.urls, provider);\n\n  return orders.filter((order) => order.state === FullOrderState.open);\n});\n\ninterface GetOwnedTokensOfAccountParams {\n  account: string,\n  provider: ethers.providers.BaseProvider,\n}\n\nexport const getProfileTokens = createAsyncThunk<\nTokenIdsWithBalance,\nGetOwnedTokensOfAccountParams,\nAppThunkApiConfig\n>('profile/getProfileTokens', async ({ account, provider }, { getState }) => {\n  const { config } = getState();\n\n  return getOwnedTokenIdsOfWallet(provider, account, config.collectionToken);\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nimport { ExtendedFullOrder } from '../../../entities/FullOrder/FullOrder';\nimport { TokenIdsWithBalance } from '../../../entities/TokenIdsWithBalance/TokenIdsWithBalance';\nimport { getProfileOrders, getProfileTokens } from './profileApi';\n\nexport interface ProfileState {\n  isLoadingOrders: boolean;\n  isLoadingTokens: boolean;\n  isTotalOrdersReached: boolean;\n  orders: ExtendedFullOrder[];\n  tokenIdsWithBalance: TokenIdsWithBalance;\n  tokensOffset: number;\n}\n\nexport const tokensOffsetInterval = 16;\n\nconst initialState: ProfileState = {\n  isLoadingOrders: false,\n  isLoadingTokens: false,\n  isTotalOrdersReached: false,\n  orders: [],\n  tokenIdsWithBalance: {},\n  tokensOffset: tokensOffsetInterval,\n};\n\nconst profileSlice = createSlice({\n  name: 'profile',\n  initialState,\n  reducers: {\n    reset: (): ProfileState => ({\n      ...initialState,\n    }),\n    setTokensOffset: (state, action: PayloadAction<number>): ProfileState => ({\n      ...state,\n      tokensOffset: action.payload,\n    }),\n  },\n  extraReducers: builder => {\n    builder.addCase(getProfileOrders.pending, (state): ProfileState => ({\n      ...state,\n      isLoadingOrders: true,\n    }));\n\n    builder.addCase(getProfileOrders.fulfilled, (state, action): ProfileState => {\n      const newOrders = [\n        ...state.orders,\n        ...action.payload,\n      ];\n\n      return {\n        ...state,\n        isLoadingOrders: false,\n        orders: newOrders,\n      };\n    });\n\n    builder.addCase(getProfileOrders.rejected, (state, action): ProfileState => {\n      console.error('profile/getProfileOrders', action);\n\n      return {\n        ...state,\n        isLoadingOrders: false,\n      };\n    });\n\n    builder.addCase(getProfileTokens.pending, (state): ProfileState => ({\n      ...state,\n      isLoadingTokens: true,\n    }));\n\n    builder.addCase(getProfileTokens.fulfilled, (state, action): ProfileState => ({\n      ...state,\n      isLoadingTokens: false,\n      tokenIdsWithBalance: action.payload,\n    }));\n\n    builder.addCase(getProfileTokens.rejected, (state, action): ProfileState => {\n      console.error('profile/getProfileTokens', action);\n\n      return {\n        ...state,\n        isLoadingTokens: false,\n      };\n    });\n  },\n});\n\nexport const {\n  reset,\n  setTokensOffset,\n} = profileSlice.actions;\n\nexport default profileSlice.reducer;\n","const getEmptyStateText = (searchValue: string, userHasTokens: boolean): string => {\n  if (userHasTokens && searchValue.length) {\n    return 'No tokens found. Try another search term.';\n  }\n\n  return 'No tokens held by this wallet.';\n};\n\nexport default getEmptyStateText;\n","import { FC, ReactElement } from 'react';\n\nimport { CollectionTokenInfo, TokenInfo } from '@airswap/types';\n\nimport Icon from '../../../../components/Icon/Icon';\nimport LoadingSpinner from '../../../../components/LoadingSpinner/LoadingSpinner';\nimport NftCard from '../../../../components/NftCard/NftCard';\nimport { ExtendedFullOrder } from '../../../../entities/FullOrder/FullOrder';\nimport { getFullOrderReadableSenderAmountPlusTotalFees } from '../../../../entities/FullOrder/FullOrderHelpers';\nimport { TokenIdsWithBalance } from '../../../../entities/TokenIdsWithBalance/TokenIdsWithBalance';\nimport { routes } from '../../../../routes';\n\nimport './OwnedNftsContainer.scss';\n\ninterface OwnedNftsContainerProps {\n  isEndOfTokens: boolean;\n  isLoading: boolean;\n  currencyTokenInfo: TokenInfo;\n  highlightTokenId?: string;\n  orders: ExtendedFullOrder[];\n  tokenIdsWithBalance: TokenIdsWithBalance;\n  tokens: CollectionTokenInfo[];\n  className?: string;\n}\n\nconst OwnedNftsContainer: FC<OwnedNftsContainerProps> = ({\n  isEndOfTokens,\n  isLoading,\n  currencyTokenInfo,\n  highlightTokenId,\n  orders,\n  tokenIdsWithBalance,\n  tokens,\n  className = '',\n}): ReactElement => (\n  <div className={`owned-nfts-container ${className}`}>\n    <div className=\"owned-nfts-container__tokens\">\n      {tokens.map((nft) => {\n        const balance = tokenIdsWithBalance[nft.id];\n        const tokenOrder = orders.find(order => order.signer.id === nft.id);\n        const price = (tokenOrder && currencyTokenInfo) ? getFullOrderReadableSenderAmountPlusTotalFees(tokenOrder, currencyTokenInfo) : undefined;\n        const isHighlighted = highlightTokenId === nft.id;\n\n        return (\n          <NftCard\n            key={nft.id}\n            isHighlighted={isHighlighted}\n            balance={(balance && balance !== '1') ? balance : undefined}\n            id={nft.id}\n            imageURI={nft.image}\n            label={isHighlighted ? 'Newly bought' : undefined}\n            name={nft.name}\n            price={price}\n            to={routes.nftDetail(nft.id)}\n            symbol={currencyTokenInfo?.symbol}\n            className=\"profile-widget__nft-card\"\n          />\n        );\n      })}\n    </div>\n    {isLoading && <LoadingSpinner className=\"owned-nfts-container__loader\" />}\n    {(!isLoading && isEndOfTokens) && <Icon name=\"airswap\" className=\"owned-nfts-container__end-of-orders-icon\" />}\n  </div>\n);\n\nexport default OwnedNftsContainer;\n","import {\n  FC,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\n\nimport { TokenInfo } from '@airswap/types';\nimport { BaseProvider } from '@ethersproject/providers';\nimport { useSearchParams } from 'react-router-dom';\n\nimport SearchInput from '../../../../components/SearchInput/SearchInput';\nimport EmptyState from '../../../../compositions/EmptyState/EmptyState';\nimport Helmet from '../../../../compositions/Helmet/Helmet';\nimport { INDEXER_ORDERS_OFFSET } from '../../../../constants/indexer';\nimport { filterCollectionTokenBySearchValue } from '../../../../entities/CollectionToken/CollectionTokenHelpers';\nimport getOwnedTokensByAccountUrl from '../../../../helpers/airswap/getOwnedTokensByAccountUrl';\nimport useCollectionImage from '../../../../hooks/useCollectionImage';\nimport useCollectionTokens from '../../../../hooks/useCollectionTokens';\nimport useEnsAddress from '../../../../hooks/useEnsAddress';\nimport useScrollToBottom from '../../../../hooks/useScrollToBottom';\nimport { useAppDispatch, useAppSelector } from '../../../../redux/hooks';\nimport { getProfileOrders, getProfileTokens } from '../../../../redux/stores/profile/profileApi';\nimport { reset, setTokensOffset } from '../../../../redux/stores/profile/profileSlice';\nimport getEmptyStateText from '../../helpers/getEmptyTokensText';\nimport OwnedNftsContainer from '../OwnedNftsContainer/OwnedNftsContainer';\nimport ProfileHeader from '../ProfileHeader/ProfileHeader';\n\ninterface ConnectedProfileWidgetProps {\n  currencyTokenInfo: TokenInfo;\n  library: BaseProvider;\n  profileAccount: string;\n  className?: string;\n}\n\nconst ConnectedProfileWidget: FC<ConnectedProfileWidgetProps> = ({\n  currencyTokenInfo,\n  library,\n  profileAccount,\n  className = '',\n}) => {\n  const dispatch = useAppDispatch();\n  const [searchParams] = useSearchParams();\n  const scrolledToBottom = useScrollToBottom();\n  const { bannerImage } = useCollectionImage();\n\n  const { chainId, collectionToken } = useAppSelector((state) => state.config);\n  const { avatarUrl } = useAppSelector((state) => state.user);\n  const {\n    isLoadingTokens: isLoadingUserTokens,\n    tokenIdsWithBalance,\n    orders,\n    tokensOffset,\n  } = useAppSelector((state) => state.profile);\n\n  const ownedTokenIds = Object.keys(tokenIdsWithBalance);\n  const highlightTokenId = searchParams.get('highlightTokenId');\n  const [searchValue, setSearchValue] = useState('');\n\n  const shouldHighlightToken = !!(highlightTokenId && ownedTokenIds.length);\n  const sortedOwnedTokenIds = [...(shouldHighlightToken ? [highlightTokenId] : []), ...ownedTokenIds.filter(token => token !== highlightTokenId)];\n\n  const isEndOfTokens = tokensOffset >= sortedOwnedTokenIds.length;\n  const ensAddress = useEnsAddress(profileAccount);\n  const accountUrl = useMemo(() => (\n    profileAccount ? getOwnedTokensByAccountUrl(chainId, profileAccount, collectionToken) : undefined\n  ), [profileAccount, chainId, collectionToken]);\n  const [tokens, isLoadingTokens, tokensError] = useCollectionTokens(collectionToken, sortedOwnedTokenIds.splice(0, tokensOffset));\n\n  const isLoading = isLoadingUserTokens || isLoadingTokens;\n  const filteredTokens = useMemo(() => (tokens\n    .filter(nft => filterCollectionTokenBySearchValue(nft, searchValue))\n    .slice(0, tokensOffset)\n  ), [tokens, tokensOffset, searchValue]);\n  const emptyStateText = getEmptyStateText(searchValue, !!tokens.length);\n\n  useEffect((): () => void => {\n    dispatch(getProfileOrders({\n      signerWallet: profileAccount,\n      provider: library,\n    }));\n\n    dispatch(getProfileTokens({ account: profileAccount, provider: library }));\n\n    return () => {\n      dispatch(reset());\n    };\n  }, [profileAccount]);\n\n  useEffect(() => {\n    if (scrolledToBottom && !isEndOfTokens && !tokensError) {\n      dispatch(setTokensOffset(tokensOffset + INDEXER_ORDERS_OFFSET));\n    }\n  }, [scrolledToBottom]);\n\n  return (\n    <div className={`profile-widget ${className}`}>\n      <Helmet title={`Owned nft's of ${ensAddress || profileAccount}`} />\n      <ProfileHeader\n        accountUrl={accountUrl}\n        address={profileAccount}\n        avatarUrl={avatarUrl}\n        backgroundImage={bannerImage}\n        ensAddress={ensAddress}\n        className=\"profile-widget__header\"\n      />\n      <div className=\"profile-widget__content\">\n        <SearchInput\n          placeholder=\"Search tokens\"\n          value={searchValue}\n          onChange={(e) => setSearchValue(e.target.value)}\n          className=\"profile-widget__search-input\"\n        />\n        <div className=\"profile-widget__collections\">\n          {!filteredTokens.length && !isLoading ? (\n            <EmptyState\n              text={emptyStateText}\n              className=\"profile-widget__empty-state\"\n            />\n            ) : (\n              <OwnedNftsContainer\n                isEndOfTokens={isEndOfTokens}\n                isLoading={isLoading || tokensOffset === 0}\n                currencyTokenInfo={currencyTokenInfo}\n                highlightTokenId={highlightTokenId || undefined}\n                orders={orders}\n                tokenIdsWithBalance={tokenIdsWithBalance}\n                tokens={filteredTokens}\n                className=\"profile-widget__nfts-container\"\n              />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ConnectedProfileWidget;\n","import { FC } from 'react';\n\nimport { useParams } from 'react-router-dom';\n\nimport useDefaultLibrary from '../../hooks/useDefaultProvider';\nimport { useAppSelector } from '../../redux/hooks';\nimport ConnectedProfileWidget from './subcomponents/ConnectedProfileWidget/ConnectedProfileWidget';\nimport DisconnectedProfileWidget from './subcomponents/DisconnectedProfileWidget/DisconnectedProfileWidget';\n\nimport './ProfileWidget.scss';\n\nconst ProfileWidget: FC = () => {\n  const { account: profileAccount } = useParams();\n\n  const { chainId } = useAppSelector((state) => state.config);\n  const { isInitialized } = useAppSelector((state) => state.indexer);\n  const { currencyTokenInfo } = useAppSelector((state) => state.metadata);\n\n  const library = useDefaultLibrary(chainId);\n\n  if (\n    isInitialized\n    && currencyTokenInfo\n    && library\n    && profileAccount\n  ) {\n    return (\n      <ConnectedProfileWidget\n        currencyTokenInfo={currencyTokenInfo}\n        library={library}\n        profileAccount={profileAccount}\n      />\n    );\n  }\n\n  return (\n    <DisconnectedProfileWidget\n      profileAccount={profileAccount}\n    />\n  );\n};\n\nexport default ProfileWidget;\n","import React, { FC } from 'react';\n\nimport Page from '../../compositions/Page/Page';\nimport ProfileWidget from '../../widgets/ProfileWidget/ProfileWidget';\n\nimport './ProfilePage.scss';\n\nconst ProfilePage: FC = () => (\n  <Page\n    className=\"profile-page\"\n    contentClassName=\"profile-page__content\"\n  >\n    <ProfileWidget />\n  </Page>\n);\n\nexport default ProfilePage;\n","import React, { FC } from 'react';\n\nimport { createHashRouter, Navigate, RouterProvider } from 'react-router-dom';\n\nimport {\n  CollectionPage,\n  ListNftPage,\n  NftDetailPage,\n  OrderDetailPage,\n  ProfileOrdersPage,\n  ProfilePage,\n} from '../../pages';\nimport { AppRoutes, ProfileRoutes } from '../../routes';\n\nconst Routes: FC = () => {\n  const router = createHashRouter([\n    {\n      path: '/',\n      element: <CollectionPage />,\n    },\n    {\n      path: `/${AppRoutes.listNft}`,\n      element: <ListNftPage />,\n    },\n    {\n      path: `/${AppRoutes.nftDetail}/:tokenId`,\n      element: <NftDetailPage />,\n    },\n    {\n      path: `/${AppRoutes.orderDetail}/:account/:orderNonce`,\n      element: <OrderDetailPage />,\n    },\n    {\n      path: `/${AppRoutes.profile}/:account`,\n      children: [\n        {\n          element: <ProfilePage />,\n          path: ProfileRoutes.ownedNfts,\n        },\n        {\n          path: ProfileRoutes.orders,\n          element: <ProfileOrdersPage />,\n        },\n        {\n          element: <Navigate to={ProfileRoutes.ownedNfts} />,\n          index: true,\n        },\n      ],\n    },\n  ]);\n\n  return (\n    <RouterProvider router={router} />\n  );\n};\n\nexport default Routes;\n","import { useWeb3React } from '@web3-react/core';\nimport { useDebounce } from 'react-use';\n\nimport { clearedCachedLibrary, setCachedLibrary } from '../helpers/ethers';\nimport { useAppDispatch, useAppSelector } from '../redux/hooks';\nimport { setLibraries, setWeb3Data } from '../redux/stores/web3/web3Slice';\n\nconst useMapWeb3ReactToStore = (): void => {\n  const dispatch = useAppDispatch();\n\n  const { libraries } = useAppSelector((state) => state.web3);\n\n  const {\n    account,\n    isActive,\n    chainId,\n    provider: library,\n  } = useWeb3React();\n\n  // Using debounce because useWeb3React disconnects from provider every route for a split second\n  useDebounce(() => {\n    dispatch(setWeb3Data({\n      isActive,\n      account: account || undefined,\n      chainId,\n    }));\n  }, 100, [\n    isActive,\n    account,\n    chainId,\n    library,\n  ]);\n\n  useDebounce(() => {\n    if (!library) {\n      clearedCachedLibrary();\n\n      return;\n    }\n\n    if (library && chainId) {\n      setCachedLibrary(library, chainId);\n      dispatch(setLibraries({\n        ...libraries,\n        [chainId]: true,\n      }));\n    }\n  }, 100, [library]);\n};\n\nexport default useMapWeb3ReactToStore;\n","import { BigNumber } from 'bignumber.js';\n\nimport { TokenIdsWithBalance } from './TokenIdsWithBalance';\n\nexport const subtractTokenBalance = (tokenIdsWithBalance: TokenIdsWithBalance, tokenIdToSubstract: string): TokenIdsWithBalance => {\n  const updatedUserTokens: TokenIdsWithBalance = {\n    ...tokenIdsWithBalance,\n    [tokenIdToSubstract]: new BigNumber(tokenIdsWithBalance[tokenIdToSubstract]).minus(1).toString(),\n  };\n\n  if (updatedUserTokens[tokenIdToSubstract] === '0') {\n    delete updatedUserTokens[tokenIdToSubstract];\n  }\n\n  return updatedUserTokens;\n};\n","import { BatchCall, Swap } from '@airswap/libraries';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\nimport { ethers } from 'ethers';\n\nimport { TokenIdsWithBalance } from '../../../entities/TokenIdsWithBalance/TokenIdsWithBalance';\nimport { getOwnedTokenIdsOfWallet } from './balancesHelpers';\n\ninterface WalletParams {\n  chainId: number;\n  provider: ethers.providers.Web3Provider;\n  walletAddress: string;\n  collectionTokenAddress: string;\n}\n\nexport const fetchCurrencyTokenBalance = createAsyncThunk<string, WalletParams>(\n  'balances/fetchBalances',\n  async (params) => {\n    const contract = BatchCall.getContract(params.provider, params.chainId);\n\n    const response = await contract.walletBalances(params.walletAddress, [params.collectionTokenAddress]);\n\n    return response.toString();\n  },\n);\n\nexport const fetchCurrencyTokenAllowance = createAsyncThunk<string, WalletParams>(\n  'balances/fetchAllowances',\n  async (params) => {\n    const contract = BatchCall.getContract(params.provider, params.chainId);\n\n    const response = await contract.tokenAllowance(\n      params.walletAddress,\n      Swap.getAddress(params.chainId) || '',\n      params.collectionTokenAddress,\n    );\n\n    return response.toString();\n  },\n);\n\ninterface fetchTokenIdsParams {\n  provider: ethers.providers.Web3Provider;\n  walletAddress: string;\n  collectionToken: string;\n}\n\nexport const fetchUserTokens = createAsyncThunk<TokenIdsWithBalance, fetchTokenIdsParams>(\n  'balances/fetchUserTokens',\n  async ({\n    provider,\n    walletAddress,\n    collectionToken,\n  }) => getOwnedTokenIdsOfWallet(provider, walletAddress, collectionToken),\n);\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nimport { TokenIdsWithBalance } from '../../../entities/TokenIdsWithBalance/TokenIdsWithBalance';\nimport { fetchCurrencyTokenAllowance, fetchCurrencyTokenBalance, fetchUserTokens } from './balancesApi';\n\ninterface BalancesState {\n  isInitialized: boolean;\n  isLoading: boolean;\n  isLoadingAllowances: boolean;\n  isLoadingBalances: boolean;\n  isLoadingTokens: boolean;\n  currencyTokenAllowance: string;\n  currencyTokenBalance: string;\n  tokenIdsWithBalance: TokenIdsWithBalance;\n}\n\nconst initialState: BalancesState = {\n  isInitialized: false,\n  isLoading: false,\n  isLoadingAllowances: false,\n  isLoadingBalances: false,\n  isLoadingTokens: false,\n  currencyTokenAllowance: '0',\n  currencyTokenBalance: '0',\n  tokenIdsWithBalance: {},\n};\n\nconst balancesSlice = createSlice({\n  name: 'balances',\n  initialState,\n  reducers: {\n    setIsLoading: (state, action: PayloadAction<boolean>): BalancesState => ({\n      ...state,\n      isLoading: action.payload,\n    }),\n    setIsInitialized: (state, action: PayloadAction<boolean>): BalancesState => ({\n      ...state,\n      isInitialized: action.payload,\n    }),\n    setAllowance: (state, action: PayloadAction<string>): BalancesState => ({\n      ...state,\n      currencyTokenAllowance: action.payload,\n    }),\n    setBalance: (state, action: PayloadAction<string>): BalancesState => ({\n      ...state,\n      currencyTokenBalance: action.payload,\n    }),\n    setTokens: (state, action: PayloadAction<TokenIdsWithBalance>): BalancesState => ({\n      ...state,\n      tokenIdsWithBalance: action.payload,\n    }),\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchCurrencyTokenBalance.pending, (state): BalancesState => ({\n      ...state,\n      isLoading: true,\n      isLoadingBalances: true,\n    }));\n\n    builder.addCase(fetchCurrencyTokenBalance.fulfilled, (state, action): BalancesState => ({\n      ...state,\n      isLoading: state.isLoadingAllowances || state.isLoadingTokens,\n      isLoadingBalances: false,\n      currencyTokenBalance: action.payload,\n    }));\n\n    builder.addCase(fetchUserTokens.pending, (state): BalancesState => ({\n      ...state,\n      isLoading: true,\n      isLoadingTokens: true,\n    }));\n\n    builder.addCase(fetchUserTokens.fulfilled, (state, action): BalancesState => ({\n      ...state,\n      isLoading: state.isLoadingAllowances || state.isLoadingBalances,\n      isLoadingTokens: false,\n      tokenIdsWithBalance: action.payload,\n    }));\n\n    builder.addCase(fetchCurrencyTokenAllowance.pending, (state): BalancesState => ({\n      ...state,\n      isLoading: true,\n      isLoadingAllowances: true,\n    }));\n\n    builder.addCase(fetchCurrencyTokenAllowance.fulfilled, (state, action): BalancesState => ({\n      ...state,\n      isLoading: state.isLoadingBalances || state.isLoadingTokens,\n      isLoadingAllowances: false,\n      currencyTokenAllowance: action.payload,\n    }));\n  },\n});\n\nexport const {\n  setIsLoading,\n  setAllowance,\n  setBalance,\n  setTokens,\n  setIsInitialized,\n} = balancesSlice.actions;\n\nexport default balancesSlice.reducer;\n","import { useEffect, useState } from 'react';\n\nimport { Swap } from '@airswap/libraries/build/src/Contracts';\nimport { BigNumber } from 'bignumber.js';\nimport { noop } from 'react-use/lib/misc/util';\n\nimport { subtractTokenBalance } from '../entities/TokenIdsWithBalance/TokenIdsWithBalanceHelpers';\nimport { isEqualAddress } from '../helpers/string';\nimport { useAppDispatch, useAppSelector } from '../redux/hooks';\nimport {\n  fetchCurrencyTokenAllowance,\n  fetchCurrencyTokenBalance,\n  fetchUserTokens,\n} from '../redux/stores/balances/balancesApi';\nimport { setTokens } from '../redux/stores/balances/balancesSlice';\nimport { setOrders } from '../redux/stores/collection/collectionSlice';\nimport { setOrders as setProfileOrders } from '../redux/stores/profileOrders/profileOrdersSlice';\nimport { addNftSoldToast } from '../redux/stores/toasts/toastsActions';\nimport useWeb3ReactLibrary from './useWeb3ReactLibrary';\n\ninterface LastSoldOrder {\n  nonce: string;\n  tokenId: string;\n}\n\nconst useSwapEventsSubscriber = () => {\n  const { account } = useAppSelector(state => state.web3);\n  const { chainId, collectionToken, currencyToken } = useAppSelector(state => state.config);\n  const { tokenIdsWithBalance } = useAppSelector(state => state.balances);\n  const { orders } = useAppSelector(state => state.collection);\n  const { orders: profileOrders } = useAppSelector(state => state.profileOrders);\n\n  const dispatch = useAppDispatch();\n  const { library } = useWeb3ReactLibrary();\n\n  const [lastSoldOrder, setLastSoldOrder] = useState<LastSoldOrder>();\n\n  useEffect(() => {\n    if (\n      !lastSoldOrder\n        || !tokenIdsWithBalance[lastSoldOrder.tokenId]\n        || !library\n        || !account\n    ) {\n      return;\n    }\n\n    const newOrders = orders.filter(order => order.nonce !== lastSoldOrder.nonce);\n    const newProfileOrders = profileOrders.filter(order => order.nonce !== lastSoldOrder.nonce);\n    const newUserTokens = subtractTokenBalance(tokenIdsWithBalance, lastSoldOrder.tokenId);\n\n    setLastSoldOrder(undefined);\n\n    dispatch(addNftSoldToast(lastSoldOrder.tokenId));\n    dispatch(setProfileOrders(newProfileOrders));\n    dispatch(setTokens(newUserTokens));\n    dispatch(setOrders(newOrders));\n\n    dispatch(fetchCurrencyTokenBalance({\n      chainId,\n      provider: library,\n      collectionTokenAddress: collectionToken,\n      walletAddress: account,\n    }));\n\n    dispatch(fetchCurrencyTokenAllowance({\n      chainId,\n      provider: library,\n      collectionTokenAddress: collectionToken,\n      walletAddress: account,\n    }));\n\n    dispatch(fetchUserTokens({\n      provider: library,\n      walletAddress: account,\n      collectionToken,\n    }));\n  }, [\n    lastSoldOrder,\n    tokenIdsWithBalance,\n    library,\n    account,\n  ]);\n\n  const onSwap = async (\n    nonce: BigNumber,\n    signerWallet: string,\n    signerAmount: BigNumber,\n    signerTokenId: BigNumber,\n    signerToken: string,\n    senderWallet: string,\n    senderAmount: BigNumber,\n    senderTokenId: BigNumber,\n    senderToken: string,\n  ) => {\n    const tokenId = signerTokenId.toString();\n    const orderNonce = nonce.toString();\n\n    if (!account || !collectionToken || !currencyToken) {\n      return;\n    }\n\n    if (\n      isEqualAddress(signerWallet, account)\n        && isEqualAddress(signerToken, collectionToken)\n        && isEqualAddress(senderToken, currencyToken)\n    ) {\n      setLastSoldOrder({ tokenId, nonce: orderNonce });\n    }\n  };\n\n  useEffect(() => {\n    if (!library || !account) {\n      return noop;\n    }\n\n    const swapContract = Swap.getContract(library, chainId);\n\n    swapContract.on('Swap', onSwap);\n\n    return () => {\n      swapContract.off('Swap', onSwap);\n    };\n  }, [library?.connection.url, account]);\n};\n\nexport default useSwapEventsSubscriber;\n","import { useEffect, useState } from 'react';\n\nimport { chainNames } from '@airswap/constants';\n\nimport { getRandomUuid } from '../helpers/crypto';\nimport { useAppDispatch, useAppSelector } from '../redux/hooks';\nimport { addToast, hideToast } from '../redux/stores/toasts/toastsActions';\nimport { setLastToastActionButtonIdClicked } from '../redux/stores/toasts/toastsSlice';\nimport { ToastType } from '../types/ToastType';\nimport { switchNetwork } from '../web3-connectors/helpers';\n\nconst useSwitchChain = (): void => {\n  const dispatch = useAppDispatch();\n  const { config } = useAppSelector((state) => state);\n  const { isActive, chainId, connectionType } = useAppSelector((state) => state.web3);\n  const { lastToastActionButtonIdClicked } = useAppSelector((state) => state.toasts);\n\n  const [lastToastId, setLastToastId] = useState<string>();\n\n  useEffect(() => {\n    if (!chainId) {\n      return;\n    }\n\n    if (lastToastId) {\n      dispatch(hideToast(lastToastId));\n\n      setLastToastId(undefined);\n    }\n\n    if (chainId !== config.chainId) {\n      const toastId = getRandomUuid();\n\n      setLastToastId(toastId);\n\n      dispatch(addToast({\n        type: ToastType.warning,\n        hideCloseButton: true,\n        willAutomaticallyHide: false,\n        actionButtonText: `Switch to ${chainNames[config.chainId]}`,\n        id: toastId,\n        title: 'Wrong network',\n        text: `Your wallet must be connected to ${chainNames[config.chainId]}.`,\n      }));\n    }\n  }, [chainId, config.chainId]);\n\n  useEffect(() => {\n    if (!isActive && lastToastId) {\n      dispatch(hideToast(lastToastId));\n\n      setLastToastId(undefined);\n    }\n  }, [isActive]);\n\n  useEffect(() => {\n    if (!connectionType) {\n      return;\n    }\n\n    if (lastToastActionButtonIdClicked && lastToastActionButtonIdClicked === lastToastId) {\n      switchNetwork(config.chainId, connectionType).then(() => {\n        dispatch(setLastToastActionButtonIdClicked(undefined));\n      });\n    }\n  }, [lastToastActionButtonIdClicked]);\n};\n\nexport default useSwitchChain;\n","import { TokenKinds } from '@airswap/constants';\n\nexport const supportedCollectionTokenKinds: TokenKinds[] = [\n  TokenKinds.ERC721,\n  TokenKinds.ERC1155,\n];\n\nexport const supportedCurrencyTokenKinds: TokenKinds[] = [\n  TokenKinds.ERC20,\n];\n","import { TokenKinds } from '@airswap/constants';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\nimport { ethers } from 'ethers';\n\nimport { AppThunkApiConfig } from '../../store';\nimport { getCollectionTokenKindHelper, getCurrencyTokenKindHelper } from './configHelpers';\n\ninterface GetTokenKindParams {\n  address: string,\n  provider: ethers.providers.Web3Provider,\n}\n\nexport const getCollectionTokenKind = createAsyncThunk<\nTokenKinds | undefined,\nGetTokenKindParams,\nAppThunkApiConfig\n>('config/getCollectionTokenKind', async ({ address, provider }) => (\n  getCollectionTokenKindHelper(provider, address)\n));\n\nexport const getCurrencyTokenKind = createAsyncThunk<\nTokenKinds | undefined,\nGetTokenKindParams,\nAppThunkApiConfig\n>('config/getCurrencyTokenKind', async ({ address, provider }) => (\n  getCurrencyTokenKindHelper(provider, address)\n));\n","import { TokenKinds } from '@airswap/constants';\nimport erc20AbiContract from '@openzeppelin/contracts/build/contracts/ERC20.json';\nimport erc721AbiContract from '@openzeppelin/contracts/build/contracts/ERC721.json';\nimport { ethers } from 'ethers';\n\nexport const getCollectionTokenKindHelper = async (provider: ethers.providers.Web3Provider, address: string): Promise<TokenKinds | undefined> => {\n  const contract = new ethers.Contract(address, erc721AbiContract.abi, provider);\n\n  const [isErc721, isErc1155] = await Promise.all([\n    contract.supportsInterface(TokenKinds.ERC721),\n    contract.supportsInterface(TokenKinds.ERC1155),\n  ]) as boolean[];\n\n  if (isErc721) {\n    return TokenKinds.ERC721;\n  }\n\n  if (isErc1155) {\n    return TokenKinds.ERC1155;\n  }\n\n  return undefined;\n};\n\nexport const getCurrencyTokenKindHelper = async (provider: ethers.providers.Web3Provider, address: string): Promise<TokenKinds | undefined> => {\n  const contract = new ethers.Contract(address, erc20AbiContract.abi, provider);\n\n  const totalSupply = await contract.totalSupply();\n\n  if (totalSupply) {\n    return TokenKinds.ERC20;\n  }\n\n  return undefined;\n};\n","import { TokenKinds } from '@airswap/constants';\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nimport { getCollectionTokenKind, getCurrencyTokenKind } from './configApi';\n\nexport interface ConfigState {\n  isFailed: boolean;\n  isLoadingCollectionTokenKind: boolean;\n  isLoadingCurrencyTokenKind: boolean;\n  isSuccessful: boolean;\n  chainId: number;\n  currencyToken: string;\n  currencyTokenKind?: TokenKinds;\n  collectionToken: string;\n  collectionTokenKind?: TokenKinds;\n  collectionName: string;\n  collectionImage: string;\n  storageServerUrl: string;\n}\nconst initialState: ConfigState = {\n  isFailed: false,\n  isLoadingCollectionTokenKind: false,\n  isLoadingCurrencyTokenKind: false,\n  isSuccessful: false,\n  chainId: process.env.REACT_APP_CHAIN_ID ? parseInt(process.env.REACT_APP_CHAIN_ID, 10) : 1,\n  currencyToken: (process.env.REACT_APP_CURRENCY_TOKEN || '').toLowerCase(),\n  collectionToken: (process.env.REACT_APP_COLLECTION_TOKEN || '').toLowerCase(),\n  collectionName: process.env.REACT_APP_COLLECTION_NAME || '',\n  collectionImage: process.env.REACT_APP_COLLECTION_IMAGE || '',\n  storageServerUrl: process.env.REACT_APP_STORAGE_SERVER_URL || '',\n};\n\nconst configSlice = createSlice({\n  name: 'config',\n  initialState,\n  reducers: {\n    reset: (): ConfigState => ({\n      ...initialState,\n    }),\n    setIsSuccessful: (state, action: PayloadAction<boolean>): ConfigState => ({\n      ...state,\n      isSuccessful: action.payload,\n    }),\n  },\n  extraReducers: builder => {\n    builder.addCase(getCollectionTokenKind.pending, (state): ConfigState => ({\n      ...state,\n      isLoadingCollectionTokenKind: true,\n    }));\n    builder.addCase(getCollectionTokenKind.fulfilled, (state, action): ConfigState => ({\n      ...state,\n      isLoadingCollectionTokenKind: false,\n      collectionTokenKind: action.payload,\n    }));\n    builder.addCase(getCollectionTokenKind.rejected, (state): ConfigState => ({\n      ...state,\n      isLoadingCollectionTokenKind: false,\n      isFailed: true,\n    }));\n    builder.addCase(getCurrencyTokenKind.pending, (state): ConfigState => ({\n      ...state,\n      isLoadingCurrencyTokenKind: true,\n    }));\n    builder.addCase(getCurrencyTokenKind.fulfilled, (state, action): ConfigState => ({\n      ...state,\n      isLoadingCurrencyTokenKind: false,\n      currencyTokenKind: action.payload,\n    }));\n    builder.addCase(getCurrencyTokenKind.rejected, (state): ConfigState => ({\n      ...state,\n      isLoadingCurrencyTokenKind: false,\n      isFailed: true,\n    }));\n  },\n});\n\nexport const {\n  setIsSuccessful,\n  reset,\n} = configSlice.actions;\n\nexport default configSlice.reducer;\n","import { useEffect } from 'react';\n\nimport { supportedCollectionTokenKinds, supportedCurrencyTokenKinds } from '../../../constants/supportedTokenKinds';\nimport useWeb3ReactLibrary from '../../../hooks/useWeb3ReactLibrary';\nimport { useAppDispatch, useAppSelector } from '../../hooks';\nimport { getCollectionTokenKind, getCurrencyTokenKind } from './configApi';\nimport { reset, setIsSuccessful } from './configSlice';\n\nexport const useConfig = (): void => {\n  const dispatch = useAppDispatch();\n\n  const { library, chainId } = useWeb3ReactLibrary();\n  const {\n    collectionToken,\n    collectionTokenKind,\n    chainId: configChainId,\n    currencyToken,\n    currencyTokenKind,\n  } = useAppSelector(state => state.config);\n\n  useEffect(() => {\n    if (!library || chainId !== configChainId) {\n      return;\n    }\n\n    dispatch(getCollectionTokenKind({ address: collectionToken, provider: library }));\n    dispatch(getCurrencyTokenKind({ address: currencyToken, provider: library }));\n  }, [library?.connection.url]);\n\n  useEffect(() => {\n    if (\n      collectionTokenKind\n      && supportedCollectionTokenKinds.includes(collectionTokenKind)\n      && currencyTokenKind\n      && supportedCurrencyTokenKinds.includes(currencyTokenKind)\n    ) {\n      dispatch(setIsSuccessful(true));\n    }\n  }, [collectionTokenKind]);\n\n  useEffect(() => {\n    if (chainId !== configChainId) {\n      dispatch(reset());\n    }\n  }, [chainId]);\n};\n","import { Protocols } from '@airswap/constants';\nimport { Registry } from '@airswap/libraries';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\nimport { ethers } from 'ethers';\n\nimport { AppThunkApiConfig } from '../../store';\n\ninterface InitializeParams {\n  chainId: number,\n  provider: ethers.providers.BaseProvider,\n}\n\nexport const initialize = createAsyncThunk<\nstring[],\nInitializeParams,\nAppThunkApiConfig\n>('indexer/initialize', async ({ chainId, provider }, { getState }) => {\n  const { config } = getState();\n  if (config.storageServerUrl) {\n    return [config.storageServerUrl];\n  }\n  return Registry.getServerURLs(\n    provider,\n    chainId,\n    Protocols.Indexing,\n  );\n});\n","import { FullOrder } from '@airswap/types';\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nimport { initialize } from './indexerApi';\n\nexport interface IndexerState {\n  isInitialized: boolean;\n  isLoading: boolean;\n  lastFailedOrder?: FullOrder;\n  lastSentOrder?: FullOrder;\n  urls: string[];\n}\n\nconst initialState: IndexerState = {\n  isInitialized: false,\n  isLoading: false,\n  urls: [],\n};\n\nexport const indexerSlice = createSlice({\n  name: 'indexer',\n  initialState,\n  reducers: {\n    setLastFailedOrder: (state: IndexerState, action: PayloadAction<FullOrder>): IndexerState => ({\n      ...state,\n      lastFailedOrder: action.payload,\n    }),\n    setLastSentOrder: (state: IndexerState, action: PayloadAction<FullOrder>): IndexerState => ({\n      ...state,\n      lastSentOrder: action.payload,\n    }),\n  },\n  extraReducers: (builder) => {\n    builder.addCase(initialize.pending, (state): IndexerState => ({\n      ...state,\n      isLoading: true,\n    }));\n    builder.addCase(initialize.fulfilled, (state, action: PayloadAction<string[]>): IndexerState => ({\n      ...state,\n      isInitialized: true,\n      isLoading: false,\n      urls: action.payload,\n    }));\n  },\n});\n\nexport const { setLastFailedOrder, setLastSentOrder } = indexerSlice.actions;\n\nexport default indexerSlice.reducer;\n","import { useEffect } from 'react';\n\nimport { FullOrder } from '@airswap/types';\n\nimport useDefaultLibrary from '../../../hooks/useDefaultProvider';\nimport { useAppDispatch, useAppSelector } from '../../hooks';\nimport { clearLastUserOrder } from '../listNft/listNftSlice';\nimport { initialize } from './indexerApi';\nimport { sendOrderToIndexers } from './indexerHelpers';\nimport { setLastFailedOrder, setLastSentOrder } from './indexerSlice';\n\nexport const useIndexers = (): void => {\n  const dispatch = useAppDispatch();\n\n  const { lastUserOrder } = useAppSelector(state => state.listNft);\n  const { chainId } = useAppSelector(state => state.config);\n  const { isInitialized, isLoading, urls } = useAppSelector(state => state.indexer);\n  const library = useDefaultLibrary(chainId);\n\n  const sendAndClearLastOrder = async (lastOrder: FullOrder) => {\n    if (!isInitialized) return;\n\n    const isSuccessful = await sendOrderToIndexers(lastOrder, urls);\n\n    if (isSuccessful) {\n      dispatch(setLastSentOrder(lastOrder));\n    } else {\n      dispatch(setLastFailedOrder(lastOrder));\n    }\n\n    dispatch(clearLastUserOrder());\n  };\n\n  useEffect(() => {\n    if (library && !isInitialized && !isLoading) {\n      dispatch(initialize({ chainId, provider: library }));\n    }\n  }, [library]);\n\n  useEffect(() => {\n    if (lastUserOrder) sendAndClearLastOrder(lastUserOrder);\n  }, [lastUserOrder]);\n};\n","import { useEffect } from 'react';\n\nimport useDefaultLibrary from '../../../hooks/useDefaultProvider';\nimport { useAppDispatch, useAppSelector } from '../../hooks';\nimport { fetchProtocolFee } from './metadataActions';\nimport { getCollectionImageBanner, getCurrencyTokenInfo } from './metadataApi';\nimport { setCollectionTokens } from './metadataSlice';\nimport { getLocalStorageCollectionTokens } from './metdataHelpers';\n\nexport const useMetadata = (): void => {\n  const dispatch = useAppDispatch();\n\n  const { chainId, collectionToken, currencyToken } = useAppSelector(state => state.config);\n  const {\n    isLoading,\n    bannerImage,\n    currencyTokenInfo,\n    protocolFee,\n  } = useAppSelector(state => state.metadata);\n  const library = useDefaultLibrary(chainId);\n\n  useEffect(() => {\n    dispatch(setCollectionTokens(getLocalStorageCollectionTokens(collectionToken)));\n  }, [collectionToken]);\n\n  useEffect(() => {\n    if (!library || !chainId || isLoading) {\n      return;\n    }\n\n    if (!currencyTokenInfo) {\n      dispatch(getCurrencyTokenInfo({\n        currencyToken,\n        library,\n        chainId,\n      }));\n    }\n\n    if (!protocolFee) {\n      dispatch(fetchProtocolFee({\n        provider: library,\n        chainId,\n      }));\n    }\n\n    if (bannerImage === undefined) {\n      dispatch(getCollectionImageBanner(collectionToken));\n    }\n  }, [library]);\n};\n","import { BaseProvider, TransactionReceipt } from '@ethersproject/providers';\n\nimport { SubmittedTransaction, SubmittedTransactionStatus } from '../../../entities/SubmittedTransaction/SubmittedTransaction';\nimport { parseJsonArray } from '../../../helpers/json';\nimport { AppDispatch } from '../../store';\nimport { updateTransaction } from './transactionsActions';\n\nexport const getTransactionsLocalStorageKey = (account: string, chainId: number): string => `airswap-marketplace/transactions-v2/${account}/${chainId}`;\n\nexport const getLocalStorageTransactions = (account: string, chainId: number): SubmittedTransaction[] => {\n  const key = getTransactionsLocalStorageKey(account, chainId);\n  const value = localStorage.getItem(key);\n\n  return value ? parseJsonArray<SubmittedTransaction>(value) : [];\n};\n\nexport const handleTransactionReceipt = (status: number, transaction: SubmittedTransaction, dispatch: AppDispatch): void => {\n  dispatch(updateTransaction({\n    ...transaction,\n    status: status === 1 ? SubmittedTransactionStatus.succeeded : SubmittedTransactionStatus.failed,\n  }));\n};\n\nexport const listenForTransactionReceipt = (transaction: SubmittedTransaction, library: BaseProvider, dispatch: AppDispatch): string => {\n  library.once(transaction.hash, () => {\n    library.getTransactionReceipt(transaction.hash)\n      .then((receipt: TransactionReceipt) => {\n        if (receipt?.status !== undefined) {\n          handleTransactionReceipt(receipt.status, transaction, dispatch);\n        }\n      });\n  });\n  return transaction.hash;\n};\n","import { useEffect, useState } from 'react';\n\nimport useWeb3ReactLibrary from '../../../hooks/useWeb3ReactLibrary';\nimport { useAppDispatch, useAppSelector } from '../../hooks';\nimport {\n  getLocalStorageTransactions,\n  getTransactionsLocalStorageKey,\n  listenForTransactionReceipt,\n} from './transactionsHelpers';\nimport { setTransactions } from './transactionsSlice';\n\nexport const useTransactions = (): void => {\n  const dispatch = useAppDispatch();\n\n  const { library, chainId } = useWeb3ReactLibrary();\n  const { account } = useAppSelector(state => state.web3);\n  const { transactions } = useAppSelector(state => state.transactions);\n\n  const [activeListenerHashes, setActiveListenerHashes] = useState<string[]>([]);\n\n  useEffect(() => {\n    if (!account || !chainId || !library) {\n      return;\n    }\n\n    const localStorageKey = getTransactionsLocalStorageKey(account, chainId);\n    localStorage.setItem(localStorageKey, JSON.stringify(transactions));\n\n    const newListenerHashes = transactions\n      .filter(transaction => transaction.status === 'processing' && !activeListenerHashes.includes(transaction.hash))\n      .map(transaction => listenForTransactionReceipt(transaction, library, dispatch));\n\n    setActiveListenerHashes([...activeListenerHashes, ...newListenerHashes]);\n  }, [transactions]);\n\n  useEffect(() => {\n    if (!account || !chainId) {\n      return;\n    }\n\n    dispatch(setTransactions(getLocalStorageTransactions(account, chainId)));\n  }, [account, chainId]);\n};\n","import React, {\n  FC,\n  ReactElement,\n  useEffect, useRef,\n  useState,\n} from 'react';\n\nimport classnames from 'classnames';\n\nimport IconButton from '../../compositions/IconButton/IconButton';\nimport { Toast as ToastInterface } from '../../entities/Toast/Toast';\nimport Button from '../Button/Button';\nimport Icon from '../Icon/Icon';\nimport { getToastIcon } from './helpers/getToastIcon';\n\nimport './Toast.scss';\n\ninterface ToastProps {\n  toast: ToastInterface;\n  onActionButtonClick: (toastId: string) => void;\n  onHide: (id: string) => void;\n  className?: string;\n}\n\nconst Toast: FC<ToastProps> = ({\n  toast,\n  onActionButtonClick,\n  onHide,\n  className = '',\n}): ReactElement => {\n  const [height, setHeight] = useState(0);\n\n  const elementRef = useRef<HTMLDivElement>(null);\n\n  const toastClassName = classnames('toast', {\n    [`toast--is-${toast.type}`]: toast.type,\n    'toast--is-hidden': toast.isHidden,\n  }, className);\n\n  const iconName = getToastIcon(toast.type);\n\n  const handleActionButtonClick = () => {\n    onActionButtonClick(toast.id);\n  };\n\n  useEffect(() => {\n    let timeoutId: NodeJS.Timeout | undefined;\n\n    if (toast.willAutomaticallyHide) {\n      timeoutId = setTimeout(() => onHide(toast.id), 3000);\n    }\n\n    return () => clearTimeout(timeoutId);\n  }, [toast.willAutomaticallyHide]);\n\n  useEffect(() => {\n    if (elementRef.current && !height) {\n      setHeight(elementRef.current.clientHeight);\n    }\n  }, [elementRef.current]);\n\n  return (\n    <div\n      style={{ height: height || 'auto' }}\n      className={toastClassName}\n    >\n      <div ref={elementRef} className=\"toast__inner\">\n        <div className=\"toast__icon-wrapper\">\n          <div className=\"toast__icon-wrapper-background\" />\n          <Icon className=\"toast__icon\" name={iconName} />\n        </div>\n        <div className=\"toast__title-text-wrapper\">\n          <h1 className=\"toast__title\">{toast.title}</h1>\n          {toast.text && (\n            <p className=\"toast__text\">\n              {toast.text}\n            </p>\n          )}\n          {toast.actionButtonText && (\n            <Button\n              text={toast.actionButtonText}\n              onClick={handleActionButtonClick}\n              className=\"toast__action-button\"\n            />\n          )}\n        </div>\n        {!toast.hideCloseButton && (\n          <IconButton\n            hideLabel\n            icon=\"button-x\"\n            text=\"close\"\n            className=\"toast__close-button\"\n            onClick={() => onHide(toast.id)}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Toast;\n","import { ToastType } from '../../../types/ToastType';\nimport { icons } from '../../Icon/Icon';\n\nexport const getToastIcon = (toastType: ToastType): keyof typeof icons => {\n  if (toastType === ToastType.success) {\n    return 'marker-check';\n  }\n\n  if (toastType === ToastType.pending) {\n    return 'transaction-pending';\n  }\n\n  if (toastType === ToastType.fail) {\n    return 'button-x';\n  }\n\n  if (toastType === ToastType.deny) {\n    return 'deny';\n  }\n\n  if (toastType === ToastType.warning) {\n    return 'information-circle-outline';\n  }\n\n  return 'airswap';\n};\n","import React, {\n  FC,\n  ReactElement,\n  useCallback,\n  useEffect,\n} from 'react';\n\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport debounce from 'lodash.debounce';\n\nimport Toast from '../../components/Toast/Toast';\nimport { useAppDispatch, useAppSelector } from '../../redux/hooks';\nimport { hideToast, removeHiddenToasts } from '../../redux/stores/toasts/toastsActions';\nimport { setLastToastActionButtonIdClicked } from '../../redux/stores/toasts/toastsSlice';\n\nimport './ToastsWidget.scss';\n\nconst ToastsWidget: FC = (): ReactElement => {\n  const dispatch = useAppDispatch();\n  const { toasts } = useAppSelector((state) => state.toasts);\n\n  const cleanupToasts = () => {\n    dispatch(removeHiddenToasts());\n  };\n\n  const debouncedCleanupToasts = useCallback(\n    debounce(cleanupToasts, 1000),\n    [],\n  );\n\n  const handleActionButtonClick = async (toastId: string) => {\n    dispatch(setLastToastActionButtonIdClicked(toastId));\n  };\n\n  const handleToastHide = async (toastId: string) => {\n    dispatch(hideToast(toastId));\n    debouncedCleanupToasts();\n  };\n\n  useEffect(() => {\n    debouncedCleanupToasts();\n  }, [toasts]);\n\n  return (\n    <div className=\"toasts-widget\">\n      {\n        [...toasts]\n          .reverse()\n          .map(toast => (\n            <Toast\n              key={toast.id}\n              toast={toast}\n              onActionButtonClick={handleActionButtonClick}\n              onHide={handleToastHide}\n              className=\"toasts-widget__toast\"\n            />\n          ))\n      }\n    </div>\n  );\n};\n\nexport default ToastsWidget;\n","import React from 'react';\n\nimport { Web3ReactProvider } from '@web3-react/core';\n\nimport Routes from './compositions/Routes/Routes';\nimport useMapWeb3ReactToStore from './hooks/useMapWeb3ReactToStore';\nimport useSwapEventsSubscriber from './hooks/useSwapEventsSubscriber';\nimport useSwitchChain from './hooks/useSwitchChain';\nimport DebugPage from './pages/DebugPage/DebugPage';\nimport { useAppSelector } from './redux/hooks';\nimport { useConfig } from './redux/stores/config/configHooks';\nimport { useIndexers } from './redux/stores/indexer/indexerHooks';\nimport { useMetadata } from './redux/stores/metadata/metadataHooks';\nimport { useTransactions } from './redux/stores/transactions/transactionsHooks';\nimport { useWeb3 } from './redux/stores/web3/web3Hooks';\nimport { prioritizedConnectors } from './web3-connectors/connections';\nimport ToastsWidget from './widgets/ToastsWidget/ToastsWidget';\n\nconst ConnectedApp = () => {\n  const { isFailed } = useAppSelector(state => state.config);\n\n  useConfig();\n  useMapWeb3ReactToStore();\n  useTransactions();\n  useMetadata();\n  useIndexers();\n  useSwitchChain();\n  useWeb3();\n  useSwapEventsSubscriber();\n\n  if (isFailed) {\n    return (\n      <DebugPage />\n    );\n  }\n\n  return (\n    <Routes />\n  );\n};\n\nconst App = () => (\n  <Web3ReactProvider connectors={Object.values(prioritizedConnectors).map((connector) => [connector.connector, connector.hooks])}>\n    <ConnectedApp />\n    <ToastsWidget />\n  </Web3ReactProvider>\n);\n\nexport default App;\n","import { useEffect } from 'react';\n\nimport { useAppDispatch, useAppSelector } from '../../hooks';\nimport { setShowConnectModal } from './web3Slice';\n\nexport const useWeb3 = (): void => {\n  const dispatch = useAppDispatch();\n\n  const { isActive, isInitialized, userHasClosedConnectModal } = useAppSelector((state) => state.web3);\n\n  useEffect(() => {\n    if (isInitialized && !isActive && !userHasClosedConnectModal) {\n      dispatch(setShowConnectModal(true));\n    }\n  }, [isInitialized]);\n\n  useEffect(() => {\n    if (isInitialized && isActive) {\n      dispatch(setShowConnectModal(false));\n    }\n  }, [isActive]);\n};\n","import { Network } from 'alchemy-sdk';\n\nexport const getAlchemyChain = (chainId: number): Network => {\n  switch (chainId) {\n    case 1:\n      return Network.ETH_MAINNET;\n    case 5:\n      return Network.ETH_GOERLI;\n    default:\n      throw new Error(`Alchemy does not support chainId ${chainId}`);\n  }\n};\n","import { FullOrder } from '@airswap/types';\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nimport { getNftOrderByOrderNonce } from './orderDetailApi';\n\nexport interface OrderDetailState {\n  isLoading: boolean;\n  isOrderNotFound: boolean;\n  order?: FullOrder;\n}\n\nconst initialState: OrderDetailState = {\n  isLoading: false,\n  isOrderNotFound: false,\n};\n\nexport const OrderDetailSlice = createSlice({\n  name: 'orderDetailReducer',\n  initialState,\n  reducers: {\n    setIsLoading(state, action: PayloadAction<boolean>): OrderDetailState {\n      return {\n        ...state,\n        isLoading: action.payload,\n      };\n    },\n    setOrder(state, action: PayloadAction<FullOrder>): OrderDetailState {\n      return {\n        ...state,\n        order: action.payload,\n      };\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(getNftOrderByOrderNonce.fulfilled, (state, action: PayloadAction<FullOrder | undefined>): OrderDetailState => ({\n      ...state,\n      isLoading: false,\n      isOrderNotFound: !action.payload,\n      order: action.payload,\n    }));\n    builder.addCase(getNftOrderByOrderNonce.pending, (state): OrderDetailState => ({\n      ...state,\n      isLoading: true,\n      isOrderNotFound: false,\n    }));\n    builder.addCase(getNftOrderByOrderNonce.rejected, (state): OrderDetailState => ({\n      ...state,\n      isLoading: false,\n      isOrderNotFound: true,\n    }));\n  },\n});\n\nexport const {\n  setIsLoading,\n  setOrder,\n} = OrderDetailSlice.actions;\n\nexport default OrderDetailSlice.reducer;\n","import { createAsyncThunk } from '@reduxjs/toolkit';\n\nconst convertBase64ToBlob = async (base64: string) => {\n  const response = await fetch(base64);\n  return response.blob();\n};\n\nconst convertBlobToBase64 = (blob: any) => new Promise<any>((resolve, reject) => {\n  const reader = new FileReader();\n  reader.onerror = reject;\n  reader.onload = () => {\n    resolve(reader.result);\n  };\n  reader.readAsDataURL(blob);\n});\n\nexport const fetchAvatarByAddress = createAsyncThunk<\nstring, { address: string }>(\n  'user/fetchAvatarByAddress',\n  async ({ address }) => {\n    const avatarUrl = localStorage.getItem(`airswap/avatarUrl/${address}`);\n    if (avatarUrl) {\n      const blob = await convertBase64ToBlob(avatarUrl);\n      return URL.createObjectURL(blob);\n    }\n\n    const response = await fetch(\n      `https://api.dicebear.com/5.x/identicon/svg?seed=${address}`,\n    );\n    const blob = await response.blob();\n\n    const base64 = await convertBlobToBase64(blob);\n    localStorage.setItem(`airswap/avatarUrl/${address}`, base64);\n\n    return URL.createObjectURL(blob);\n  },\n);\n\n","import { createSlice } from '@reduxjs/toolkit';\n\nimport { setWeb3Data } from '../web3/web3Slice';\nimport { fetchAvatarByAddress } from './userApi';\n\nexport interface UserState {\n  isLoading: boolean;\n  avatarUrl?: string;\n}\n\nconst initialState: UserState = {\n  isLoading: false,\n};\n\nconst userSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchAvatarByAddress.pending, (state) => ({\n      ...state,\n      isLoading: true,\n    }));\n\n    builder.addCase(fetchAvatarByAddress.fulfilled, (state, action) => ({\n      ...state,\n      isLoading: false,\n      avatarUrl: action.payload,\n    }));\n\n    builder.addCase(setWeb3Data, (state, action) => ({\n      ...state,\n      avatarUrl: action.payload.account ? state.avatarUrl : undefined,\n    }));\n  },\n});\n\nexport default userSlice.reducer;\n\n\n","import { getLibrary } from '../../../helpers/ethers';\nimport { store } from '../../store';\nimport { fetchAvatarByAddress } from './userApi';\n\nexport const configureUserSubscriber = () => {\n  let userAccount = '';\n\n  store.subscribe(async () => {\n    const { web3 } = store.getState();\n\n    if (!web3.account) {\n      userAccount = '';\n    }\n\n    if (\n      web3.account\n      && userAccount !== web3.account\n      && web3.chainId\n      && web3.libraries[web3.chainId]\n    ) {\n      const library = getLibrary(web3.chainId);\n\n      if (!library) {\n        return;\n      }\n\n      userAccount = web3.account;\n\n      const ensAddress = await library.lookupAddress(web3.account);\n      store.dispatch(fetchAvatarByAddress({ address: ensAddress || web3.account }));\n    }\n  });\n};\n","import {\n  Action,\n  AnyAction,\n  configureStore,\n  ThunkAction,\n  ThunkDispatch,\n} from '@reduxjs/toolkit';\n\nimport balancesReducer from './stores/balances/balancesSlice';\nimport { configureBalancesSubscriber } from './stores/balances/balancesSubscriber';\nimport collectionReducer from './stores/collection/collectionSlice';\nimport configReducer from './stores/config/configSlice';\nimport indexerReducer from './stores/indexer/indexerSlice';\nimport listNftReducer from './stores/listNft/listNftSlice';\nimport metadataReducer from './stores/metadata/metadataSlice';\nimport nftActivityReducer from './stores/nftActivity/nftActivitySlice';\nimport nftDetailReducer from './stores/nftDetail/nftDetailSlice';\nimport orderDetailReducer from './stores/orderDetail/orderDetailSlice';\nimport ordersReducer from './stores/orders/ordersSlice';\nimport ownersReducer from './stores/owners/ownersSlice';\nimport profileReducer from './stores/profile/profileSlice';\nimport profileOrdersReducer from './stores/profileOrders/profileOrdersSlice';\nimport toastsReducer from './stores/toasts/toastsSlice';\nimport transactionsReducer from './stores/transactions/transactionsSlice';\nimport userReducer from './stores/user/userSlice';\nimport { configureUserSubscriber } from './stores/user/userSubscriber';\nimport web3Reducer from './stores/web3/web3Slice';\n\nexport const store = configureStore({\n  reducer: {\n    balances: balancesReducer,\n    collection: collectionReducer,\n    config: configReducer,\n    indexer: indexerReducer,\n    listNft: listNftReducer,\n    metadata: metadataReducer,\n    nftActivity: nftActivityReducer,\n    nftDetail: nftDetailReducer,\n    orders: ordersReducer,\n    orderDetail: orderDetailReducer,\n    owners: ownersReducer,\n    profile: profileReducer,\n    profileOrders: profileOrdersReducer,\n    toasts: toastsReducer,\n    transactions: transactionsReducer,\n    user: userReducer,\n    web3: web3Reducer,\n  },\n});\n\nconfigureBalancesSubscriber();\nconfigureUserSubscriber();\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = ThunkDispatch<RootState, unknown, AnyAction>;\nexport type AppThunkApiConfig = { dispatch: AppDispatch; state: RootState }\nexport type AppThunk<ReturnType = void> = ThunkAction<\nReturnType,\nRootState,\nunknown,\nAction<string>\n>;\n\n","import { SubmittedTransactionType } from '../../../entities/SubmittedTransaction/SubmittedTransaction';\nimport { getLibrary } from '../../../helpers/ethers';\nimport { store } from '../../store';\nimport { fetchCurrencyTokenAllowance, fetchCurrencyTokenBalance, fetchUserTokens } from './balancesApi';\nimport {\n  setAllowance,\n  setBalance,\n  setIsInitialized,\n  setTokens,\n} from './balancesSlice';\n\nconst getLastTransactionHashLocalStorageKey: (walletAddress: string, chainId: number) => string = (walletAddress, chainId) => `airswap-marketplace/last-transaction/${walletAddress}/${chainId}`;\n\nexport const configureBalancesSubscriber = () => {\n  let account: string;\n  let chainId: number;\n  let lastTransactionHash: string | undefined;\n\n  store.subscribe(() => {\n    const { config, transactions, web3 } = store.getState();\n\n    const lastTransaction = transactions.transactions[0];\n    const lastSucceededTransaction = lastTransaction?.status === 'succeeded' ? lastTransaction : undefined;\n\n    if (web3.chainId && chainId !== web3.chainId && web3.chainId !== config.chainId) {\n      chainId = web3.chainId;\n\n      store.dispatch(setIsInitialized(false));\n      store.dispatch(setAllowance('0'));\n      store.dispatch(setBalance('0'));\n      store.dispatch(setTokens({}));\n\n      return;\n    }\n\n    if (!web3.chainId || !web3.account || !web3.libraries[web3.chainId] || web3.chainId !== config.chainId) {\n      return;\n    }\n\n    const library = getLibrary(web3.chainId);\n    const lastTransactionHashKey = getLastTransactionHashLocalStorageKey(web3.account, web3.chainId);\n\n    lastTransactionHash = localStorage.getItem(lastTransactionHashKey) || undefined;\n\n    if (!library) {\n      return;\n    }\n\n    if (account !== web3.account || chainId !== web3.chainId) {\n      account = web3.account;\n      chainId = web3.chainId;\n\n      store.dispatch(setIsInitialized(false));\n\n      Promise.all([\n        store.dispatch(fetchCurrencyTokenBalance({\n          chainId,\n          provider: library,\n          collectionTokenAddress: config.currencyToken,\n          walletAddress: account,\n        })),\n\n        store.dispatch(fetchCurrencyTokenAllowance({\n          chainId,\n          provider: library,\n          collectionTokenAddress: config.currencyToken,\n          walletAddress: account,\n        })),\n\n        store.dispatch(fetchUserTokens({\n          provider: library,\n          walletAddress: account,\n          collectionToken: config.collectionToken,\n        })),\n      ]).then(() => {\n        store.dispatch(setIsInitialized(true));\n      });\n    }\n\n    if (lastSucceededTransaction && lastSucceededTransaction.hash !== lastTransactionHash) {\n      localStorage.setItem(lastTransactionHashKey, lastSucceededTransaction.hash);\n\n      if (lastSucceededTransaction.type === SubmittedTransactionType.order) {\n        store.dispatch(fetchUserTokens({\n          provider: library,\n          walletAddress: web3.account,\n          collectionToken: config.collectionToken,\n        }));\n\n        store.dispatch(fetchCurrencyTokenBalance({\n          chainId: web3.chainId,\n          provider: library,\n          collectionTokenAddress: config.currencyToken,\n          walletAddress: web3.account,\n        }));\n      }\n\n      if (lastSucceededTransaction.type === SubmittedTransactionType.erc20Approval) {\n        store.dispatch(fetchCurrencyTokenAllowance({\n          chainId: web3.chainId,\n          provider: library,\n          collectionTokenAddress: config.currencyToken,\n          walletAddress: web3.account,\n        }));\n      }\n    }\n  });\n};\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\n\nimport { Alchemy } from 'alchemy-sdk';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './App';\nimport { getAlchemyChain } from './helpers/alchemy';\nimport { store } from './redux/store';\nimport reportWebVitals from './reportWebVitals';\n\nimport './styles/global.scss';\n\nwindow.alchemy = new Alchemy({\n  apiKey: process.env.REACT_APP_ALCHEMY_API_KEY,\n  network: getAlchemyChain(+(process.env.REACT_APP_CHAIN_ID || '1')),\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}